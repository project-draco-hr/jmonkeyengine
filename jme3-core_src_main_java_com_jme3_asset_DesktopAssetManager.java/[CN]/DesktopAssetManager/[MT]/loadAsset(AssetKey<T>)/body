{
  if (key == null)   throw new IllegalArgumentException("key cannot be null");
  for (  AssetEventListener listener : eventListeners) {
    listener.assetRequested(key);
  }
  AssetCache cache=handler.getCache(key.getCacheType());
  AssetProcessor proc=handler.getProcessor(key.getProcessorType());
  Object obj=cache != null ? cache.getFromCache(key) : null;
  if (obj == null) {
    AssetInfo info=handler.tryLocate(key);
    if (info == null) {
      if (handler.getParentKey() != null) {
        for (        AssetEventListener listener : eventListeners) {
          listener.assetDependencyNotFound(handler.getParentKey(),key);
        }
      }
      throw new AssetNotFoundException(key.toString());
    }
    obj=loadLocatedAsset(key,info,proc,cache);
  }
  T clone=(T)obj;
  if (obj instanceof CloneableSmartAsset) {
    clone=registerAndCloneSmartAsset(key,clone,proc,cache);
  }
  return clone;
}
