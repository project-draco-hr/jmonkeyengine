{
  LOGGER.log(Level.FINE,"Getting tracks!");
  IpoHelper ipoHelper=blenderContext.getHelper(IpoHelper.class);
  int fps=blenderContext.getBlenderKey().getFps();
  Structure chanbase=(Structure)actionStructure.getFieldValue("chanbase");
  List<Structure> actionChannels=chanbase.evaluateListBase();
  List<BoneTrack> tracks=new ArrayList<BoneTrack>();
  for (  Structure bActionChannel : actionChannels) {
    String name=bActionChannel.getFieldValue("name").toString();
    int boneIndex=skeleton.getBoneIndex(name);
    if (boneIndex >= 0) {
      Pointer p=(Pointer)bActionChannel.getFieldValue("ipo");
      if (!p.isNull()) {
        Structure ipoStructure=p.fetchData().get(0);
        Bone bone=skeleton.getBone(boneIndex);
        Ipo ipo=ipoHelper.fromIpoStructure(ipoStructure,blenderContext);
        if (ipo != null) {
          tracks.add((BoneTrack)ipo.calculateTrack(boneIndex,bone.getLocalPosition(),bone.getLocalRotation(),bone.getLocalScale(),0,ipo.getLastFrame(),fps,false));
        }
      }
    }
  }
  this.equaliseBoneTracks(tracks);
  return tracks.toArray(new BoneTrack[tracks.size()]);
}
