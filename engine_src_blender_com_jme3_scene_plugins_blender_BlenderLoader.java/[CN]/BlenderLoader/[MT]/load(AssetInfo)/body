{
  try {
    this.setup(assetInfo);
    BlenderKey blenderKey=blenderContext.getBlenderKey();
    LoadingResults loadingResults=blenderKey.prepareLoadingResults();
    WorldData worldData=null;
    for (    FileBlockHeader block : blocks) {
switch (block.getCode()) {
case FileBlockHeader.BLOCK_OB00:
        Object object=this.toObject(block.getStructure(blenderContext));
      if (object instanceof LightNode && (blenderKey.getFeaturesToLoad() & FeaturesToLoad.LIGHTS) != 0) {
        loadingResults.addLight((LightNode)object);
      }
 else       if (object instanceof CameraNode && (blenderKey.getFeaturesToLoad() & FeaturesToLoad.CAMERAS) != 0) {
        loadingResults.addCamera((CameraNode)object);
      }
 else       if (object instanceof Node && (blenderKey.getFeaturesToLoad() & FeaturesToLoad.OBJECTS) != 0) {
        LOGGER.log(Level.INFO,"{0}: {1}--> {2}",new Object[]{((Node)object).getName(),((Node)object).getLocalTranslation().toString(),((Node)object).getParent() == null ? "null" : ((Node)object).getParent().getName()});
        if (this.isRootObject(loadingResults,(Node)object)) {
          loadingResults.addObject((Node)object);
        }
      }
    break;
case FileBlockHeader.BLOCK_SC00:
  if ((blenderKey.getFeaturesToLoad() & FeaturesToLoad.SCENES) != 0) {
    loadingResults.addScene(this.toScene(block.getStructure(blenderContext)));
  }
break;
case FileBlockHeader.BLOCK_WO00:
if (blenderKey.isLoadUnlinkedAssets() && worldData == null) {
Structure worldStructure=block.getStructure(blenderContext);
String worldName=worldStructure.getName();
if (blenderKey.getUsedWorld() == null || blenderKey.getUsedWorld().equals(worldName)) {
  worldData=this.toWorldData(worldStructure);
  if ((blenderKey.getFeaturesToLoad() & FeaturesToLoad.LIGHTS) != 0) {
    loadingResults.addLight(worldData.getAmbientLight());
  }
}
}
break;
}
}
blenderContext.dispose();
return loadingResults;
}
 catch (BlenderFileException e) {
LOGGER.log(Level.SEVERE,e.getMessage(),e);
}
return null;
}
