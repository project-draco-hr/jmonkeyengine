{
  float cn1, cn2, cn3, cn4, cn5, cn6, i;
  float ox, oy, oz, jx, jy, jz;
  float n=0.5f;
  int ix, iy, iz, b00, b01, b10, b11, b20, b21;
  ox=x - (ix=(int)Math.floor(x));
  oy=y - (iy=(int)Math.floor(y));
  oz=z - (iz=(int)Math.floor(z));
  jx=ox - 1;
  jy=oy - 1;
  jz=oz - 1;
  cn1=ox * ox;
  cn2=oy * oy;
  cn3=oz * oz;
  cn4=jx * jx;
  cn5=jy * jy;
  cn6=jz * jz;
  cn1=1.0f - 3.0f * cn1 + 2.0f * cn1 * ox;
  cn2=1.0f - 3.0f * cn2 + 2.0f * cn2 * oy;
  cn3=1.0f - 3.0f * cn3 + 2.0f * cn3 * oz;
  cn4=1.0f - 3.0f * cn4 - 2.0f * cn4 * jx;
  cn5=1.0f - 3.0f * cn5 - 2.0f * cn5 * jy;
  cn6=1.0f - 3.0f * cn6 - 2.0f * cn6 * jz;
  b00=hash[hash[ix & 255] + (iy & 255)];
  b10=hash[hash[ix + 1 & 255] + (iy & 255)];
  b01=hash[hash[ix & 255] + (iy + 1 & 255)];
  b11=hash[hash[ix + 1 & 255] + (iy + 1 & 255)];
  b20=iz & 255;
  b21=iz + 1 & 255;
  i=cn1 * cn2 * cn3;
  int hIndex=3 * hash[b20 + b00];
  n+=i * (hashvectf[hIndex] * ox + hashvectf[hIndex + 1] * oy + hashvectf[hIndex + 2] * oz);
  i=cn1 * cn2 * cn6;
  hIndex=3 * hash[b21 + b00];
  n+=i * (hashvectf[hIndex] * ox + hashvectf[hIndex + 1] * oy + hashvectf[hIndex + 2] * jz);
  i=cn1 * cn5 * cn3;
  hIndex=3 * hash[b20 + b01];
  n+=i * (hashvectf[hIndex] * ox + hashvectf[hIndex + 1] * jy + hashvectf[hIndex + 2] * oz);
  i=cn1 * cn5 * cn6;
  hIndex=3 * hash[b21 + b01];
  n+=i * (hashvectf[hIndex] * ox + hashvectf[hIndex + 1] * jy + hashvectf[hIndex + 2] * jz);
  i=cn4 * cn2 * cn3;
  hIndex=3 * hash[b20 + b10];
  n+=i * (hashvectf[hIndex] * jx + hashvectf[hIndex + 1] * oy + hashvectf[hIndex + 2] * oz);
  i=cn4 * cn2 * cn6;
  hIndex=3 * hash[b21 + b10];
  n+=i * (hashvectf[hIndex] * jx + hashvectf[hIndex + 1] * oy + hashvectf[hIndex + 2] * jz);
  i=cn4 * cn5 * cn3;
  hIndex=3 * hash[b20 + b11];
  n+=i * (hashvectf[hIndex] * jx + hashvectf[hIndex + 1] * jy + hashvectf[hIndex + 2] * oz);
  i=cn4 * cn5 * cn6;
  hIndex=3 * hash[b21 + b11];
  n+=i * (hashvectf[hIndex] * jx + hashvectf[hIndex + 1] * jy + hashvectf[hIndex + 2] * jz);
  if (n < 0.0f) {
    n=0.0f;
  }
 else   if (n > 1.0f) {
    n=1.0f;
  }
  return n;
}
