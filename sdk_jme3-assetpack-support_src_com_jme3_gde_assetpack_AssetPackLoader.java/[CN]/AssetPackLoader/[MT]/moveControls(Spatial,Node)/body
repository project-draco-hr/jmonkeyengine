{
  AnimControl control=to.getControl(AnimControl.class);
  AnimControl control2=from.getControl(AnimControl.class);
  if (control == null) {
    control=new AnimControl(to,control2.getTargets(),control2.getSkeleton());
  }
  Collection<String> names=control.getAnimationNames();
  Collection<String> names2=new LinkedList<String>(control2.getAnimationNames());
  for (Iterator<String> it=names.iterator(); it.hasNext(); ) {
    String string=it.next();
    names2.remove(string);
    BoneAnimation anim=control.getAnim(string);
    BoneTrack[] tracks=anim.getTracks();
    BoneAnimation anim2=control2.getAnim(string);
    if (anim2 != null) {
      BoneTrack[] tracks2=anim2.getTracks();
      BoneTrack[] newTracks=new BoneTrack[tracks.length + tracks2.length];
      for (int i=0; i < tracks.length; i++) {
        newTracks[i]=tracks[i];
      }
      for (int i=tracks.length; i < tracks2.length; i++) {
        newTracks[i]=tracks2[i - tracks.length];
      }
      anim.setTracks(newTracks);
    }
  }
  for (Iterator<String> it=names2.iterator(); it.hasNext(); ) {
    String string=it.next();
    BoneAnimation anim2=control2.getAnim(string);
    BoneTrack[] tracks2=anim2.getTracks();
    BoneAnimation anim=control.getAnim(string);
    if (anim != null) {
      BoneTrack[] tracks=anim.getTracks();
      BoneTrack[] newTracks=new BoneTrack[tracks.length + tracks2.length];
      for (int i=0; i < tracks.length; i++) {
        newTracks[i]=tracks[i];
      }
      for (int i=tracks.length; i < tracks2.length; i++) {
        newTracks[i]=tracks2[i - tracks.length];
      }
      anim.setTracks(newTracks);
    }
 else {
      control.addAnim(anim2);
    }
  }
}
