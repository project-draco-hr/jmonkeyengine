{
  Element assetElement=config.getAssetElement();
  NodeList fileNodeList=assetElement.getElementsByTagName("file");
  ProjectAssetManager currentProjectAssetManager=null;
  try {
    currentProjectAssetManager=SceneApplication.getApplication().getCurrentSceneRequest().getManager();
    if (currentProjectAssetManager == null) {
      Logger.getLogger(AssetPackLoader.class.getName()).log(Level.SEVERE,"Could not get project asset manager!");
      return;
    }
  }
 catch (  Exception e) {
    Logger.getLogger(AssetPackLoader.class.getName()).log(Level.SEVERE,"Could not get project asset manager!");
    return;
  }
  for (int i=0; i < fileNodeList.getLength(); i++) {
    Element fileElem=(Element)fileNodeList.item(i);
    String type=fileElem.getAttribute("type");
    if ("texture".equals(type) || "sound".equals(type) || "materialdef".equals(type)|| "shader".equals(type)|| "other".equals(type)) {
      try {
        String src=pm.getAbsoluteAssetPath(fileElem.getAttribute("path"));
        if (src == null) {
          Logger.getLogger(AssetPackLoader.class.getName()).log(Level.SEVERE,"Could not find texture with manager!");
          return;
        }
        FileObject srcFile=FileUtil.toFileObject(new File(src));
        String destName=currentProjectAssetManager.getAssetFolderName() + "/" + fileElem.getAttribute("path");
        String destFolder=destName.replace("\\","/");
        destFolder=destFolder.substring(0,destFolder.lastIndexOf("/"));
        FileObject folder=FileUtil.createFolder(new File(destFolder));
        srcFile.copy(folder,srcFile.getName(),srcFile.getExt());
      }
 catch (      IOException ex) {
        Logger.getLogger(AssetPackLoader.class.getName()).log(Level.SEVERE,"Could not copy texture: {0}",ex.getMessage());
      }
    }
  }
  List<NodeList> varAssets=config.getVariationAssets();
  if (varAssets != null) {
    for (    NodeList nodeList : varAssets) {
      addVariationFiles(nodeList,pm);
    }
  }
  return;
}
