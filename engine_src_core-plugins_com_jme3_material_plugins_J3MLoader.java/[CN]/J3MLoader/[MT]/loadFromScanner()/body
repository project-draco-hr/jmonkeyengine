{
  nextStatement();
  boolean extending=false;
  String name=null;
  String word=scan.next();
  if (word.equals("Material")) {
    extending=true;
  }
 else   if (word.equals("MaterialDef")) {
    extending=false;
  }
 else {
    throw new IOException("Specified file is not a Material file");
  }
  nextStatement();
  word=readString("[(\\{)(//)\n:]");
  if (word == null || word.equals(""))   throw new IOException("Material name cannot be empty");
  name=word;
  nextStatement();
  if (scan.hasNext(":")) {
    if (!extending) {
      throw new IOException("Must use 'Material' when extending.");
    }
    scan.next();
    String extendedMat=readString("\\{");
    MaterialDef def=(MaterialDef)owner.loadAsset(new AssetKey(extendedMat));
    if (def == null)     throw new IOException("Extended material " + extendedMat + " cannot be found.");
    material=new Material(def);
  }
 else   if (scan.hasNext("\\{")) {
    if (extending) {
      throw new IOException("Expected ':', got '{'");
    }
    materialDef=new MaterialDef(owner,name);
    materialDef.setAssetName(fileName);
  }
  scan.next();
  nextStatement();
  while (true) {
    if (scan.hasNext("\\}")) {
      scan.next();
      break;
    }
    word=scan.next();
    if (extending) {
      if (word.equals("MaterialParameters")) {
        readExtendingMaterialParams();
        nextStatement();
      }
 else       if (word.equals("AdditionalRenderState")) {
        readAdditionalRenderState();
        nextStatement();
      }
 else       if (word.equals("Transparent")) {
        readTransparentStatement();
        nextStatement();
      }
    }
 else {
      if (word.equals("Technique")) {
        readTechnique();
        nextStatement();
      }
 else       if (word.equals("MaterialParameters")) {
        readMaterialParams();
        nextStatement();
      }
 else {
        throw new IOException("Expected material statement, got '" + scan.next() + "'");
      }
    }
  }
}
