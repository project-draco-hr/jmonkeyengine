{
  String name=readString(":");
  throwIfNequal(":",scan.next());
  MatParam p=material.getMaterialDef().getMaterialParam(name);
  if (p == null)   throw new IOException("The material parameter: " + name + " is undefined.");
  VarType type=p.getVarType();
  if (type.isTextureType()) {
    String texturePath=readString("[\n;(\\})]");
    boolean flipY=false;
    boolean repeat=false;
    if (texturePath.startsWith("Flip Repeat ")) {
      texturePath=texturePath.substring(12).trim();
      flipY=true;
      repeat=true;
    }
 else     if (texturePath.startsWith("Flip ")) {
      texturePath=texturePath.substring(5).trim();
      flipY=true;
    }
 else     if (texturePath.startsWith("Repeat ")) {
      texturePath=texturePath.substring(7).trim();
      repeat=true;
    }
    TextureKey key=new TextureKey(texturePath,flipY);
    key.setAsCube(type == VarType.TextureCubeMap);
    key.setGenerateMips(true);
    Texture tex=owner.loadTexture(key);
    if (tex != null) {
      if (repeat)       tex.setWrap(WrapMode.Repeat);
      material.setTextureParam(name,type,tex);
    }
  }
 else {
switch (type) {
case Float:
      material.setParam(name,type,scan.nextFloat());
    break;
case Vector2:
  material.setParam(name,type,new Vector2f(scan.nextFloat(),scan.nextFloat()));
break;
case Vector3:
material.setParam(name,type,new Vector3f(scan.nextFloat(),scan.nextFloat(),scan.nextFloat()));
break;
case Vector4:
material.setParam(name,type,new ColorRGBA(scan.nextFloat(),scan.nextFloat(),scan.nextFloat(),scan.nextFloat()));
break;
case Int:
material.setParam(name,type,scan.nextInt());
break;
case Boolean:
material.setParam(name,type,scan.nextBoolean());
break;
default :
throw new UnsupportedOperationException("Unknown type: " + type);
}
}
}
