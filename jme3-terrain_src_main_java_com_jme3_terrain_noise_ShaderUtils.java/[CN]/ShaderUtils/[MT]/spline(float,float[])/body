{
  float CR00=-0.5f;
  float CR01=1.5f;
  float CR02=-1.5f;
  float CR03=0.5f;
  float CR10=1.0f;
  float CR11=-2.5f;
  float CR12=2.0f;
  float CR13=-0.5f;
  float CR20=-0.5f;
  float CR21=0.0f;
  float CR22=0.5f;
  float CR23=0.0f;
  float CR30=0.0f;
  float CR31=1.0f;
  float CR32=0.0f;
  float CR33=0.0f;
  int span;
  int nspans=knot.length - 3;
  float c0, c1, c2, c3;
  if (nspans < 1) {
    throw new RuntimeException("Spline has too few knots.");
  }
  x=ShaderUtils.clamp(x,0,1) * nspans;
  span=(int)x;
  if (span >= knot.length - 3) {
    span=knot.length - 3;
  }
  x-=span;
  c3=CR00 * knot[span + 0] + CR01 * knot[span + 1] + CR02 * knot[span + 2] + CR03 * knot[span + 3];
  c2=CR10 * knot[span + 0] + CR11 * knot[span + 1] + CR12 * knot[span + 2] + CR13 * knot[span + 3];
  c1=CR20 * knot[span + 0] + CR21 * knot[span + 1] + CR22 * knot[span + 2] + CR23 * knot[span + 3];
  c0=CR30 * knot[span + 0] + CR31 * knot[span + 1] + CR32 * knot[span + 2] + CR33 * knot[span + 3];
  return ((c3 * x + c2) * x + c1) * x + c0;
}
