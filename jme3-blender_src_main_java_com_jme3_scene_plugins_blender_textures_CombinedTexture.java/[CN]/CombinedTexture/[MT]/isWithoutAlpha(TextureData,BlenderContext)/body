{
  ColorBand colorBand=new ColorBand(textureData.textureStructure,blenderContext);
  if (!colorBand.hasTransparencies()) {
    int type=((Number)textureData.textureStructure.getFieldValue("type")).intValue();
    if (type == TextureHelper.TEX_MAGIC) {
      return true;
    }
    if (type == TextureHelper.TEX_VORONOI) {
      int voronoiColorType=((Number)textureData.textureStructure.getFieldValue("vn_coltype")).intValue();
      return voronoiColorType != 0;
    }
    if (type == TextureHelper.TEX_CLOUDS) {
      int sType=((Number)textureData.textureStructure.getFieldValue("stype")).intValue();
      return sType == 1;
    }
    if (type == TextureHelper.TEX_IMAGE) {
      Image image=textureData.texture.getImage();
switch (image.getFormat()) {
case BGR8:
case DXT1:
case Luminance16F:
case Luminance32F:
case Luminance8:
case RGB111110F:
case RGB16F:
case RGB32F:
case RGB565:
case RGB8:
        return true;
case ABGR8:
case DXT1A:
case DXT3:
case DXT5:
case Luminance16FAlpha16F:
case Luminance8Alpha8:
case RGBA16F:
case RGBA32F:
case RGBA8:
case ARGB8:
case BGRA8:
case RGB5A1:
      PixelInputOutput pixelInputOutput=PixelIOFactory.getPixelIO(image.getFormat());
    TexturePixel pixel=new TexturePixel();
  int depth=image.getDepth() == 0 ? 1 : image.getDepth();
for (int layerIndex=0; layerIndex < depth; ++layerIndex) {
  for (int x=0; x < image.getWidth(); ++x) {
    for (int y=0; y < image.getHeight(); ++y) {
      pixelInputOutput.read(image,layerIndex,pixel,x,y);
      if (pixel.alpha < 1.0f) {
        return false;
      }
    }
  }
}
return true;
default :
throw new IllegalStateException("Unknown image format: " + image.getFormat());
}
}
}
return false;
}
