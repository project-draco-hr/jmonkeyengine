def image_magick(self, texture, infile):
    print ('IMAGE MAGICK', infile)
    exe = CONFIG['IMAGE_MAGICK_CONVERT']
    if (not os.path.isfile(exe)):
        Report.warnings.append('ImageMagick not installed!')
        print ('ERROR: can not find Image Magick - convert', exe)
        return
    cmd = [exe, infile]
    (x, y) = texture.image.size
    ax = texture.image.resize_x
    ay = texture.image.resize_y
    if (texture.image.use_convert_format and (texture.image.convert_format == 'jpg')):
        cmd.append('-quality')
        cmd.append(('%s' % texture.image.jpeg_quality))
    if texture.image.use_resize_half:
        cmd.append('-resize')
        cmd.append(('%sx%s' % ((x / 2), (y / 2))))
    elif (texture.image.use_resize_absolute and ((x > ax) or (y > ay))):
        cmd.append('-resize')
        cmd.append(('%sx%s' % (ax, ay)))
    elif ((x > CONFIG['MAX_TEXTURE_SIZE']) or (y > CONFIG['MAX_TEXTURE_SIZE'])):
        cmd.append('-resize')
        cmd.append(str(CONFIG['MAX_TEXTURE_SIZE']))
    if texture.image.use_color_quantize:
        if texture.image.use_color_quantize_dither:
            cmd.append('+dither')
        cmd.append('-colors')
        cmd.append(str(texture.image.color_quantize))
    (path, name) = os.path.split(infile)
    outfile = os.path.join(path, self._reformat(name, texture.image))
    if outfile.endswith('.dds'):
        temp = os.path.join(path, '_temp_.png')
        cmd.append(temp)
        print ('IMAGE MAGICK: %s' % cmd)
        subprocess.call(cmd)
        self.nvcompress(texture, temp, outfile=outfile)
    else:
        cmd.append(outfile)
        print ('IMAGE MAGICK: %s' % cmd)
        subprocess.call(cmd)
