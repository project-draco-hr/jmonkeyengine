def compute_rest(self):
    if self.parent:
        inverseParentMatrix = self.parent.inverse_total_trans
    elif self.fixUpAxis:
        inverseParentMatrix = self.flipMat
    else:
        inverseParentMatrix = mathutils.Matrix(((1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1)))
    self.ogre_rest_matrix = self.matrix.copy()
    self.inverse_total_trans = self.ogre_rest_matrix.inverted()
    self.ogre_rest_matrix = (inverseParentMatrix * self.ogre_rest_matrix)
    self.inverse_ogre_rest_matrix = self.ogre_rest_matrix.inverted()
    for child in self.children:
        child.compute_rest()
