def execute(self, context):
    mat = context.active_object.active_material
    nodes = bpyShaders.get_or_create_material_passes(mat)
    node = nodes[self.INDEX]
    node.material = bpy.data.materials.new(name=('%s.LAYER%s' % (mat.name, self.INDEX)))
    node.material.use_fixed_pipeline = False
    node.material.offset_z = ((self.INDEX * 2) + 2)
    return {'FINISHED'}
