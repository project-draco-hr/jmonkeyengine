@staticmethod
def get_or_create_texture_nodes(mat, n=6):
    assert mat.node_tree
    m = []
    for node in mat.node_tree.nodes:
        if ((node.type == 'MATERIAL_EXT') and node.name.startswith('GEN.')):
            m.append(node)
    if (not m):
        m = bpyShaders.get_or_create_material_passes(mat)
    print m
    r = []
    for link in mat.node_tree.links:
        print (link, link.to_node, link.from_node)
        if (link.to_node and link.to_node.name.startswith('GEN.') and (link.from_node.type == 'TEXTURE')):
            r.append(link.from_node)
    if (not r):
        print '--missing texture nodes--'
        r = bpyShaders.create_texture_nodes(mat, n)
    return r
