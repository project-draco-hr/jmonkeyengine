{
  super();
  canvas=new Canvas(){
    @Override public void addNotify(){
      super.addNotify();
      if (renderThread != null && renderThread.getState() == Thread.State.TERMINATED)       return;
      if (renderThread == null) {
        logger.log(Level.INFO,"EDT: Creating OGL thread.");
        renderThread=new Thread(LwjglCanvas.this,"LWJGL Renderer Thread");
        renderThread.start();
      }
 else       if (needClose.get()) {
        return;
      }
      logger.log(Level.INFO,"EDT: Notifying OGL that canvas is visible..");
      needRestoreCanvas.set(true);
    }
    @Override public void removeNotify(){
      if (needClose.get()) {
        logger.log(Level.INFO,"EDT: Application is stopped. Not restoring canvas.");
        super.removeNotify();
        return;
      }
      logger.log(Level.INFO,"EDT: Sending destroy request..");
      needDestroyCanvas.set(true);
      try {
        actionRequiredBarrier.await();
      }
 catch (      InterruptedException ex) {
        logger.log(Level.SEVERE,"EDT: Interrupted! ",ex);
      }
catch (      BrokenBarrierException ex) {
        logger.log(Level.SEVERE,"EDT: Broken barrier! ",ex);
      }
      logger.log(Level.INFO,"EDT: Acknowledged receipt of destroy request!");
      actionRequiredBarrier.reset();
      super.removeNotify();
    }
  }
;
  canvas.setFocusable(true);
  canvas.setIgnoreRepaint(true);
}
