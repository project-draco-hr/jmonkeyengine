{
  Spatial badModel=assetManager.loadModel("Models/TangentBugs/test.blend");
  Material mat=assetManager.loadMaterial("Textures/BumpMapTest/Tangent.j3m");
  badModel.setMaterial(mat);
  rootNode.attachChild(badModel);
  final Material debugMat=assetManager.loadMaterial("Common/Materials/VertexColor.j3m");
  rootNode.depthFirstTraversal(new SceneGraphVisitorAdapter(){
    @Override public void visit(    Geometry g){
      Mesh m=g.getMesh();
      Material mat=g.getMaterial();
      TangentBinormalGenerator.generate(m);
      Geometry debug=new Geometry("Debug Teapot",TangentBinormalGenerator.genTbnLines(g.getMesh(),0.2f));
      debug.getMesh().setLineWidth(1);
      debug.setMaterial(debugMat);
      debug.setCullHint(Spatial.CullHint.Never);
      debug.setLocalTransform(debug.getLocalTransform());
      g.getParent().attachChild(debug);
    }
  }
);
  DirectionalLight dl=new DirectionalLight();
  dl.setDirection(new Vector3f(-0.8f,-0.6f,-0.08f).normalizeLocal());
  dl.setColor(new ColorRGBA(1,1,1,1));
  rootNode.addLight(dl);
  lightMdl=new Geometry("Light",new Sphere(10,10,0.1f));
  lightMdl.setMaterial(assetManager.loadMaterial("Common/Materials/RedColor.j3m"));
  lightMdl.getMesh().setStatic();
  rootNode.attachChild(lightMdl);
  pl=new PointLight();
  pl.setColor(ColorRGBA.White);
}
