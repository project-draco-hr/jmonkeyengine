{
  count=Math.max(mesh.getInstanceCount(),count);
  VertexBuffer interleavedData=mesh.getBuffer(Type.InterleavedData);
  if (interleavedData != null && interleavedData.isUpdateNeeded()) {
    updateBufferData(interleavedData);
  }
  VertexBuffer indices;
  if (mesh.getNumLodLevels() > 0) {
    indices=mesh.getLodLevel(lod);
  }
 else {
    indices=mesh.getBuffer(Type.Index);
  }
  if (instanceData != null) {
    for (    VertexBuffer vb : instanceData) {
      setVertexAttrib(vb,null);
    }
  }
  for (  VertexBuffer vb : mesh.getBufferList().getArray()) {
    if (vb.getBufferType() == Type.InterleavedData || vb.getUsage() == Usage.CpuOnly || vb.getBufferType() == Type.Index) {
      continue;
    }
    if (vb.getStride() == 0) {
      setVertexAttrib(vb);
    }
 else {
      setVertexAttrib(vb,interleavedData);
    }
  }
  if (indices != null) {
    drawTriangleList(indices,mesh,count);
  }
 else {
    drawTriangleArray(mesh.getMode(),count,mesh.getVertexCount());
  }
  clearVertexAttribs();
  clearTextureUnits();
}
