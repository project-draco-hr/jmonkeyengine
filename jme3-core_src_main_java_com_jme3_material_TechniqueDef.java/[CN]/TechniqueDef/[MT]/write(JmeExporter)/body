{
  OutputCapsule oc=ex.getCapsule(this);
  oc.write(name,"name",null);
  oc.write(shaderName.get(Shader.ShaderType.Vertex),"vertName",null);
  oc.write(shaderName.get(Shader.ShaderType.Fragment),"fragName",null);
  oc.write(shaderName.get(Shader.ShaderType.Geometry),"geomName",null);
  oc.write(shaderName.get(Shader.ShaderType.TessellationControl),"tsctrlName",null);
  oc.write(shaderName.get(Shader.ShaderType.TessellationEvaluation),"tsevalName",null);
  oc.write(shaderLanguage.get(Shader.ShaderType.Vertex),"vertLanguage",null);
  oc.write(shaderLanguage.get(Shader.ShaderType.Fragment),"fragLanguage",null);
  oc.write(shaderLanguage.get(Shader.ShaderType.Geometry),"geomLanguage",null);
  oc.write(shaderLanguage.get(Shader.ShaderType.TessellationControl),"tsctrlLanguage",null);
  oc.write(shaderLanguage.get(Shader.ShaderType.TessellationEvaluation),"tsevalLanguage",null);
  oc.write(presetDefines,"presetDefines",null);
  oc.write(lightMode,"lightMode",LightMode.Disable);
  oc.write(shadowMode,"shadowMode",ShadowMode.Disable);
  oc.write(renderState,"renderState",null);
  oc.write(usesShaders,"usesShaders",false);
  oc.write(usesNodes,"usesNodes",false);
  oc.writeSavableArrayList((ArrayList)shaderNodes,"shaderNodes",null);
  oc.write(shaderGenerationInfo,"shaderGenerationInfo",null);
}
