{
  this.featureOMA=featureOMA;
  this.blenderContext=blenderContext;
  Node spatial=(Node)blenderContext.getLoadedFeature(featureOMA,LoadedDataType.FEATURE);
  if (blenderContext.getMarkerValue(ObjectHelper.ARMATURE_NODE_MARKER,spatial) != null) {
    skeleton=blenderContext.getSkeleton(featureOMA);
    Node nodeWithAnimationControl=blenderContext.getControlledNode(skeleton);
    animControl=nodeWithAnimationControl.getControl(AnimControl.class);
    boneStartTransforms=new HashMap<Bone,Transform>();
    for (int i=0; i < skeleton.getBoneCount(); ++i) {
      Bone bone=skeleton.getBone(i);
      boneStartTransforms.put(bone,new Transform(bone.getBindPosition(),bone.getBindRotation(),bone.getBindScale()));
    }
  }
 else {
    if (rootNode && spatial.getParent() != null) {
      throw new IllegalStateException("Given spatial must be a root node!");
    }
    this.spatial=spatial;
    spatialStartTransform=spatial.getLocalTransform().clone();
  }
  name='>' + spatial.getName() + '<';
  if (skeleton != null) {
    Node node=blenderContext.getControlledNode(skeleton);
    Long animatedNodeOMA=((Number)blenderContext.getMarkerValue(ObjectHelper.OMA_MARKER,node)).longValue();
    animations=blenderContext.getAnimations(animatedNodeOMA);
  }
 else {
    animations=blenderContext.getAnimations(featureOMA);
    for (    Spatial child : spatial.getChildren()) {
      if (child instanceof Node) {
        children.add(new SimulationNode((Long)blenderContext.getMarkerValue(ObjectHelper.OMA_MARKER,child),blenderContext,false));
      }
    }
  }
}
