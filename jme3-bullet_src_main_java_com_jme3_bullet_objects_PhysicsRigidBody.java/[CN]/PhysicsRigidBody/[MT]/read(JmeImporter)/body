{
  super.read(e);
  InputCapsule capsule=e.getCapsule(this);
  float mass=capsule.readFloat("mass",1.0f);
  this.mass=mass;
  rebuildRigidBody();
  setGravity((Vector3f)capsule.readSavable("gravity",Vector3f.ZERO.clone()));
  setFriction(capsule.readFloat("friction",0.5f));
  setKinematic(capsule.readBoolean("kinematic",false));
  setRestitution(capsule.readFloat("restitution",0));
  Vector3f angularFactor=(Vector3f)capsule.readSavable("angularFactor",Vector3f.NAN.clone());
  if (angularFactor == Vector3f.NAN) {
    setAngularFactor(capsule.readFloat("angularFactor",1));
  }
 else {
    setAngularFactor(angularFactor);
    setLinearFactor((Vector3f)capsule.readSavable("linearFactor",Vector3f.UNIT_XYZ.clone()));
  }
  setDamping(capsule.readFloat("linearDamping",0),capsule.readFloat("angularDamping",0));
  setSleepingThresholds(capsule.readFloat("linearSleepingThreshold",0.8f),capsule.readFloat("angularSleepingThreshold",1.0f));
  setCcdMotionThreshold(capsule.readFloat("ccdMotionThreshold",0));
  setCcdSweptSphereRadius(capsule.readFloat("ccdSweptSphereRadius",0));
  setPhysicsLocation((Vector3f)capsule.readSavable("physicsLocation",new Vector3f()));
  setPhysicsRotation((Matrix3f)capsule.readSavable("physicsRotation",new Matrix3f()));
  joints=capsule.readSavableArrayList("joints",null);
}
