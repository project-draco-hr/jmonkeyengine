{
  ProgressHandle handle=ProgressHandleFactory.createHandle("Converting OgreBinary");
  handle.start();
  OgreXMLConvertOptions options=new OgreXMLConvertOptions(getPrimaryFile().getPath());
  options.setBinaryFile(true);
  OgreXMLConvert conv=new OgreXMLConvert();
  conv.doConvert(options,handle);
  if (getPrimaryFile().existsExt("skeleton")) {
    OgreXMLConvertOptions options2=new OgreXMLConvertOptions(getPrimaryFile().getParent().getFileObject(getPrimaryFile().getName(),"skeleton").getPath());
    options2.setBinaryFile(true);
    OgreXMLConvert conv2=new OgreXMLConvert();
    conv2.doConvert(options2,handle);
  }
  handle.progress("Convert Model");
  ProjectAssetManager mgr=getLookup().lookup(ProjectAssetManager.class);
  if (mgr == null) {
    DialogDisplayer.getDefault().notifyLater(new NotifyDescriptor.Message("File is not part of a project!\nCannot load without ProjectAssetManager."));
    return null;
  }
  String assetKey=mgr.getRelativeAssetPath(options.getDestFile());
  FileLock lock=null;
  try {
    lock=getPrimaryFile().lock();
    listListener.start();
    Spatial spatial=mgr.loadModel(assetKey);
    replaceXmlFiles();
    listListener.stop();
    savable=spatial;
    lock.releaseLock();
    File deleteFile=new File(options.getDestFile());
    deleteFile.delete();
    handle.finish();
    return spatial;
  }
 catch (  IOException ex) {
    Exceptions.printStackTrace(ex);
    if (lock != null) {
      lock.releaseLock();
    }
  }
  File deleteFile=new File(options.getDestFile());
  deleteFile.delete();
  handle.finish();
  return null;
}
