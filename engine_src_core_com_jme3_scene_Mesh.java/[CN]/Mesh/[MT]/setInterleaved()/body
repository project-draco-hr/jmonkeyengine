{
  ArrayList<VertexBuffer> vbs=new ArrayList<VertexBuffer>();
  for (  Entry<VertexBuffer> entry : buffers) {
    vbs.add(entry.getValue());
  }
  vbs.remove(getBuffer(Type.Index));
  int stride=0;
  for (int i=0; i < vbs.size(); i++) {
    VertexBuffer vb=vbs.get(i);
    stride+=vb.componentsLength;
    vb.getData().clear();
  }
  VertexBuffer allData=new VertexBuffer(Type.InterleavedData);
  ByteBuffer dataBuf=BufferUtils.createByteBuffer(stride * getVertexCount());
  allData.setupData(Usage.Static,-1,Format.UnsignedByte,dataBuf);
  buffers.put(Type.InterleavedData.ordinal(),allData);
  for (int vert=0; vert < getVertexCount(); vert++) {
    for (int i=0; i < vbs.size(); i++) {
      VertexBuffer vb=vbs.get(i);
switch (vb.getFormat()) {
case Float:
        FloatBuffer fb=(FloatBuffer)vb.getData();
      for (int comp=0; comp < vb.components; comp++) {
        dataBuf.putFloat(fb.get());
      }
    break;
case Byte:
case UnsignedByte:
  ByteBuffer bb=(ByteBuffer)vb.getData();
for (int comp=0; comp < vb.components; comp++) {
  dataBuf.put(bb.get());
}
break;
case Half:
case Short:
case UnsignedShort:
ShortBuffer sb=(ShortBuffer)vb.getData();
for (int comp=0; comp < vb.components; comp++) {
dataBuf.putShort(sb.get());
}
break;
case Int:
case UnsignedInt:
IntBuffer ib=(IntBuffer)vb.getData();
for (int comp=0; comp < vb.components; comp++) {
dataBuf.putInt(ib.get());
}
break;
case Double:
DoubleBuffer db=(DoubleBuffer)vb.getData();
for (int comp=0; comp < vb.components; comp++) {
dataBuf.putDouble(db.get());
}
break;
}
}
}
int offset=0;
for (VertexBuffer vb : vbs) {
vb.setOffset(offset);
vb.setStride(stride);
vb.setupData(vb.usage,vb.components,vb.format,null);
offset+=vb.componentsLength;
}
}
