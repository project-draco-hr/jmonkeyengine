{
  if (forSoftwareAnim) {
    VertexBuffer indices=getBuffer(Type.BoneIndex);
    Buffer buffer=indices.getData();
    if (buffer instanceof ByteBuffer) {
      ByteBuffer originalIndex=(ByteBuffer)buffer;
      ByteBuffer arrayIndex=ByteBuffer.allocate(originalIndex.capacity());
      originalIndex.clear();
      arrayIndex.put(originalIndex);
      indices.updateData(arrayIndex);
    }
 else     if (buffer instanceof FloatBuffer) {
      FloatBuffer originalIndex=(FloatBuffer)buffer;
      ByteBuffer arrayIndex=ByteBuffer.allocate(originalIndex.capacity());
      originalIndex.clear();
      for (int i=0; i < originalIndex.capacity(); i++) {
        arrayIndex.put((byte)originalIndex.get(i));
      }
      indices.updateData(arrayIndex);
    }
    VertexBuffer weights=getBuffer(Type.BoneWeight);
    FloatBuffer originalWeight=(FloatBuffer)weights.getData();
    FloatBuffer arrayWeight=FloatBuffer.allocate(originalWeight.capacity());
    originalWeight.clear();
    arrayWeight.put(originalWeight);
    weights.updateData(arrayWeight);
  }
 else {
    VertexBuffer indices=getBuffer(Type.BoneIndex);
    Buffer buffer=indices.getData();
    if (buffer instanceof ByteBuffer) {
      ByteBuffer bIndex=(ByteBuffer)buffer;
      final float[] rval=new float[bIndex.capacity()];
      for (int i=0; i < rval.length; i++) {
        rval[i]=bIndex.get(i);
      }
      clearBuffer(Type.BoneIndex);
      VertexBuffer ib=new VertexBuffer(Type.BoneIndex);
      ib.setupData(Usage.Stream,4,Format.Float,BufferUtils.createFloatBuffer(rval));
      setBuffer(ib);
    }
 else     if (buffer instanceof FloatBuffer) {
      FloatBuffer originalIndices=(FloatBuffer)buffer;
      FloatBuffer arrayIndices=BufferUtils.createFloatBuffer(originalIndices.capacity());
      originalIndices.clear();
      arrayIndices.put(originalIndices);
      indices.setUsage(Usage.Stream);
      indices.updateData(arrayIndices);
    }
    VertexBuffer weights=getBuffer(Type.BoneWeight);
    FloatBuffer originalWeight=(FloatBuffer)weights.getData();
    FloatBuffer arrayWeight=BufferUtils.createFloatBuffer(originalWeight.capacity());
    originalWeight.clear();
    arrayWeight.put(originalWeight);
    weights.setUsage(Usage.Static);
    weights.updateData(arrayWeight);
  }
}
