{
  LOGGER.fine("Reading traditional faces.");
  Pointer pMFace=(Pointer)meshStructure.getFieldValue("mface");
  List<Structure> mFaces=pMFace.isNotNull() ? pMFace.fetchData(blenderContext.getInputStream()) : null;
  if (mFaces != null && mFaces.size() > 0) {
    Map<String,List<Vector2f>> uvs=this.loadUVCoordinates(meshStructure,false,blenderContext);
    Map<String,Vector2f[]> uvCoordinatesForFace=new HashMap<String,Vector2f[]>();
    for (int i=0; i < mFaces.size(); ++i) {
      Structure mFace=mFaces.get(i);
      int materialNumber=((Number)mFace.getFieldValue("mat_nr")).intValue();
      boolean smooth=(((Number)mFace.getFieldValue("flag")).byteValue() & 0x01) != 0x00;
      if (uvs != null) {
        for (        Entry<String,List<Vector2f>> entry : uvs.entrySet()) {
          Vector2f[] uvCoordsForASingleFace=new Vector2f[3];
          uvCoordsForASingleFace[0]=entry.getValue().get(i * 4);
          uvCoordsForASingleFace[1]=entry.getValue().get(i * 4 + 1);
          uvCoordsForASingleFace[2]=entry.getValue().get(i * 4 + 2);
          uvCoordinatesForFace.put(entry.getKey(),uvCoordsForASingleFace);
        }
      }
      int v1=((Number)mFace.getFieldValue("v1")).intValue();
      int v2=((Number)mFace.getFieldValue("v2")).intValue();
      int v3=((Number)mFace.getFieldValue("v3")).intValue();
      int v4=((Number)mFace.getFieldValue("v4")).intValue();
      meshBuilder.appendFace(v1,v2,v3,smooth,materialNumber,uvs == null ? null : uvCoordinatesForFace,false,i);
      uvCoordinatesForFace.clear();
      if (v4 > 0) {
        if (uvs != null) {
          for (          Entry<String,List<Vector2f>> entry : uvs.entrySet()) {
            Vector2f[] uvCoordsForASingleFace=new Vector2f[3];
            uvCoordsForASingleFace[0]=entry.getValue().get(i * 4);
            uvCoordsForASingleFace[1]=entry.getValue().get(i * 4 + 2);
            uvCoordsForASingleFace[2]=entry.getValue().get(i * 4 + 3);
            uvCoordinatesForFace.put(entry.getKey(),uvCoordsForASingleFace);
          }
        }
        meshBuilder.appendFace(v1,v3,v4,smooth,materialNumber,uvs == null ? null : uvCoordinatesForFace,true,i);
        uvCoordinatesForFace.clear();
      }
    }
  }
 else {
    Pointer pMEdge=(Pointer)meshStructure.getFieldValue("medge");
    List<Structure> mEdges=pMEdge.isNotNull() ? pMEdge.fetchData(blenderContext.getInputStream()) : null;
    if (mEdges != null && mEdges.size() > 0) {
      for (int i=0; i < mEdges.size(); ++i) {
        Structure mEdge=mEdges.get(i);
        boolean smooth=(((Number)mEdge.getFieldValue("flag")).byteValue() & 0x01) != 0x00;
        int v1=((Number)mEdge.getFieldValue("v1")).intValue();
        int v2=((Number)mEdge.getFieldValue("v2")).intValue();
        meshBuilder.appendEdge(v1,v2,smooth);
      }
    }
  }
}
