{
  AssetManager assetManager=scene.assetManager;
  Image image=null;
  if (filename != null) {
    File file=new File(filename);
    if (file.exists() && file.isFile()) {
      File dir=new File(file.getParent());
      String locatorPath=dir.getAbsolutePath();
      Texture tex=null;
      try {
        assetManager.registerLocator(locatorPath,com.jme3.asset.plugins.FileLocator.class);
        tex=assetManager.loadTexture(file.getName());
      }
 catch (      Exception e) {
      }
 finally {
        assetManager.unregisterLocator(locatorPath,com.jme3.asset.plugins.FileLocator.class);
      }
      if (tex != null)       image=tex.getImage();
    }
  }
  if (image == null && relativeFilename != null) {
    File dir=new File(scene.sceneFolderName);
    String locatorPath=dir.getAbsolutePath();
    Texture tex=null;
    try {
      assetManager.registerLocator(locatorPath,com.jme3.asset.plugins.FileLocator.class);
      tex=assetManager.loadTexture(relativeFilename);
    }
 catch (    Exception e) {
    }
 finally {
      assetManager.unregisterLocator(locatorPath,com.jme3.asset.plugins.FileLocator.class);
    }
    if (tex != null)     image=tex.getImage();
  }
  if (image == null && content != null) {
    String filename=null;
    if (this.filename != null)     filename=new File(this.filename).getName();
    if (filename != null && this.relativeFilename != null)     filename=this.relativeFilename;
    if (filename != null) {
      String locatorPath=scene.sceneFilename;
      filename=scene.sceneFilename + File.separatorChar + filename;
      Texture tex=null;
      try {
        assetManager.registerLocator(locatorPath,ContentTextureLocator.class);
        tex=assetManager.loadTexture(new ContentTextureKey(filename,content));
      }
 catch (      Exception e) {
      }
 finally {
        assetManager.unregisterLocator(locatorPath,ContentTextureLocator.class);
      }
      if (tex != null)       image=tex.getImage();
    }
  }
  if (image == null) {
    if (relativeFilename != null) {
      String[] split=relativeFilename.split("[\\\\/]");
      String filename=split[split.length - 1];
      Texture tex=null;
      try {
        tex=assetManager.loadTexture(new ContentTextureKey(scene.currentAssetInfo.getKey().getFolder() + filename,content));
      }
 catch (      Exception e) {
      }
      if (tex != null)       image=tex.getImage();
    }
  }
  if (image == null)   return new Image(Image.Format.RGB8,1,1,BufferUtils.createByteBuffer((int)((long)1 * (long)1 * (long)Image.Format.RGB8.getBitsPerPixel() / 8L)),ColorSpace.Linear);
  return image;
}
