{
  this.flyCam.setMoveSpeed(10);
  Node mainScene=new Node();
  cam.setLocation(new Vector3f(-27.0f,1.0f,75.0f));
  cam.setRotation(new Quaternion(0.03f,0.9f,0f,0.4f));
  mainScene.attachChild(SkyFactory.createSky(assetManager,"Textures/Sky/Bright/BrightSky.dds",false));
  File file=new File("wildhouse.zip");
  if (file.exists()) {
    useHttp=false;
  }
  if (useHttp) {
    assetManager.registerLocator("http://jmonkeyengine.googlecode.com/files/wildhouse.zip",HttpZipLocator.class.getName());
  }
 else {
    assetManager.registerLocator("wildhouse.zip",ZipLocator.class.getName());
  }
  Spatial scene=assetManager.loadModel("main.scene");
  DirectionalLight sun=new DirectionalLight();
  Vector3f lightDir=new Vector3f(-0.37352666f,-0.50444174f,-0.7784704f);
  sun.setDirection(lightDir);
  sun.setColor(ColorRGBA.White.clone().multLocal(2));
  scene.addLight(sun);
  Material mat=new Material(assetManager,"Common/MatDefs/Misc/Unshaded.j3md");
  mat.setTexture("ColorMap",assetManager.loadTexture("Interface/Logo/Monkey.jpg"));
  Sphere lite=new Sphere(8,8,3.0f);
  Geometry lightSphere=new Geometry("lightsphere",lite);
  lightSphere.setMaterial(mat);
  Vector3f lightPos=lightDir.multLocal(-400);
  lightSphere.setLocalTranslation(lightPos);
  rootNode.attachChild(lightSphere);
  SimpleWaterProcessor waterProcessor=new SimpleWaterProcessor(assetManager);
  waterProcessor.setReflectionScene(mainScene);
  waterProcessor.setDebug(false);
  waterProcessor.setLightPosition(lightPos);
  waterProcessor.setRefractionClippingOffset(1.0f);
  Vector3f waterLocation=new Vector3f(0,-20,0);
  waterProcessor.setPlane(new Plane(Vector3f.UNIT_Y,waterLocation.dot(Vector3f.UNIT_Y)));
  WaterUI waterUi=new WaterUI(inputManager,waterProcessor);
  waterProcessor.setWaterColor(ColorRGBA.Brown);
  waterProcessor.setDebug(true);
  Quad quad=new Quad(400,400);
  quad.scaleTextureCoordinates(new Vector2f(6f,6f));
  Geometry water=new Geometry("water",quad);
  water.setShadowMode(ShadowMode.Receive);
  water.setLocalRotation(new Quaternion().fromAngleAxis(-FastMath.HALF_PI,Vector3f.UNIT_X));
  water.setMaterial(waterProcessor.getMaterial());
  water.setLocalTranslation(-200,-20,250);
  rootNode.attachChild(water);
  viewPort.addProcessor(waterProcessor);
  mainScene.attachChild(scene);
  rootNode.attachChild(mainScene);
}
