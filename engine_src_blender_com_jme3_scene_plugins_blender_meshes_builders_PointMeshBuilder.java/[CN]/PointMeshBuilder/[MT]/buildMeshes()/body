{
  LOGGER.fine("Building point mesh.");
  Map<Integer,Mesh> result=new HashMap<Integer,Mesh>(1);
  if (vertices.size() > 0) {
    Mesh mesh=new Mesh();
    mesh.setMode(Mode.Points);
    mesh.setPointSize(3);
    LOGGER.fine("Creating indices buffer.");
    if (vertices.size() <= Short.MAX_VALUE) {
      short[] indices=new short[vertices.size()];
      for (int i=0; i < vertices.size(); ++i) {
        indices[i]=(short)i;
      }
      mesh.setBuffer(Type.Index,1,indices);
    }
 else {
      int[] indices=new int[vertices.size()];
      for (int i=0; i < vertices.size(); ++i) {
        indices[i]=i;
      }
      mesh.setBuffer(Type.Index,1,indices);
    }
    LOGGER.fine("Creating vertices buffer.");
    VertexBuffer verticesBuffer=new VertexBuffer(Type.Position);
    verticesBuffer.setupData(Usage.Static,3,Format.Float,BufferUtils.createFloatBuffer(vertices.toArray(new Vector3f[vertices.size()])));
    mesh.setBuffer(verticesBuffer);
    LOGGER.fine("Creating normals buffer (in case of points it is required if skeleton is applied).");
    VertexBuffer normalsBuffer=new VertexBuffer(Type.Normal);
    normalsBuffer.setupData(Usage.Static,3,Format.Float,BufferUtils.createFloatBuffer(normals.toArray(new Vector3f[normals.size()])));
    mesh.setBuffer(normalsBuffer);
    result.put(-1,mesh);
  }
  return result;
}
