{
  ByteBuffer data=image.getData(layer);
switch (image.getFormat()) {
case RGBA8:
    data.put(index,pixel.getR8());
  data.put(index + 1,pixel.getG8());
data.put(index + 2,pixel.getB8());
data.put(index + 3,pixel.getA8());
break;
case ABGR8:
data.put(index,pixel.getA8());
data.put(index + 1,pixel.getB8());
data.put(index + 2,pixel.getG8());
data.put(index + 3,pixel.getR8());
break;
case BGR8:
data.put(index,pixel.getB8());
data.put(index + 1,pixel.getG8());
data.put(index + 2,pixel.getR8());
break;
case RGB8:
data.put(index,pixel.getR8());
data.put(index + 1,pixel.getG8());
data.put(index + 2,pixel.getB8());
break;
case RGB565:
data.putShort(RGB565.ARGB8_to_RGB565(pixel.toARGB8()));
break;
case RGB5A1:
int argb8=pixel.toARGB8();
short r=(short)((argb8 & 0x00F80000) >> 8);
short g=(short)((argb8 & 0x0000F800) >> 5);
short b=(short)((argb8 & 0x000000F8) >> 2);
short a=(short)((short)((argb8 & 0xFF000000) >> 24) > 0 ? 1 : 0);
data.putShort(index,(short)(r | g | b| a));
break;
case RGB16:
data.putShort(index,pixel.getR16());
data.putShort(index + 2,pixel.getG16());
data.putShort(index + 4,pixel.getB16());
break;
case RGBA16:
data.putShort(index,pixel.getR16());
data.putShort(index + 2,pixel.getG16());
data.putShort(index + 4,pixel.getB16());
data.putShort(index + 6,pixel.getA16());
break;
case RGB16F:
case RGB16F_to_RGB111110F:
case RGB16F_to_RGB9E5:
data.putShort(index,FastMath.convertFloatToHalf(pixel.red));
data.putShort(index + 2,FastMath.convertFloatToHalf(pixel.green));
data.putShort(index + 4,FastMath.convertFloatToHalf(pixel.blue));
break;
case RGBA16F:
data.putShort(index,FastMath.convertFloatToHalf(pixel.red));
data.putShort(index + 2,FastMath.convertFloatToHalf(pixel.green));
data.putShort(index + 4,FastMath.convertFloatToHalf(pixel.blue));
data.putShort(index + 6,FastMath.convertFloatToHalf(pixel.blue));
break;
case RGB32F:
case RGB111110F:
data.putInt(index,Float.floatToIntBits(pixel.red));
data.putInt(index + 2,Float.floatToIntBits(pixel.green));
data.putInt(index + 4,Float.floatToIntBits(pixel.blue));
break;
case RGBA32F:
data.putInt(index,Float.floatToIntBits(pixel.red));
data.putInt(index + 2,Float.floatToIntBits(pixel.green));
data.putInt(index + 4,Float.floatToIntBits(pixel.blue));
data.putInt(index + 6,Float.floatToIntBits(pixel.alpha));
break;
case RGB10:
case RGB9E5:
throw new IllegalStateException("Not supported image type for IO operations: " + image.getFormat());
default :
throw new IllegalStateException("Unknown image format: " + image.getFormat());
}
}
