{
  if (GLContext.getCapabilities().GL_EXT_framebuffer_blit) {
    int srcX=0;
    int srcY=0;
    int srcW=0;
    int srcH=0;
    int dstX=0;
    int dstY=0;
    int dstW=0;
    int dstH=0;
    int prevFBO=context.boundFBO;
    if (mainFbOverride != null) {
      if (src == null) {
        src=mainFbOverride;
      }
      if (dst == null) {
        dst=mainFbOverride;
      }
    }
    if (src != null && src.isUpdateNeeded()) {
      updateFrameBuffer(src);
    }
    if (dst != null && dst.isUpdateNeeded()) {
      updateFrameBuffer(dst);
    }
    if (src == null) {
      glBindFramebufferEXT(GL_READ_FRAMEBUFFER_EXT,0);
      srcX=vpX;
      srcY=vpY;
      srcW=vpW;
      srcH=vpH;
    }
 else {
      glBindFramebufferEXT(GL_READ_FRAMEBUFFER_EXT,src.getId());
      srcW=src.getWidth();
      srcH=src.getHeight();
    }
    if (dst == null) {
      glBindFramebufferEXT(GL_DRAW_FRAMEBUFFER_EXT,0);
      dstX=vpX;
      dstY=vpY;
      dstW=vpW - 1;
      dstH=vpH - 1;
    }
 else {
      glBindFramebufferEXT(GL_DRAW_FRAMEBUFFER_EXT,dst.getId());
      dstW=dst.getWidth() - 1;
      dstH=dst.getHeight() - 1;
    }
    int mask=GL_COLOR_BUFFER_BIT;
    if (copyDepth) {
      mask|=GL_DEPTH_BUFFER_BIT;
    }
    glBlitFramebufferEXT(0,0,srcW,srcH,0,0,dstW,dstH,mask,GL_NEAREST);
    glBindFramebufferEXT(GL_FRAMEBUFFER_EXT,prevFBO);
    try {
      checkFrameBufferError();
    }
 catch (    IllegalStateException ex) {
      logger.log(Level.SEVERE,"Source FBO:\n{0}",src);
      logger.log(Level.SEVERE,"Dest FBO:\n{0}",dst);
      throw ex;
    }
  }
 else {
    throw new RendererException("EXT_framebuffer_blit required.");
  }
}
