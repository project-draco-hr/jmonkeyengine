{
  objectOMA=objectStructure.getOldMemoryAddress();
  Pointer pIpo=(Pointer)objectStructure.getFieldValue("ipo");
  if (pIpo.isNotNull()) {
    String objectAnimationName=null;
    List<FileBlockHeader> actionBlocks=blenderContext.getFileBlocks(Integer.valueOf(FileBlockHeader.BLOCK_AC00));
    if (actionBlocks != null) {
      for (      FileBlockHeader actionBlock : actionBlocks) {
        Structure action=actionBlock.getStructure(blenderContext);
        List<Structure> actionChannels=((Structure)action.getFieldValue("chanbase")).evaluateListBase(blenderContext);
        if (actionChannels.size() == 1) {
          Pointer pChannelIpo=(Pointer)actionChannels.get(0).getFieldValue("ipo");
          if (pChannelIpo.equals(pIpo)) {
            objectAnimationName=action.getName();
            break;
          }
        }
      }
    }
    String objectName=objectStructure.getName();
    if (objectAnimationName == null) {
      objectAnimationName=objectName;
    }
    IpoHelper ipoHelper=blenderContext.getHelper(IpoHelper.class);
    Structure ipoStructure=pIpo.fetchData(blenderContext.getInputStream()).get(0);
    Ipo ipo=ipoHelper.createIpo(ipoStructure,blenderContext);
    int fps=blenderContext.getBlenderKey().getFps();
    SpatialTrack track=(SpatialTrack)ipo.calculateTrack(-1,0,ipo.getLastFrame(),fps);
    Animation animation=new Animation(objectAnimationName,ipo.getLastFrame() / fps);
    animation.setTracks(new SpatialTrack[]{track});
    ArrayList<Animation> animations=new ArrayList<Animation>(1);
    animations.add(animation);
    animData=new AnimData(null,animations);
    blenderContext.setAnimData(objectOMA,animData);
  }
}
