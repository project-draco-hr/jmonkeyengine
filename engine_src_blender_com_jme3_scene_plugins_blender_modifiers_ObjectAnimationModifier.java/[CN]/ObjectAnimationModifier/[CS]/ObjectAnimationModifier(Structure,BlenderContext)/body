{
  Pointer pIpo=(Pointer)objectStructure.getFieldValue("ipo");
  if (pIpo.isNotNull()) {
    String objectAnimationName=null;
    List<FileBlockHeader> actionBlocks=blenderContext.getFileBlocks(Integer.valueOf(FileBlockHeader.BLOCK_AC00));
    for (    FileBlockHeader actionBlock : actionBlocks) {
      Structure action=actionBlock.getStructure(blenderContext);
      List<Structure> actionChannels=((Structure)action.getFieldValue("chanbase")).evaluateListBase(blenderContext);
      if (actionChannels.size() == 1) {
        Pointer pChannelIpo=(Pointer)actionChannels.get(0).getFieldValue("ipo");
        if (pChannelIpo.equals(pIpo)) {
          objectAnimationName=action.getName();
          break;
        }
      }
    }
    String objectName=objectStructure.getName();
    if (objectAnimationName == null) {
      objectAnimationName=objectName;
    }
    IpoHelper ipoHelper=blenderContext.getHelper(IpoHelper.class);
    Structure ipoStructure=pIpo.fetchData(blenderContext.getInputStream()).get(0);
    Ipo ipo=ipoHelper.createIpo(ipoStructure,blenderContext);
    int[] animationFrames=blenderContext.getBlenderKey().getAnimationFrames(objectName,objectAnimationName);
    if (animationFrames == null) {
      animationFrames=new int[]{1,ipo.getLastFrame()};
    }
    int fps=blenderContext.getBlenderKey().getFps();
    float start=(float)animationFrames[0] / (float)fps;
    float stop=(float)animationFrames[1] / (float)fps;
    BoneTrack[] tracks=new BoneTrack[1];
    tracks[0]=ipo.calculateTrack(0,animationFrames[0],animationFrames[1],fps);
    BoneAnimation boneAnimation=new BoneAnimation(objectAnimationName,stop - start);
    boneAnimation.setTracks(tracks);
    ArrayList<Animation> animations=new ArrayList<Animation>(1);
    animations.add(boneAnimation);
    ObjectHelper objectHelper=blenderContext.getHelper(ObjectHelper.class);
    Transform t=objectHelper.getTransformation(objectStructure,blenderContext);
    Bone bone=new Bone(null);
    bone.setBindTransforms(t.getTranslation(),t.getRotation(),t.getScale());
    animData=new AnimData(new Skeleton(new Bone[]{bone}),animations);
    objectOMA=objectStructure.getOldMemoryAddress();
  }
}
