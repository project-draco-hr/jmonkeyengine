{
  this.view=view;
  if (configType == ConfigType.LEGACY) {
    clientOpenGLESVersion=2;
    view.setEGLContextClientVersion(2);
    view.setEGLConfigChooser(5,6,5,0,16,0);
    logger.info("ConfigType.LEGACY using RGB565");
  }
 else {
    EGL10 egl=(EGL10)EGLContext.getEGL();
    EGLDisplay display=egl.eglGetDisplay(EGL10.EGL_DEFAULT_DISPLAY);
    int[] version=new int[2];
    if (egl.eglInitialize(display,version) == true) {
      logger.info("Display EGL Version: " + version[0] + "."+ version[1]);
    }
    AndroidConfigChooser configChooser=new AndroidConfigChooser(configType,eglConfigVerboseLogging);
    if (!configChooser.findConfig(egl,display)) {
      logger.severe("Unable to find suitable EGL config");
    }
    clientOpenGLESVersion=configChooser.getClientOpenGLESVersion();
    if (clientOpenGLESVersion < 2) {
      logger.severe("OpenGL ES 2.0 is not supported on this device");
    }
    if (display != null)     egl.eglTerminate(display);
    view.setEGLContextClientVersion(clientOpenGLESVersion);
    view.setEGLConfigChooser(configChooser);
    view.getHolder().setFormat(configChooser.getPixelFormat());
  }
  view.setFocusableInTouchMode(true);
  view.setFocusable(true);
  view.getHolder().setType(SurfaceHolder.SURFACE_TYPE_GPU);
  view.setRenderer(this);
  return view;
}
