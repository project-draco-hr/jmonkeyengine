{
  created.set(true);
  logger.info("OGLESContext create");
  logger.info("Running on thread: " + Thread.currentThread().getName());
  final Context ctx=this.view.getContext();
  if (ctx instanceof AndroidHarness) {
    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler(){
      public void uncaughtException(      Thread thread,      Throwable thrown){
        ((AndroidHarness)ctx).handleError("Exception thrown in " + thread.toString(),thrown);
      }
    }
);
  }
 else {
    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler(){
      public void uncaughtException(      Thread thread,      Throwable thrown){
        listener.handleError("Exception thrown in " + thread.toString(),thrown);
      }
    }
);
  }
  if (clientOpenGLESVersion < 2) {
    throw new UnsupportedOperationException("OpenGL ES 2.0 is not supported on this device");
  }
  timer=new AndroidTimer();
  renderer=new OGLESShaderRenderer();
  renderer.setUseVA(true);
  renderer.setVerboseLogging(verboseLogging);
  renderer.initialize();
  listener.initialize();
  if (ctx instanceof AndroidHarness) {
    Application app=((AndroidHarness)ctx).getJmeApplication();
    if (app.getInputManager() != null) {
      app.getInputManager().addMapping(ESCAPE_EVENT,new TouchTrigger(TouchInput.KEYCODE_BACK));
      app.getInputManager().addListener((AndroidHarness)ctx,new String[]{ESCAPE_EVENT});
    }
  }
  needClose.set(false);
  renderable.set(true);
}
