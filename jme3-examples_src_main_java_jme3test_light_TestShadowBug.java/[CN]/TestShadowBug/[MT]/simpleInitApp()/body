{
  flyCam.setMoveSpeed(100f);
  rootNode.attachChild(makeFloor());
  Node characters=new Node("Characters");
  characters.setShadowMode(ShadowMode.Cast);
  rootNode.attachChild(characters);
  Spatial golem=assetManager.loadModel("Models/Oto/Oto.mesh.xml");
  golem.scale(0.5f);
  golem.setLocalTranslation(200.0f,-6f,200f);
  golem.setShadowMode(ShadowMode.CastAndReceive);
  characters.attachChild(golem);
  DirectionalLight sun=new DirectionalLight();
  sun.setDirection(new Vector3f(-1f,-1f,1f));
  sun.setColor(ColorRGBA.White.mult(1.3f));
  rootNode.addLight(sun);
  characters.addLight(sun);
  SpotLight spot=new SpotLight();
  spot.setSpotRange(13f);
  spot.setSpotInnerAngle(15f * FastMath.DEG_TO_RAD);
  spot.setSpotOuterAngle(20f * FastMath.DEG_TO_RAD);
  spot.setColor(ColorRGBA.White.mult(1.3f));
  spot.setPosition(new Vector3f(192.0f,-1f,192f));
  spot.setDirection(new Vector3f(1,-0.5f,1));
  rootNode.addLight(spot);
  PointLight lamp_light=new PointLight();
  lamp_light.setColor(ColorRGBA.Yellow);
  lamp_light.setRadius(20f);
  lamp_light.setPosition(new Vector3f(210.0f,0f,210f));
  rootNode.addLight(lamp_light);
  SpotLightShadowRenderer slsr=new SpotLightShadowRenderer(assetManager,512);
  slsr.setLight(spot);
  slsr.setEdgeFilteringMode(EdgeFilteringMode.Nearest);
  slsr.setShadowIntensity(0.6f);
  slsr.setFlushQueues(false);
  viewPort.addProcessor(slsr);
  PointLightShadowRenderer plsr=new PointLightShadowRenderer(assetManager,512);
  plsr.setLight(lamp_light);
  plsr.setShadowIntensity(0.6f);
  plsr.setEdgeFilteringMode(EdgeFilteringMode.Nearest);
  plsr.setFlushQueues(false);
  viewPort.addProcessor(plsr);
  viewPort.getCamera().setLocation(new Vector3f(192.0f,10f,192f));
  float[] angles=new float[]{3.14f / 2,3.14f / 2,0};
  viewPort.getCamera().setRotation(new Quaternion(angles));
}
