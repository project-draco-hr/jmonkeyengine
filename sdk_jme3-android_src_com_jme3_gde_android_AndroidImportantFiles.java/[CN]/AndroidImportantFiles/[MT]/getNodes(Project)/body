{
  FileObject manifest=project.getProjectDirectory().getFileObject("mobile/AndroidManifest.xml");
  String mainActivity="mobile/src";
  if (manifest != null) {
    InputStream in=null;
    try {
      in=manifest.getInputStream();
      Document configuration=XMLUtil.parse(new InputSource(in),false,false,null,null);
      mainActivity="mobile/src/" + configuration.getDocumentElement().getAttribute("package").replaceAll("\\.","/") + "/MainActivity.java";
    }
 catch (    Exception ex) {
      Exceptions.printStackTrace(ex);
    }
 finally {
      try {
        if (in != null) {
          in.close();
        }
      }
 catch (      IOException ex) {
        Exceptions.printStackTrace(ex);
      }
    }
  }
  ArrayList<Node> list=new ArrayList<Node>();
  try {
    FileObject mainAct=project.getProjectDirectory().getFileObject(mainActivity);
    if (mainAct != null) {
      Node node=DataObject.find(mainAct).getNodeDelegate();
      node.setDisplayName("Android Main Activity");
      list.add(node);
    }
    FileObject manif=project.getProjectDirectory().getFileObject("mobile/AndroidManifest.xml");
    if (manif != null) {
      Node node=DataObject.find(manif).getNodeDelegate();
      node.setDisplayName("Android Manifest");
      list.add(node);
    }
    FileObject buildProp=project.getProjectDirectory().getFileObject("mobile/ant.properties");
    if (buildProp != null) {
      Node node=DataObject.find(buildProp).getNodeDelegate();
      node.setDisplayName("Android Properties");
      list.add(node);
    }
    FileObject layout=project.getProjectDirectory().getFileObject("mobile/res/layout/main.xml");
    if (layout != null) {
      Node node=DataObject.find(layout).getNodeDelegate();
      node.setDisplayName("Android Layout");
      list.add(node);
    }
    FileObject strings=project.getProjectDirectory().getFileObject("mobile/res/values/strings.xml");
    if (strings != null) {
      Node node=DataObject.find(strings).getNodeDelegate();
      node.setDisplayName("Android Strings");
      list.add(node);
    }
  }
 catch (  DataObjectNotFoundException ex) {
    Exceptions.printStackTrace(ex);
  }
  return list.toArray(new Node[list.size()]);
}
