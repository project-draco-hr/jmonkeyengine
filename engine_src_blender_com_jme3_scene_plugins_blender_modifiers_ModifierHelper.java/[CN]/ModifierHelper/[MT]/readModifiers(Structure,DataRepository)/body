{
  Collection<Modifier> result=new ArrayList<Modifier>();
  Structure modifiersListBase=(Structure)objectStructure.getFieldValue("modifiers");
  List<Structure> modifiers=modifiersListBase.evaluateListBase(dataRepository);
  for (  Structure modifierStructure : modifiers) {
    Modifier modifier=null;
    if (Modifier.ARRAY_MODIFIER_DATA.equals(modifierStructure.getType())) {
      modifier=new ArrayModifier(modifierStructure,dataRepository);
    }
 else     if (Modifier.MIRROR_MODIFIER_DATA.equals(modifierStructure.getType())) {
      modifier=new MirrorModifier(modifierStructure,dataRepository);
    }
 else     if (Modifier.ARMATURE_MODIFIER_DATA.equals(modifierStructure.getType())) {
      modifier=new ArmatureModifier(objectStructure,modifierStructure,dataRepository);
    }
 else     if (Modifier.PARTICLE_MODIFIER_DATA.equals(modifierStructure.getType())) {
      modifier=new ParticlesModifier(modifierStructure,dataRepository);
    }
    if (modifier != null) {
      result.add(modifier);
      dataRepository.addModifier(objectStructure.getOldMemoryAddress(),modifier);
    }
 else {
      LOGGER.log(Level.WARNING,"Unsupported modifier type: {0}",modifierStructure.getType());
    }
  }
  Pointer pIpo=(Pointer)objectStructure.getFieldValue("ipo");
  if (pIpo.isNotNull()) {
    Modifier modifier=new ObjectAnimationModifier(objectStructure,dataRepository);
    result.add(modifier);
    dataRepository.addModifier(objectStructure.getOldMemoryAddress(),modifier);
  }
  return result;
}
