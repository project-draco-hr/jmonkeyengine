{
  if (isModified() && savable != null) {
    return (Spatial)savable;
  }
  ProjectAssetManager mgr=getLookup().lookup(ProjectAssetManager.class);
  if (mgr == null) {
    DialogDisplayer.getDefault().notifyLater(new NotifyDescriptor.Message("File is not part of a project!\nCannot load without ProjectAssetManager."));
    return null;
  }
  String name=getPrimaryFile().getName();
  int idx=name.toLowerCase().indexOf(".mesh");
  if (idx != -1) {
    name=name.substring(0,idx);
  }
  String matName=((OgreMeshKey)getAssetKey()).getMaterialName();
  if (matName == null) {
    matName=name;
  }
  FileObject sourceMatFile=getPrimaryFile().getParent().getFileObject(matName,"material");
  if (sourceMatFile == null || !sourceMatFile.isValid()) {
    Confirmation msg=new NotifyDescriptor.Confirmation("No material file found for " + getPrimaryFile().getNameExt() + "\n"+ "A file named "+ matName+ ".material should be in the same folder.\n"+ "Press OK to import mesh only.",NotifyDescriptor.OK_CANCEL_OPTION,NotifyDescriptor.WARNING_MESSAGE);
    Object result=DialogDisplayer.getDefault().notify(msg);
    if (!NotifyDescriptor.OK_OPTION.equals(result)) {
      return null;
    }
  }
  FileLock lock=null;
  try {
    lock=getPrimaryFile().lock();
    mgr.deleteFromCache(getAssetKey());
    listListener.start();
    Spatial spatial=mgr.loadModel(getAssetKey());
    listListener.stop();
    savable=spatial;
    lock.releaseLock();
    return spatial;
  }
 catch (  Exception ex) {
    Exceptions.printStackTrace(ex);
  }
 finally {
    if (lock != null) {
      lock.releaseLock();
    }
  }
  return null;
}
