{
  if (qName.equals("scene")) {
    if (elementStack.size() != 0) {
      throw new SAXException("dotScene parse error: 'scene' element must be the root XML element");
    }
    String version=attribs.getValue("formatVersion");
    if (version == null && !version.equals("1.0.0") && !version.equals("1.0.1"))     logger.log(Level.WARNING,"Unrecognized version number" + " in dotScene file: {0}",version);
  }
 else   if (qName.equals("nodes")) {
    if (root != null) {
      throw new SAXException("dotScene parse error: nodes element was specified twice");
    }
    if (sceneName == null)     root=new Node("OgreDotScene" + (++sceneIdx));
 else     root=new Node(sceneName + "-scene_node");
    node=root;
  }
 else   if (qName.equals("externals")) {
    checkTopNode("scene");
  }
 else   if (qName.equals("item")) {
    checkTopNode("externals");
  }
 else   if (qName.equals("file")) {
    checkTopNode("item");
  }
 else   if (qName.equals("node")) {
    String curElement=elementStack.peek();
    if (!curElement.equals("node") && !curElement.equals("nodes")) {
      throw new SAXException("dotScene parse error: " + "node element can only appear under 'node' or 'nodes'");
    }
    String name=attribs.getValue("name");
    if (name == null)     name="OgreNode-" + (++nodeIdx);
    Node newNode=new Node(name);
    if (node != null) {
      node.attachChild(newNode);
    }
    node=newNode;
  }
 else   if (qName.equals("property")) {
    if (node != null) {
      String type=attribs.getValue("type");
      String name=attribs.getValue("name");
      String data=attribs.getValue("data");
      if (type.equals("BOOL")) {
        node.setUserData(name,Boolean.parseBoolean(data) || data.equals("1"));
      }
 else       if (type.equals("FLOAT")) {
        node.setUserData(name,Float.parseFloat(data));
      }
 else       if (type.equals("STRING")) {
        node.setUserData(name,data);
      }
 else       if (type.equals("INT")) {
        node.setUserData(name,Integer.parseInt(data));
      }
    }
  }
 else   if (qName.equals("entity")) {
    checkTopNode("node");
    String name=attribs.getValue("name");
    if (name == null)     name="OgreEntity-" + (++nodeIdx);
 else     name+="-entity";
    String meshFile=attribs.getValue("meshFile");
    if (meshFile == null) {
      throw new SAXException("Required attribute 'meshFile' missing for 'entity' node");
    }
    String materialName=attribs.getValue("materialName");
    if (folderName != null) {
      meshFile=folderName + meshFile;
    }
    meshFile+=".xml";
    entityNode=new Node(name);
    OgreMeshKey key=new OgreMeshKey(meshFile,materialList);
    Spatial ogreMesh=assetManager.loadModel(key);
    entityNode.attachChild(ogreMesh);
    node.attachChild(entityNode);
    node=null;
  }
 else   if (qName.equals("position")) {
    if (elementStack.peek().equals("node")) {
      node.setLocalTranslation(SAXUtil.parseVector3(attribs));
    }
  }
 else   if (qName.equals("quaternion") || qName.equals("rotation")) {
    node.setLocalRotation(parseQuat(attribs));
  }
 else   if (qName.equals("scale")) {
    node.setLocalScale(SAXUtil.parseVector3(attribs));
  }
 else   if (qName.equals("light")) {
    parseLight(attribs);
  }
 else   if (qName.equals("colourDiffuse") || qName.equals("colorDiffuse")) {
    if (elementStack.peek().equals("light")) {
      if (light != null) {
        light.setColor(parseColor(attribs));
      }
    }
 else {
      checkTopNode("environment");
    }
  }
 else   if (qName.equals("normal") || qName.equals("direction")) {
    checkTopNode("light");
    parseLightNormal(attribs);
  }
 else   if (qName.equals("lightAttenuation")) {
    parseLightAttenuation(attribs);
  }
 else   if (qName.equals("spotLightRange") || qName.equals("lightRange")) {
    parseLightSpotLightRange(attribs);
  }
  elementStack.push(qName);
}
