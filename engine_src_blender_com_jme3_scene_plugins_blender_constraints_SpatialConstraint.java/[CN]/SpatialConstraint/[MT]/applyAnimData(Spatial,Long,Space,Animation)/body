{
  ConstraintHelper constraintHelper=blenderContext.getHelper(ConstraintHelper.class);
  Transform transform=constraintHelper.getNodeObjectTransform(space,spatialOma,blenderContext);
  SpatialTrack parentTrack=(SpatialTrack)referenceAnimation.getTracks()[0];
  HashMap<String,Animation> anims=new HashMap<String,Animation>(1);
  Animation animation=new Animation(spatial.getName(),referenceAnimation.getLength());
  anims.put(spatial.getName(),animation);
  float[] times=parentTrack.getTimes();
  Vector3f[] translations=new Vector3f[times.length];
  Quaternion[] rotations=new Quaternion[times.length];
  Vector3f[] scales=new Vector3f[times.length];
  Arrays.fill(translations,transform.getTranslation());
  Arrays.fill(rotations,transform.getRotation());
  Arrays.fill(scales,transform.getScale());
  animation.addTrack(new SpatialTrack(times,translations,rotations,scales));
  AnimControl control=new AnimControl(null);
  control.setAnimations(anims);
  spatial.addControl(control);
  blenderContext.setAnimData(spatialOma,new AnimData(null,new ArrayList<Animation>(anims.values())));
}
