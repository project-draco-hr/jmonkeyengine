{
  int numSeparateStrips=0;
  FaceInfo tLastFace=new FaceInfo(0,0,0);
  int nStripCount=allStrips.size();
  int accountForNegatives=0;
  for (int i=0; i < nStripCount; i++) {
    StripInfo strip=allStrips.at(i);
    int nStripFaceCount=strip.m_faces.size();
{
      FaceInfo tFirstFace=new FaceInfo(strip.m_faces.at(0).m_v0,strip.m_faces.at(0).m_v1,strip.m_faces.at(0).m_v2);
      if (nStripFaceCount > 1) {
        int nUnique=getUniqueVertexInB(strip.m_faces.at(1),tFirstFace);
        if (nUnique == tFirstFace.m_v1) {
          int tmp=tFirstFace.m_v0;
          tFirstFace.m_v0=tFirstFace.m_v1;
          tFirstFace.m_v1=tmp;
        }
 else         if (nUnique == tFirstFace.m_v2) {
          int tmp=tFirstFace.m_v0;
          tFirstFace.m_v0=tFirstFace.m_v2;
          tFirstFace.m_v2=tmp;
        }
        if (nStripFaceCount > 2) {
          if (isDegenerate(strip.m_faces.at(1))) {
            int pivot=strip.m_faces.at(1).m_v1;
            if (tFirstFace.m_v1 == pivot) {
              int tmp=tFirstFace.m_v1;
              tFirstFace.m_v1=tFirstFace.m_v2;
              tFirstFace.m_v2=tmp;
            }
          }
 else {
            int[] nShared=new int[2];
            getSharedVertices(strip.m_faces.at(2),tFirstFace,nShared);
            if ((nShared[0] == tFirstFace.m_v1) && (nShared[1] == -1)) {
              int tmp=tFirstFace.m_v1;
              tFirstFace.m_v1=tFirstFace.m_v2;
              tFirstFace.m_v2=tmp;
            }
          }
        }
      }
      if ((i == 0) || !bStitchStrips) {
        if (!isCW(strip.m_faces.at(0),tFirstFace.m_v0,tFirstFace.m_v1))         stripIndices.add(tFirstFace.m_v0);
      }
 else {
        stripIndices.add(tFirstFace.m_v0);
        if (nextIsCW(stripIndices.size() - accountForNegatives) != isCW(strip.m_faces.at(0),tFirstFace.m_v0,tFirstFace.m_v1)) {
          stripIndices.add(tFirstFace.m_v0);
        }
      }
      stripIndices.add(tFirstFace.m_v0);
      stripIndices.add(tFirstFace.m_v1);
      stripIndices.add(tFirstFace.m_v2);
      tLastFace.set(tFirstFace);
    }
    for (int j=1; j < nStripFaceCount; j++) {
      int nUnique=getUniqueVertexInB(tLastFace,strip.m_faces.at(j));
      if (nUnique != -1) {
        stripIndices.add(nUnique);
        tLastFace.m_v0=tLastFace.m_v1;
        tLastFace.m_v1=tLastFace.m_v2;
        tLastFace.m_v2=nUnique;
      }
 else {
        stripIndices.add(strip.m_faces.at(j).m_v2);
        tLastFace.m_v0=strip.m_faces.at(j).m_v0;
        tLastFace.m_v1=strip.m_faces.at(j).m_v1;
        tLastFace.m_v2=strip.m_faces.at(j).m_v2;
      }
    }
    if (bStitchStrips) {
      if (i != nStripCount - 1)       stripIndices.add(tLastFace.m_v2);
    }
 else {
      stripIndices.add(-1);
      accountForNegatives++;
      numSeparateStrips++;
    }
    tLastFace.m_v0=tLastFace.m_v1;
    tLastFace.m_v1=tLastFace.m_v2;
    tLastFace.m_v2=tLastFace.m_v2;
  }
  if (bStitchStrips)   numSeparateStrips=1;
  return numSeparateStrips;
}
