{
  if (spatial != null) {
switch (space) {
case CONSTRAINT_SPACE_LOCAL:
      Structure targetStructure=(Structure)blenderContext.getLoadedFeature(oma,LoadedFeatureDataType.LOADED_STRUCTURE);
    DynamicArray<Number> locArray=((DynamicArray<Number>)targetStructure.getFieldValue("loc"));
  Vector3f loc=new Vector3f(locArray.get(0).floatValue(),locArray.get(1).floatValue(),locArray.get(2).floatValue());
DynamicArray<Number> rotArray=((DynamicArray<Number>)targetStructure.getFieldValue("rot"));
Quaternion rot=new Quaternion(new float[]{rotArray.get(0).floatValue(),rotArray.get(1).floatValue(),rotArray.get(2).floatValue()});
DynamicArray<Number> sizeArray=((DynamicArray<Number>)targetStructure.getFieldValue("size"));
Vector3f size=new Vector3f(sizeArray.get(0).floatValue(),sizeArray.get(1).floatValue(),sizeArray.get(2).floatValue());
if (blenderContext.getBlenderKey().isFixUpAxis()) {
float y=loc.y;
loc.y=loc.z;
loc.z=-y;
y=rot.getY();
float z=rot.getZ();
rot.set(rot.getX(),z,-y,rot.getW());
y=size.y;
size.y=size.z;
size.z=y;
}
Transform result=new Transform(loc,rot);
result.setScale(size);
return result;
case CONSTRAINT_SPACE_WORLD:
return spatial.getWorldTransform();
default :
throw new IllegalStateException("Invalid space type for target object: " + space.toString());
}
}
switch (space) {
case CONSTRAINT_SPACE_LOCAL:
Transform localTransform=new Transform(bone.getLocalPosition(),bone.getLocalRotation());
localTransform.setScale(bone.getLocalScale());
return localTransform;
case CONSTRAINT_SPACE_WORLD:
if (bone.getParent() != null) {
System.out.println(bone.getParent().getLocalRotation());
System.out.println(bone.getParent().getWorldBindRotation());
System.out.println(bone.getParent().getModelSpaceRotation());
System.out.println(bone.getParent().getWorldBindInverseRotation());
}
Transform worldTransform=new Transform(bone.getWorldBindPosition(),bone.getWorldBindRotation());
worldTransform.setScale(bone.getWorldBindScale());
return worldTransform;
case CONSTRAINT_SPACE_POSE:
return null;
case CONSTRAINT_SPACE_PARLOCAL:
Transform parentLocalTransform=new Transform(bone.getLocalPosition(),bone.getLocalRotation());
parentLocalTransform.setScale(bone.getLocalScale());
return parentLocalTransform;
default :
throw new IllegalStateException("Invalid space type for target object: " + space.toString());
}
}
