{
  loadNatives();
  GLCapabilities caps;
  if (settings.getRenderer().equals(AppSettings.JOGL_OPENGL_FORWARD_COMPATIBLE)) {
    caps=new GLCapabilities(GLProfile.getMaxProgrammable(true));
  }
 else {
    caps=new GLCapabilities(GLProfile.getMaxFixedFunc(true));
  }
  caps.setHardwareAccelerated(true);
  caps.setDoubleBuffered(true);
  caps.setStencilBits(settings.getStencilBits());
  caps.setDepthBits(settings.getDepthBits());
  if (settings.getSamples() > 1) {
    caps.setSampleBuffers(true);
    caps.setNumSamples(settings.getSamples());
  }
  canvas=GLWindow.create(caps);
  canvas.invoke(false,new GLRunnable(){
    public boolean run(    GLAutoDrawable glad){
      canvas.getGL().setSwapInterval(settings.isVSync() ? 1 : 0);
      return true;
    }
  }
);
  canvas.requestFocus();
  canvas.setSize(settings.getWidth(),settings.getHeight());
  canvas.addGLEventListener(this);
  renderable.set(true);
}
