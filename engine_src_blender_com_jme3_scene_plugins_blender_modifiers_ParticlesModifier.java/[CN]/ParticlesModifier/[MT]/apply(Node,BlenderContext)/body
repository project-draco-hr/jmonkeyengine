{
  if (invalid) {
    LOGGER.log(Level.WARNING,"Particles modifier is invalid! Cannot be applied to: {0}",node.getName());
    return node;
  }
  MaterialHelper materialHelper=blenderContext.getHelper(MaterialHelper.class);
  ParticleEmitter emitter=particleEmitter.clone();
  Integer alphaFunction=MaterialHelper.ALPHA_MASK_HYPERBOLE;
  char nameSuffix=emitter.getName().charAt(emitter.getName().length() - 1);
  if (nameSuffix == 'B' || nameSuffix == 'N') {
    alphaFunction=MaterialHelper.ALPHA_MASK_NONE;
  }
  emitter.setName(emitter.getName().substring(0,emitter.getName().length() - 1));
  EmitterShape emitterShape=emitter.getShape();
  List<Mesh> meshes=new ArrayList<Mesh>();
  for (  Spatial spatial : node.getChildren()) {
    if (spatial instanceof Geometry) {
      Mesh mesh=((Geometry)spatial).getMesh();
      if (mesh != null) {
        meshes.add(mesh);
        Material material=materialHelper.getParticlesMaterial(((Geometry)spatial).getMaterial(),alphaFunction,blenderContext);
        emitter.setMaterial(material);
      }
    }
  }
  if (meshes.size() > 0 && emitterShape instanceof EmitterMeshVertexShape) {
    ((EmitterMeshVertexShape)emitterShape).setMeshes(meshes);
  }
  node.attachChild(emitter);
  return node;
}
