{
  matRock=new Material(assetManager,"Common/MatDefs/Terrain/TerrainLighting.j3md");
  matRock.setBoolean("useTriPlanarMapping",false);
  matRock.setBoolean("WardIso",true);
  matRock.setTexture("AlphaMap",assetManager.loadTexture("Textures/Terrain/splat/alphamap.png"));
  Texture heightMapImage=assetManager.loadTexture("Textures/Terrain/splat/mountains512.png");
  Texture grass=assetManager.loadTexture("Textures/Terrain/splat/grass.jpg");
  grass.setWrap(WrapMode.Repeat);
  matRock.setTexture("DiffuseMap",grass);
  matRock.setFloat("DiffuseMap_0_scale",64);
  Texture dirt=assetManager.loadTexture("Textures/Terrain/splat/dirt.jpg");
  dirt.setWrap(WrapMode.Repeat);
  matRock.setTexture("DiffuseMap_1",dirt);
  matRock.setFloat("DiffuseMap_1_scale",16);
  Texture rock=assetManager.loadTexture("Textures/Terrain/splat/road.jpg");
  rock.setWrap(WrapMode.Repeat);
  matRock.setTexture("DiffuseMap_2",rock);
  matRock.setFloat("DiffuseMap_2_scale",128);
  Texture normalMap0=assetManager.loadTexture("Textures/Terrain/splat/grass_normal.jpg");
  normalMap0.setWrap(WrapMode.Repeat);
  Texture normalMap1=assetManager.loadTexture("Textures/Terrain/splat/dirt_normal.png");
  normalMap1.setWrap(WrapMode.Repeat);
  Texture normalMap2=assetManager.loadTexture("Textures/Terrain/splat/road_normal.png");
  normalMap2.setWrap(WrapMode.Repeat);
  matRock.setTexture("NormalMap",normalMap0);
  matRock.setTexture("NormalMap_1",normalMap2);
  matRock.setTexture("NormalMap_2",normalMap2);
  AbstractHeightMap heightmap=null;
  try {
    heightmap=new ImageBasedHeightMap(ImageToAwt.convert(heightMapImage.getImage(),false,true,0),0.25f);
    heightmap.load();
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
  terrain=new TerrainQuad("terrain",65,513,heightmap.getHeightMap());
  List<Camera> cameras=new ArrayList<Camera>();
  cameras.add(getCamera());
  TerrainLodControl control=new TerrainLodControl(terrain,cameras);
  terrain.addControl(control);
  terrain.setMaterial(matRock);
  terrain.setLocalScale(new Vector3f(2,2,2));
  terrainPhysicsNode=new RigidBodyControl(CollisionShapeFactory.createMeshShape(terrain),0);
  terrain.addControl(terrainPhysicsNode);
  rootNode.attachChild(terrain);
  getPhysicsSpace().add(terrainPhysicsNode);
}
