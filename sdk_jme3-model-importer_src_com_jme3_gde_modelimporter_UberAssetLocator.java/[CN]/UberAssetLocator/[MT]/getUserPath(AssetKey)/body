{
  NotifyDescriptor.Confirmation msg=new NotifyDescriptor.Confirmation("Referenced file " + key.getName() + " cannot be found!\nDo you want to look for it?",NotifyDescriptor.YES_NO_OPTION,NotifyDescriptor.WARNING_MESSAGE);
  Object result=DialogDisplayer.getDefault().notify(msg);
  if (!NotifyDescriptor.YES_OPTION.equals(result)) {
    return null;
  }
  final String ext=key.getExtension();
  FileChooserBuilder fcb=new FileChooserBuilder(this.getClass());
  fcb.setTitle("Locate " + key.getName());
  fcb.setFileFilter(new FileFilter(){
    @Override public boolean accept(    File f){
      if (f.getName().endsWith(ext)) {
        return true;
      }
      return false;
    }
    @Override public String getDescription(){
      return "Filter for " + ext;
    }
  }
);
  fcb.setFilesOnly(true);
  fcb.setApproveText("Select file");
  File file=fcb.showOpenDialog();
  if (file == null) {
    return null;
  }
  return FileUtil.toFileObject(file);
}
