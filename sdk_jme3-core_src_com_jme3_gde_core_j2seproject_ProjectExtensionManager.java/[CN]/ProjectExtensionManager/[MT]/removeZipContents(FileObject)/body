{
  if (zipFile == null) {
    return;
  }
  InputStream in=zipFile.openStream();
  boolean kept=false;
  try {
    ZipInputStream str=new ZipInputStream(in);
    ZipEntry entry;
    while ((entry=str.getNextEntry()) != null) {
      FileObject old=projectRoot.getFileObject(entry.getName());
      if (old != null && !old.equals(projectRoot)) {
        logger.log(Level.FINE,"Deleting old file {0}",old.getNameExt());
        if (entry.getSize() != -1 && entry.getSize() == old.getSize()) {
          old.delete();
        }
      }
      String fileName=resourcesFolder + "/" + extensionName+ "/"+ entry.getName();
      FileObject obj=projectRoot.getFileObject(fileName);
      if (obj != null && !obj.equals(projectRoot) && !obj.isFolder()) {
        if (entry.getSize() != -1 && entry.getSize() == obj.getSize()) {
          logger.log(Level.FINE,"Deleting file {0}",obj.getNameExt());
          obj.delete();
        }
 else {
          kept=true;
          logger.log(Level.FINE,"Keeping file {0}",obj.getNameExt());
        }
      }
    }
  }
  finally {
    in.close();
  }
  FileObject folder=projectRoot.getFileObject(resourcesFolder + "/" + extensionName);
  if (folder != null && !kept) {
    folder.delete();
  }
  FileObject resourceFolder=projectRoot.getFileObject(resourcesFolder);
  if (resourceFolder != null && resourceFolder.getChildren().length == 0) {
    resourceFolder.delete();
  }
}
