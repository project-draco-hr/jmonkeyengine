{
  Sources sources=ProjectUtils.getSources(project);
  if (sources != null) {
    if (loader != null) {
      removeClassLoader(loader);
    }
    SourceGroup[] groups=sources.getSourceGroups(JavaProjectConstants.SOURCES_TYPE_JAVA);
    List<URL> urls=new LinkedList<URL>();
    for (    SourceGroup sourceGroup : groups) {
      ClassPath path=ClassPath.getClassPath(sourceGroup.getRootFolder(),ClassPath.EXECUTE);
      if (path != null) {
        classPaths.add(path);
        path.addPropertyChangeListener(classPathListener);
        FileObject[] roots=path.getRoots();
        for (        FileObject fileObject : roots) {
          if (!fileObject.equals(getAssetFolder())) {
            fileObject.addRecursiveListener(listener);
            logger.log(Level.FINE,"Add classpath:{0}",fileObject);
            classPathItems.add(new ClassPathItem(fileObject,listener));
            urls.add(fileObject.toURL());
          }
          if (fileObject.toURL().toExternalForm().startsWith("jar")) {
            logger.log(Level.FINE,"Add locator:{0}",fileObject.toURL());
            jarItems.add(fileObject);
            registerLocator(fileObject.toURL().toExternalForm(),"com.jme3.asset.plugins.UrlLocator");
          }
        }
      }
    }
    loader=new URLClassLoader(urls.toArray(new URL[urls.size()]),getClass().getClassLoader());
    addClassLoader(loader);
    logger.log(Level.FINE,"Updated {0} classpath entries and {1} url locators for project {2}",new Object[]{classPathItems.size(),jarItems.size(),project.toString()});
  }
}
