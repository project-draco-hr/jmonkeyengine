{
  AbstractDocument document=(AbstractDocument)context.getDocument();
  StringBuilder sb=new StringBuilder();
  try {
    document.readLock();
    TokenSequence sequence=TokenHierarchy.get(context.getDocument()).tokenSequence();
    sequence.move(context.getOffset());
    sequence.moveNext();
    sb.append("<html>");
    int moved=0;
    while (sequence.movePrevious() && isIgnoredToken(sequence.token()))     moved++;
    String type=sequence.token().toString();
    while (moved-- >= 0)     sequence.moveNext();
    sb.append(sequence.token().text());
    while (!TokenUtilities.equals(sequence.token().text(),"("))     sequence.moveNext();
    sb.append("(");
    Token token;
    boolean first=true;
    while (sequence.moveNext() && !TokenUtilities.equals(sequence.token().text(),")")) {
      token=sequence.token();
      if (!isIgnoredToken(token)) {
        if (first) {
          sb.append(KEYWORD_FONT_COLOR);
        }
 else         if (token.id() != GlslTokenId.COMMA && token.id() != GlslTokenId.BRACKET && token.id() != GlslTokenId.INTEGER_LITERAL) {
          sb.append(" ");
        }
        if (!TokenUtilities.equals(token.text(),"void")) {
          moved=0;
          while (sequence.moveNext() && isIgnoredToken(sequence.token()))           moved++;
          if (sequence.token().id() == GlslTokenId.COMMA || TokenUtilities.equals(sequence.token().text(),")"))           sb.append("</font>");
          while (moved-- >= 0)           sequence.movePrevious();
          sb.append(token.text());
          if (token.id() == GlslTokenId.COMMA)           sb.append(KEYWORD_FONT_COLOR);
        }
        first=false;
      }
    }
    sb.append("</font>)");
    if (!"void".equals(type)) {
      sb.append(" : ");
      sb.append(KEYWORD_FONT_COLOR);
      sb.append(type);
      sb.append("</font>");
    }
    sb.append("</html>");
  }
  finally {
    document.readUnlock();
  }
  return sb.toString();
}
