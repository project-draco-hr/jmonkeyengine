{
  try {
    Element tmpEl=findChildElement(currentElem,name);
    if (tmpEl == null) {
      return defVal;
    }
    currentElem=tmpEl;
    String sizeString=tmpEl.getAttribute("size");
    int requiredSize=(sizeString.length() > 0) ? Integer.parseInt(sizeString) : -1;
    ArrayList<Savable> sal;
    List<ArrayList<Savable>> savableArrayLists=new ArrayList<ArrayList<Savable>>();
    int i=-1;
    while (true) {
      sal=readSavableArrayList("SavableArrayList_" + ++i,null);
      if (sal == null && savableArrayLists.size() >= requiredSize)       break;
      savableArrayLists.add(sal);
    }
    if (requiredSize > -1 && savableArrayLists.size() != requiredSize)     throw new IOException("String array contains wrong element count.  " + "Specified size " + requiredSize + ", data contains "+ savableArrayLists.size());
    currentElem=(Element)tmpEl.getParentNode();
    return savableArrayLists.toArray(new ArrayList[0]);
  }
 catch (  IOException ioe) {
    throw ioe;
  }
catch (  NumberFormatException nfe) {
    IOException io=new IOException(nfe.toString());
    io.initCause(nfe);
    throw io;
  }
catch (  DOMException de) {
    IOException io=new IOException(de.toString());
    io.initCause(de);
    throw io;
  }
}
