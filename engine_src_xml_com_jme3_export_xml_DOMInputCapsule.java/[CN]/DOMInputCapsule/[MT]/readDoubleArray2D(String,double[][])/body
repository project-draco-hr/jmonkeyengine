{
  try {
    Element tmpEl;
    if (name != null) {
      tmpEl=findChildElement(currentElem,name);
    }
 else {
      tmpEl=currentElem;
    }
    if (tmpEl == null) {
      return defVal;
    }
    String sizeString=tmpEl.getAttribute("size");
    NodeList nodes=currentElem.getChildNodes();
    List<double[]> doubleArrays=new ArrayList<double[]>();
    for (int i=0; i < nodes.getLength(); i++) {
      Node n=nodes.item(i);
      if (n instanceof Element && n.getNodeName().contains("array")) {
        doubleArrays.add(readDoubleArray(n.getNodeName(),null));
      }
    }
    if (sizeString.length() > 0) {
      int requiredSize=Integer.parseInt(sizeString);
      if (doubleArrays.size() != requiredSize)       throw new IOException("String array contains wrong element count.  " + "Specified size " + requiredSize + ", data contains "+ doubleArrays.size());
    }
    currentElem=(Element)currentElem.getParentNode();
    return doubleArrays.toArray(new double[0][]);
  }
 catch (  IOException ioe) {
    throw ioe;
  }
catch (  NumberFormatException nfe) {
    IOException io=new IOException(nfe.toString());
    io.initCause(nfe);
    throw io;
  }
catch (  DOMException de) {
    IOException io=new IOException(de.toString());
    io.initCause(de);
    throw io;
  }
}
