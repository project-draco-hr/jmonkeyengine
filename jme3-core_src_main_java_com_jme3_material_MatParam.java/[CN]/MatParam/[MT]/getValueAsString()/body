{
switch (type) {
case Boolean:
case Float:
case Int:
    return value.toString();
case Vector2:
  Vector2f v2=(Vector2f)value;
return v2.getX() + " " + v2.getY();
case Vector3:
Vector3f v3=(Vector3f)value;
return v3.getX() + " " + v3.getY()+ " "+ v3.getZ();
case Vector4:
if (value instanceof Vector4f) {
Vector4f v4=(Vector4f)value;
return v4.getX() + " " + v4.getY()+ " "+ v4.getZ()+ " "+ v4.getW();
}
 else if (value instanceof ColorRGBA) {
ColorRGBA color=(ColorRGBA)value;
return color.getRed() + " " + color.getGreen()+ " "+ color.getBlue()+ " "+ color.getAlpha();
}
 else if (value instanceof Quaternion) {
Quaternion quat=(Quaternion)value;
return quat.getX() + " " + quat.getY()+ " "+ quat.getZ()+ " "+ quat.getW();
}
 else {
throw new UnsupportedOperationException("Unexpected Vector4 type: " + value);
}
case Texture2D:
case Texture3D:
case TextureArray:
case TextureBuffer:
case TextureCubeMap:
Texture texVal=(Texture)value;
TextureKey texKey=(TextureKey)texVal.getKey();
if (texKey == null) {
throw new UnsupportedOperationException("The specified MatParam cannot be represented in J3M");
}
String ret="";
if (texKey.isFlipY()) {
ret+="Flip ";
}
ret+=getWrapMode(texVal,Texture.WrapAxis.S);
ret+=getWrapMode(texVal,Texture.WrapAxis.T);
ret+=getWrapMode(texVal,Texture.WrapAxis.R);
Texture.MinFilter def=Texture.MinFilter.BilinearNoMipMaps;
if (texVal.getImage().hasMipmaps() || texKey.isGenerateMips()) {
def=Texture.MinFilter.Trilinear;
}
if (texVal.getMinFilter() != def) {
ret+="Min" + texVal.getMinFilter().name() + " ";
}
if (texVal.getMagFilter() != Texture.MagFilter.Bilinear) {
ret+="Mag" + texVal.getMagFilter().name() + " ";
}
return ret + "\"" + texKey.getName()+ "\"";
default :
return null;
}
}
