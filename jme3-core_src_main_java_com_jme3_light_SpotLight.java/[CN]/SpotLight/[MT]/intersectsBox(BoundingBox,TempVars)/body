{
  if (this.spotRange > 0f) {
    if (FastMath.abs(box.getCenter().x - position.x) >= spotRange + box.getXExtent() || FastMath.abs(box.getCenter().y - position.y) >= spotRange + box.getYExtent() || FastMath.abs(box.getCenter().z - position.z) >= spotRange + box.getZExtent()) {
      return false;
    }
  }
  Vector3f otherCenter=box.getCenter();
  Vector3f radVect=vars.vect4;
  radVect.set(box.getXExtent(),box.getYExtent(),box.getZExtent());
  float otherRadiusSquared=radVect.lengthSquared();
  float otherRadius=FastMath.sqrt(otherRadiusSquared);
  Vector3f E=direction.mult(otherRadius * outerAngleSinRcp,vars.vect1);
  Vector3f U=position.subtract(E,vars.vect2);
  Vector3f D=otherCenter.subtract(U,vars.vect3);
  float dsqr=D.dot(D);
  float e=direction.dot(D);
  if (e > 0f && e * e >= dsqr * outerAngleCosSqr) {
    D=otherCenter.subtract(position,vars.vect3);
    dsqr=D.dot(D);
    e=-direction.dot(D);
    if (e > 0f && e * e >= dsqr * outerAngleSinSqr) {
      return dsqr <= otherRadiusSquared;
    }
 else {
      return true;
    }
  }
  return false;
}
