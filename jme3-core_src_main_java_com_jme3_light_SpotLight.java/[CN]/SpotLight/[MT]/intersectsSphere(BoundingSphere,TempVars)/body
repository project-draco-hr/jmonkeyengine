{
  if (this.spotRange > 0f) {
    if (sphere.getCenter().subtract(position).lengthSquared() >= FastMath.sqr(spotRange + sphere.getRadius())) {
      return false;
    }
  }
  float otherRadiusSquared=FastMath.sqr(sphere.getRadius());
  float otherRadius=sphere.getRadius();
  Vector3f E=direction.mult(otherRadius * outerAngleSinRcp,vars.vect1);
  Vector3f U=position.subtract(E,vars.vect2);
  Vector3f D=sphere.getCenter().subtract(U,vars.vect3);
  float dsqr=D.dot(D);
  float e=direction.dot(D);
  if (e > 0f && e * e >= dsqr * outerAngleCosSqr) {
    D=sphere.getCenter().subtract(position,vars.vect3);
    dsqr=D.dot(D);
    e=-direction.dot(D);
    if (e > 0f && e * e >= dsqr * outerAngleSinSqr) {
      return dsqr <= otherRadiusSquared;
    }
 else {
      return true;
    }
  }
  return false;
}
