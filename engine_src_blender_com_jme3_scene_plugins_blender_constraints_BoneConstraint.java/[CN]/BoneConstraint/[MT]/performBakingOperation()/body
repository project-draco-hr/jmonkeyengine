{
  Bone owner=blenderContext.getBoneContext(ownerOMA).getBone();
  if (targetOMA != null) {
    if (isNodeTarget) {
      Spatial target=(Spatial)blenderContext.getLoadedFeature(targetOMA,LoadedFeatureDataType.LOADED_FEATURE);
      this.prepareTracksForApplyingConstraints();
      AnimData animData=blenderContext.getAnimData(ownerOMA);
      if (animData != null) {
        for (        Animation animation : animData.anims) {
          Transform ownerTransform=constraintHelper.getBoneTransform(ownerSpace,owner);
          Transform targetTransform=constraintHelper.getNodeObjectTransform(targetSpace,targetOMA,blenderContext);
          Track boneTrack=constraintHelper.getTrack(owner,animData.skeleton,animation);
          Track targetTrack=constraintHelper.getTrack(target,animation);
          constraintDefinition.bake(ownerTransform,targetTransform,boneTrack,targetTrack,this.ipo);
        }
      }
    }
 else {
      BoneContext boneContext=blenderContext.getBoneByName(subtargetName);
      Bone target=boneContext.getBone();
      this.targetOMA=boneContext.getBoneOma();
      this.prepareTracksForApplyingConstraints();
      AnimData animData=blenderContext.getAnimData(ownerOMA);
      if (animData != null) {
        for (        Animation animation : animData.anims) {
          Transform ownerTransform=constraintHelper.getBoneTransform(ownerSpace,owner);
          Transform targetTransform=constraintHelper.getBoneTransform(targetSpace,target);
          Track boneTrack=constraintHelper.getTrack(owner,animData.skeleton,animation);
          Track targetTrack=constraintHelper.getTrack(target,animData.skeleton,animation);
          constraintDefinition.bake(ownerTransform,targetTransform,boneTrack,targetTrack,this.ipo);
        }
      }
    }
  }
 else {
    this.prepareTracksForApplyingConstraints();
    AnimData animData=blenderContext.getAnimData(ownerOMA);
    if (animData != null) {
      for (      Animation animation : animData.anims) {
        Transform ownerTransform=constraintHelper.getBoneTransform(ownerSpace,owner);
        Track boneTrack=constraintHelper.getTrack(owner,animData.skeleton,animation);
        constraintDefinition.bake(ownerTransform,null,boneTrack,null,this.ipo);
      }
    }
  }
}
