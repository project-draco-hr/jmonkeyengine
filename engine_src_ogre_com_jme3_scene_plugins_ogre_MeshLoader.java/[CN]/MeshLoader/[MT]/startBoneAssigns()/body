{
  if (mesh != sharedMesh && usesSharedVerts) {
    return;
  }
  weightsFloatData=FloatBuffer.allocate(vertCount * 4);
  indicesData=ByteBuffer.allocate(vertCount * 4);
  VertexBuffer weights=new VertexBuffer(Type.BoneWeight);
  VertexBuffer indices=new VertexBuffer(Type.BoneIndex);
  weights.setupData(Usage.CpuOnly,4,Format.Float,weightsFloatData);
  indices.setupData(Usage.CpuOnly,4,Format.UnsignedByte,indicesData);
  mesh.setBuffer(weights);
  mesh.setBuffer(indices);
  VertexBuffer weightsHW=new VertexBuffer(Type.HWBoneWeight);
  VertexBuffer indicesHW=new VertexBuffer(Type.HWBoneIndex);
  indicesHW.setUsage(Usage.CpuOnly);
  weightsHW.setUsage(Usage.CpuOnly);
  mesh.setBuffer(weightsHW);
  mesh.setBuffer(indicesHW);
}
