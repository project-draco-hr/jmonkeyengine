{
  this.inputManager=inputManager;
  inputManager.addMapping(CameraInput.FLYCAM_LEFT,new MouseAxisTrigger(MouseInput.AXIS_X,true),new KeyTrigger(KeyInput.KEY_LEFT));
  inputManager.addMapping(CameraInput.FLYCAM_RIGHT,new MouseAxisTrigger(MouseInput.AXIS_X,false),new KeyTrigger(KeyInput.KEY_RIGHT));
  inputManager.addMapping(CameraInput.FLYCAM_UP,new MouseAxisTrigger(MouseInput.AXIS_Y,false),new KeyTrigger(KeyInput.KEY_UP));
  inputManager.addMapping(CameraInput.FLYCAM_DOWN,new MouseAxisTrigger(MouseInput.AXIS_Y,true),new KeyTrigger(KeyInput.KEY_DOWN));
  inputManager.addMapping(CameraInput.FLYCAM_ZOOMIN,new MouseAxisTrigger(MouseInput.AXIS_WHEEL,false));
  inputManager.addMapping(CameraInput.FLYCAM_ZOOMOUT,new MouseAxisTrigger(MouseInput.AXIS_WHEEL,true));
  inputManager.addMapping(CameraInput.FLYCAM_ROTATEDRAG,new MouseButtonTrigger(MouseInput.BUTTON_LEFT));
  inputManager.addMapping(CameraInput.FLYCAM_STRAFELEFT,new KeyTrigger(KeyInput.KEY_A));
  inputManager.addMapping(CameraInput.FLYCAM_STRAFERIGHT,new KeyTrigger(KeyInput.KEY_D));
  inputManager.addMapping(CameraInput.FLYCAM_FORWARD,new KeyTrigger(KeyInput.KEY_W));
  inputManager.addMapping(CameraInput.FLYCAM_BACKWARD,new KeyTrigger(KeyInput.KEY_S));
  inputManager.addMapping(CameraInput.FLYCAM_RISE,new KeyTrigger(KeyInput.KEY_Q));
  inputManager.addMapping(CameraInput.FLYCAM_LOWER,new KeyTrigger(KeyInput.KEY_Z));
  inputManager.addListener(this,mappings);
  inputManager.setCursorVisible(dragToRotate || !isEnabled());
  Joystick[] joysticks=inputManager.getJoysticks();
  if (joysticks != null && joysticks.length > 0) {
    for (    Joystick j : joysticks) {
      mapJoystick(j);
    }
  }
}
