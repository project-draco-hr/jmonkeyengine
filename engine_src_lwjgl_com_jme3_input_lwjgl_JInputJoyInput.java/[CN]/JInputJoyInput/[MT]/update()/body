{
  ControllerEnvironment ce=ControllerEnvironment.getDefaultEnvironment();
  Controller[] cs=ce.getControllers();
  Event e=new Event();
  for (int i=0; i < cs.length; i++) {
    Controller c=cs[i];
    if (c.getType() == Controller.Type.UNKNOWN || c.getType() == Controller.Type.KEYBOARD || c.getType() == Controller.Type.MOUSE)     continue;
    if (!c.poll())     continue;
    int joyId=controllerToIndices.get(c);
    EventQueue q=c.getEventQueue();
    while (q.getNextEvent(e)) {
      Identifier id=e.getComponent().getIdentifier();
      if (id == Identifier.Axis.POV) {
        float x=0, y=0;
        float v=e.getValue();
        if (v == POV.CENTER) {
          x=0;
          y=0;
        }
 else         if (v == POV.DOWN) {
          x=0;
          y=-1f;
        }
 else         if (v == POV.DOWN_LEFT) {
          x=-1f;
          y=-1f;
        }
 else         if (v == POV.DOWN_RIGHT) {
          x=-1f;
          y=1f;
        }
 else         if (v == POV.LEFT) {
          x=-1f;
          y=0;
        }
 else         if (v == POV.RIGHT) {
          x=1f;
          y=0;
        }
 else         if (v == POV.UP) {
          x=0;
          y=1f;
        }
 else         if (v == POV.UP_LEFT) {
          x=-1f;
          y=1f;
        }
 else         if (v == POV.UP_RIGHT) {
          x=1f;
          y=1f;
        }
        JoyAxisEvent evt1=new JoyAxisEvent(joyId,JoyInput.AXIS_POV_X,x);
        JoyAxisEvent evt2=new JoyAxisEvent(joyId,JoyInput.AXIS_POV_Y,y);
        listener.onJoyAxisEvent(evt1);
        listener.onJoyAxisEvent(evt2);
      }
 else       if (id instanceof Axis) {
        float value=e.getValue();
        Axis axis=(Axis)id;
        JoyAxisEvent evt=new JoyAxisEvent(joyId,axisIdsToIndices[joyId].get(axis),value);
        listener.onJoyAxisEvent(evt);
      }
 else       if (id instanceof Button) {
        Button button=(Button)id;
        JoyButtonEvent evt=new JoyButtonEvent(joyId,buttonIdsToIndices[joyId].get(button),e.getValue() == 1f);
        listener.onJoyButtonEvent(evt);
      }
    }
  }
}
