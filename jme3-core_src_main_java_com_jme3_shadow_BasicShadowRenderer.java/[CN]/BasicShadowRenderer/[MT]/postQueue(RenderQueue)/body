{
  for (  Spatial scene : viewPort.getScenes()) {
    ShadowUtil.getGeometriesInCamFrustum(scene,viewPort.getCamera(),ShadowMode.Receive,lightReceivers);
  }
  Camera viewCam=viewPort.getCamera();
  ShadowUtil.updateFrustumPoints(viewCam,viewCam.getFrustumNear(),viewCam.getFrustumFar(),1.0f,points);
  Vector3f frustaCenter=new Vector3f();
  for (  Vector3f point : points) {
    frustaCenter.addLocal(point);
  }
  frustaCenter.multLocal(1f / 8f);
  shadowCam.setProjectionMatrix(null);
  shadowCam.setParallelProjection(true);
  shadowCam.lookAtDirection(direction,Vector3f.UNIT_Y);
  shadowCam.update();
  shadowCam.setLocation(frustaCenter);
  shadowCam.update();
  shadowCam.updateViewProjection();
  ShadowUtil.updateShadowCamera(viewPort,lightReceivers,shadowCam,points,shadowOccluders,shadowMapSize);
  if (shadowOccluders.size() == 0) {
    noOccluders=true;
    return;
  }
 else {
    noOccluders=false;
  }
  Renderer r=renderManager.getRenderer();
  renderManager.setCamera(shadowCam,false);
  renderManager.setForcedMaterial(preshadowMat);
  r.setFrameBuffer(shadowFB);
  r.clearBuffers(true,true,true);
  viewPort.getQueue().renderShadowQueue(shadowOccluders,renderManager,shadowCam,true);
  r.setFrameBuffer(viewPort.getOutputFrameBuffer());
  renderManager.setForcedMaterial(null);
  renderManager.setCamera(viewCam,false);
}
