{
  Class thisClass=savable.getClass();
  int count=0;
  while (thisClass != desiredClass) {
    thisClass=thisClass.getSuperclass();
    if (thisClass != null && SavableClassUtil.isImplementingSavable(thisClass)) {
      count++;
    }
 else {
      break;
    }
  }
  if (thisClass == null) {
    throw new IllegalArgumentException(savable.getClass().getName() + " does not extend " + desiredClass.getName()+ "!");
  }
 else   if (count >= versions.length) {
    if (formatVersion <= 1) {
      System.out.println("BUGGY J3O ALERT");
      return 0;
    }
 else {
      throw new IllegalArgumentException(savable.getClass().getName() + " cannot access version of " + desiredClass.getName()+ " because it doesn't implement Savable");
    }
  }
  return versions[count];
}
