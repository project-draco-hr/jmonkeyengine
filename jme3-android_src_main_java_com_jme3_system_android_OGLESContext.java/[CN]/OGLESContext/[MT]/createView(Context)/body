{
  if (Build.VERSION.SDK_INT < Build.VERSION_CODES.ICE_CREAM_SANDWICH) {
    ActivityManager am=(ActivityManager)context.getSystemService(Context.ACTIVITY_SERVICE);
    ConfigurationInfo info=am.getDeviceConfigurationInfo();
    if (info.reqGlEsVersion < 0x20000) {
      throw new UnsupportedOperationException("OpenGL ES 2.0 is not supported on this device");
    }
  }
 else   if (Build.VERSION.SDK_INT < 9) {
    throw new UnsupportedOperationException("jME3 requires Android 2.3 or later");
  }
  GLSurfaceView view=new GLSurfaceView(context);
  if (androidInput == null) {
    androidInput=new AndroidInputHandler();
  }
  androidInput.setView(view);
  androidInput.loadSettings(settings);
  if (androidJoyInput == null) {
    androidJoyInput=new AndroidJoyInputHandler();
  }
  androidJoyInput.setView(view);
  androidJoyInput.loadSettings(settings);
  view.setEGLContextClientVersion(2);
  view.setFocusableInTouchMode(true);
  view.setFocusable(true);
  int curAlphaBits=settings.getAlphaBits();
  logger.log(Level.FINE,"curAlphaBits: {0}",curAlphaBits);
  if (curAlphaBits >= 8) {
    logger.log(Level.FINE,"Pixel Format: TRANSLUCENT");
    view.getHolder().setFormat(PixelFormat.TRANSLUCENT);
    view.setZOrderOnTop(true);
  }
 else   if (curAlphaBits >= 1) {
    logger.log(Level.FINE,"Pixel Format: TRANSPARENT");
    view.getHolder().setFormat(PixelFormat.TRANSPARENT);
  }
 else {
    logger.log(Level.FINE,"Pixel Format: OPAQUE");
    view.getHolder().setFormat(PixelFormat.OPAQUE);
  }
  AndroidConfigChooser configChooser=new AndroidConfigChooser(settings);
  view.setEGLConfigChooser(configChooser);
  view.setRenderer(this);
  if (Build.VERSION.SDK_INT >= 11) {
    view.setPreserveEGLContextOnPause(true);
  }
  return view;
}
