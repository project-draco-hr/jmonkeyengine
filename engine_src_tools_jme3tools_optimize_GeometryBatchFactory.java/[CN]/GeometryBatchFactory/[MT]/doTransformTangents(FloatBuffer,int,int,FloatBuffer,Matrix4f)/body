{
  Vector3f tan=new Vector3f();
  offset*=components;
  for (int i=0; i < inBuf.limit() / components; i++) {
    tan.x=inBuf.get(i * components + 0);
    tan.y=inBuf.get(i * components + 1);
    tan.z=inBuf.get(i * components + 2);
    transform.multNormal(tan,tan);
    outBuf.put(offset + i * components + 0,tan.x);
    outBuf.put(offset + i * components + 1,tan.y);
    outBuf.put(offset + i * components + 2,tan.z);
    if (components == 4) {
      outBuf.put(offset + i * components + 3,inBuf.get(i * components + 3));
    }
  }
}
