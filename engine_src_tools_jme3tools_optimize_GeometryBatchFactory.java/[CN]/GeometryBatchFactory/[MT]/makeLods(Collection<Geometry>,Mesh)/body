{
  int lodLevels=0;
  int[] lodSize=null;
  int index=0;
  for (  Geometry g : geometries) {
    if (lodLevels == 0) {
      lodLevels=g.getMesh().getNumLodLevels();
    }
    if (lodSize == null) {
      lodSize=new int[lodLevels];
    }
    for (int i=0; i < lodLevels; i++) {
      lodSize[i]+=g.getMesh().getLodLevel(i).getData().capacity();
    }
    index++;
  }
  int[][] lodData=new int[lodLevels][];
  for (int i=0; i < lodLevels; i++) {
    lodData[i]=new int[lodSize[i]];
  }
  VertexBuffer[] lods=new VertexBuffer[lodLevels];
  int bufferPos[]=new int[lodLevels];
  int numOfVertices=0;
  int curGeom=0;
  for (  Geometry g : geometries) {
    if (numOfVertices == 0) {
      numOfVertices=g.getVertexCount();
    }
    for (int i=0; i < lodLevels; i++) {
      ShortBuffer buffer=(ShortBuffer)g.getMesh().getLodLevel(i).getData();
      buffer.rewind();
      for (int j=0; j < buffer.capacity(); j++) {
        lodData[i][bufferPos[i] + j]=buffer.get() + numOfVertices * curGeom;
      }
      bufferPos[i]+=buffer.capacity();
    }
    curGeom++;
  }
  for (int i=0; i < lodLevels; i++) {
    lods[i]=new VertexBuffer(Type.Index);
    lods[i].setupData(Usage.Dynamic,1,Format.UnsignedInt,BufferUtils.createIntBuffer(lodData[i]));
  }
  System.out.println(lods.length);
  outMesh.setLodLevels(lods);
}
