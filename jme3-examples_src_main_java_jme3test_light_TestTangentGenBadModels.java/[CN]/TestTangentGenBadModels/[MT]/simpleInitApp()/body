{
  final Spatial badModel=assetManager.loadModel("Models/TangentBugs/test.blend");
  Material mat=new Material(assetManager,"Common/MatDefs/Light/Lighting.j3md");
  mat.setTexture("NormalMap",assetManager.loadTexture("Models/TangentBugs/test_normal.png"));
  badModel.setMaterial(mat);
  rootNode.attachChild(badModel);
  final Node debugTangents=new Node("debug tangents");
  debugTangents.setCullHint(CullHint.Always);
  rootNode.attachChild(debugTangents);
  final Material debugMat=assetManager.loadMaterial("Common/Materials/VertexColor.j3m");
  badModel.depthFirstTraversal(new SceneGraphVisitorAdapter(){
    @Override public void visit(    Geometry g){
      Mesh m=g.getMesh();
      Material mat=g.getMaterial();
      TangentBinormalGenerator.generate(m);
      Geometry debug=new Geometry("debug tangents geom",TangentBinormalGenerator.genTbnLines(g.getMesh(),0.2f));
      debug.setMaterial(debugMat);
      debug.setCullHint(Spatial.CullHint.Never);
      debug.setLocalTransform(g.getWorldTransform());
      debugTangents.attachChild(debug);
    }
  }
);
  DirectionalLight dl=new DirectionalLight();
  dl.setDirection(new Vector3f(-0.8f,-0.6f,-0.08f).normalizeLocal());
  dl.setColor(new ColorRGBA(1,1,1,1));
  rootNode.addLight(dl);
  lightMdl=new Geometry("Light",new Sphere(10,10,0.1f));
  lightMdl.setMaterial(assetManager.loadMaterial("Common/Materials/RedColor.j3m"));
  lightMdl.getMesh().setStatic();
  rootNode.attachChild(lightMdl);
  pl=new PointLight();
  pl.setColor(ColorRGBA.White);
  BitmapText info=new BitmapText(guiFont);
  info.setText("Press SPACE to switch between lighting and tangent display");
  info.setQueueBucket(Bucket.Gui);
  info.move(0,settings.getHeight() - info.getLineHeight(),0);
  rootNode.attachChild(info);
  inputManager.addMapping("space",new KeyTrigger(KeyInput.KEY_SPACE));
  inputManager.addListener(new ActionListener(){
    private boolean isLit=true;
    public void onAction(    String name,    boolean isPressed,    float tpf){
      if (isPressed)       return;
      Material mat;
      if (isLit) {
        mat=assetManager.loadMaterial("Textures/BumpMapTest/Tangent.j3m");
        debugTangents.setCullHint(CullHint.Inherit);
      }
 else {
        mat=new Material(assetManager,"Common/MatDefs/Light/Lighting.j3md");
        mat.setTexture("NormalMap",assetManager.loadTexture("Models/TangentBugs/test_normal.png"));
        debugTangents.setCullHint(CullHint.Always);
      }
      isLit=!isLit;
      badModel.setMaterial(mat);
    }
  }
,"space");
}
