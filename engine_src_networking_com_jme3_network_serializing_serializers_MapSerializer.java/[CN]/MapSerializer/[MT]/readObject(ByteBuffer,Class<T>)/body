{
  int length=data.getInt();
  Map map;
  try {
    map=(Map)c.newInstance();
  }
 catch (  Exception e) {
    log.log(Level.WARNING,"[Serializer][???] Could not determine map type. Using HashMap.");
    map=new HashMap();
  }
  if (length == 0)   return (T)map;
  int flags=data.get() & 0xff;
  boolean uniqueKeys=(flags & 0x01) == 0;
  boolean uniqueVals=(flags & 0x02) == 0;
  Class keyClazz=null;
  Class valClazz=null;
  Serializer keySerial=null;
  Serializer valSerial=null;
  if (!uniqueKeys) {
    SerializerRegistration reg=Serializer.readClass(data);
    keyClazz=reg.getType();
    keySerial=reg.getSerializer();
  }
  if (!uniqueVals) {
    SerializerRegistration reg=Serializer.readClass(data);
    valClazz=reg.getType();
    valSerial=reg.getSerializer();
  }
  for (int i=0; i < length; i++) {
    Object key;
    Object value;
    if (uniqueKeys) {
      key=Serializer.readClassAndObject(data);
    }
 else {
      key=keySerial.readObject(data,keyClazz);
    }
    if (uniqueVals) {
      value=Serializer.readClassAndObject(data);
    }
 else {
      value=valSerial.readObject(data,valClazz);
    }
    map.put(key,value);
  }
  return (T)map;
}
