{
  Map map=(Map)object;
  int length=map.size();
  buffer.putInt(length);
  if (length == 0)   return;
  Set<Entry> entries=map.entrySet();
  Iterator<Entry> it=entries.iterator();
  Entry entry=it.next();
  Class keyClass=entry.getKey().getClass();
  Class valClass=entry.getValue().getClass();
  while (it.hasNext()) {
    entry=it.next();
    if (entry.getKey().getClass() != keyClass) {
      keyClass=null;
      if (valClass == null)       break;
    }
    if (entry.getValue().getClass() != valClass) {
      valClass=null;
      if (keyClass == null)       break;
    }
  }
  boolean uniqueKeys=keyClass == null;
  boolean uniqueVals=valClass == null;
  int flags=0;
  if (!uniqueKeys)   flags|=0x01;
  if (!uniqueVals)   flags|=0x02;
  buffer.put((byte)flags);
  Serializer keySerial=null, valSerial=null;
  if (!uniqueKeys) {
    Serializer.writeClass(buffer,keyClass);
    keySerial=Serializer.getSerializer(keyClass);
  }
  if (!uniqueVals) {
    Serializer.writeClass(buffer,valClass);
    valSerial=Serializer.getSerializer(valClass);
  }
  it=entries.iterator();
  while (it.hasNext()) {
    entry=it.next();
    if (uniqueKeys) {
      Serializer.writeClassAndObject(buffer,entry.getKey());
    }
 else {
      keySerial.writeObject(buffer,entry.getKey());
    }
    if (uniqueVals) {
      Serializer.writeClassAndObject(buffer,entry.getValue());
    }
 else {
      valSerial.writeObject(buffer,entry.getValue());
    }
  }
}
