{
  if (key == null)   throw new IllegalArgumentException("key cannot be null");
  if (eventListener != null)   eventListener.assetRequested(key);
  AssetKey smartKey=null;
  Object o=null;
  if (key.shouldCache()) {
    if (key.useSmartCache()) {
      SmartAssetInfo smartInfo=cache.getFromSmartCache(key);
      if (smartInfo != null) {
        smartKey=smartInfo.smartKey.get();
        if (smartKey != null) {
          o=smartInfo.asset;
        }
      }
    }
 else {
      o=cache.getFromCache(key);
    }
  }
  if (o == null) {
    AssetLoader loader=handler.aquireLoader(key);
    if (loader == null) {
      throw new IllegalStateException("No loader registered for type \"" + key.getExtension() + "\"");
    }
    if (handler.getLocatorCount() == 0) {
      throw new IllegalStateException("There are no locators currently" + " registered. Use AssetManager." + "registerLocator() to register a"+ " locator.");
    }
    AssetInfo info=handler.tryLocate(key);
    if (info == null) {
      throw new AssetNotFoundException(key.toString());
    }
    try {
      o=loader.load(info);
    }
 catch (    IOException ex) {
      throw new AssetLoadException("An exception has occured while loading asset: " + key,ex);
    }
    if (o == null) {
      throw new AssetLoadException("Error occured while loading asset \"" + key + "\" using"+ loader.getClass().getSimpleName());
    }
 else {
      if (logger.isLoggable(Level.FINER)) {
        logger.log(Level.FINER,"Loaded {0} with {1}",new Object[]{key,loader.getClass().getSimpleName()});
      }
      o=key.postProcess(o);
      if (key.shouldCache())       cache.addToCache(key,o);
      if (eventListener != null)       eventListener.assetLoaded(key);
    }
  }
  T clone=(T)key.createClonedInstance(o);
  if (key.useSmartCache()) {
    if (smartKey != null) {
      ((Asset)clone).setKey(smartKey);
    }
 else {
      ((Asset)clone).setKey(key);
    }
  }
  return clone;
}
