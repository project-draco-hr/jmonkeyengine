{
  Long boneOMA=boneStructure.getOldMemoryAddress();
  bone=new Bone(boneName);
  bones.add(bone);
  boneOMAs.put(bone,boneOMA);
  blenderContext.addLoadedFeatures(boneOMA,boneName,boneStructure,bone);
  ObjectHelper objectHelper=blenderContext.getHelper(ObjectHelper.class);
  Vector3f poseLocation=restMatrix.toTranslationVector();
  Quaternion rotation=restMatrix.toRotationQuat().normalizeLocal();
  Vector3f scale=objectHelper.getScale(restMatrix);
  if (parent == null) {
    Quaternion rotationQuaternion=objectToArmatureMatrix.toRotationQuat().normalizeLocal();
    scale.multLocal(objectHelper.getScale(objectToArmatureMatrix));
    rotationQuaternion.multLocal(poseLocation.addLocal(objectToArmatureMatrix.toTranslationVector()));
    rotation.multLocal(rotationQuaternion);
  }
  bone.setBindTransforms(poseLocation,rotation,scale);
  for (  BoneContext child : children) {
    bone.addChild(child.buildBone(bones,boneOMAs,objectToArmatureMatrix,blenderContext));
  }
  return bone;
}
