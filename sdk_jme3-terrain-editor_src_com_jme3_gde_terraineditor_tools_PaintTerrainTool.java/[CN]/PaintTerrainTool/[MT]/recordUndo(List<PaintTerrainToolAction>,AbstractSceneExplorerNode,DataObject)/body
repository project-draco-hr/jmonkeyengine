{
  Lookup lookup=Lookup.getDefault();
  SceneUndoRedoManager manager=lookup.lookup(SceneUndoRedoManager.class);
  AbstractUndoableSceneEdit undoer=new AbstractUndoableSceneEdit(){
    @Override public void sceneUndo() throws CannotUndoException {
      Terrain terrain=null;
      for (int i=actions.size() - 1; i >= 0; i--) {
        PaintTerrainToolAction a=actions.get(i);
        if (terrain == null)         terrain=a.getTerrain(rootNode.getLookup().lookup(Node.class));
        a.doUndoTool(rootNode,terrain);
      }
      setModified(rootNode,dataObject);
    }
    @Override public void sceneRedo() throws CannotRedoException {
      for (int i=0; i < actions.size(); i++) {
        PaintTerrainToolAction a=actions.get(i);
        a.applyTool(rootNode);
      }
      setModified(rootNode,dataObject);
    }
  }
;
  if (manager != null)   manager.addEdit(this,undoer);
}
