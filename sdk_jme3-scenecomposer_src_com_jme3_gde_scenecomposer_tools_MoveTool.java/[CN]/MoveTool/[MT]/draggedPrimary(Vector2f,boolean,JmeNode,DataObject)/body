{
  if (!pressed) {
    setDefaultAxisMarkerColors();
    pickedMarker=null;
    constraintAxis=Vector3f.UNIT_XYZ;
    if (wasDragging) {
      actionPerformed(new MoveUndo(toolController.getSelectedSpatial(),startPosition,lastPosition));
      wasDragging=false;
    }
    pickManager.reset();
    return;
  }
  if (toolController.getSelectedSpatial() == null) {
    return;
  }
  if (pickedMarker == null) {
    pickedMarker=pickAxisMarker(camera,screenCoord,axisPickType);
    if (pickedMarker == null) {
      return;
    }
    if (pickedMarker.equals(QUAD_XY)) {
      pickManager.initiatePick(toolController.getSelectedSpatial(),PickManager.PLANE_XY,PickManager.TransformationType.local,camera,screenCoord);
    }
 else     if (pickedMarker.equals(QUAD_XZ)) {
      pickManager.initiatePick(toolController.getSelectedSpatial(),PickManager.PLANE_XZ,PickManager.TransformationType.local,camera,screenCoord);
    }
 else     if (pickedMarker.equals(QUAD_YZ)) {
      pickManager.initiatePick(toolController.getSelectedSpatial(),PickManager.PLANE_YZ,PickManager.TransformationType.local,camera,screenCoord);
    }
 else     if (pickedMarker.equals(ARROW_X)) {
      pickManager.initiatePick(toolController.getSelectedSpatial(),PickManager.PLANE_XY,PickManager.TransformationType.local,camera,screenCoord);
      constraintAxis=Vector3f.UNIT_X;
    }
 else     if (pickedMarker.equals(ARROW_Y)) {
      pickManager.initiatePick(toolController.getSelectedSpatial(),PickManager.PLANE_YZ,PickManager.TransformationType.local,camera,screenCoord);
      constraintAxis=Vector3f.UNIT_Y;
    }
 else     if (pickedMarker.equals(ARROW_Z)) {
      pickManager.initiatePick(toolController.getSelectedSpatial(),PickManager.PLANE_XZ,PickManager.TransformationType.local,camera,screenCoord);
      constraintAxis=Vector3f.UNIT_Z;
    }
    startPosition=toolController.getSelectedSpatial().getLocalTranslation().clone();
  }
  if (!pickManager.updatePick(camera,screenCoord)) {
    return;
  }
  Vector3f diff=Vector3f.ZERO;
  if (pickedMarker.equals(QUAD_XY) || pickedMarker.equals(QUAD_XZ) || pickedMarker.equals(QUAD_YZ)) {
    diff=pickManager.getTranslation();
  }
 else   if (pickedMarker.equals(ARROW_X) || pickedMarker.equals(ARROW_Y) || pickedMarker.equals(ARROW_Z)) {
    diff=pickManager.getTranslation(constraintAxis);
  }
  Vector3f position=startPosition.add(diff);
  lastPosition=position;
  toolController.getSelectedSpatial().setLocalTranslation(position);
  updateToolsTransformation();
  wasDragging=true;
}
