{
  if (!pressed) {
    setDefaultAxisMarkerColors();
    pickedMarker=null;
    constraintAxis=Vector3f.UNIT_XYZ;
    if (wasDragging) {
      actionPerformed(new MoveUndo(toolController.getSelectedSpatial(),startPosition,lastPosition));
      wasDragging=false;
    }
    pickManager.reset();
  }
 else {
    if (toolController.getSelectedSpatial() == null) {
      return;
    }
    if (pickedMarker == null) {
      pickedMarker=pickAxisMarker(camera,screenCoord,axisPickType);
      if (pickedMarker == null) {
        return;
      }
      if (pickedMarker.equals(QUAD_XY)) {
        pickManager.initiatePick(toolController.getSelectedSpatial(),PickManager.PLANE_XY,getTransformType(),camera,screenCoord);
      }
 else       if (pickedMarker.equals(QUAD_XZ)) {
        pickManager.initiatePick(toolController.getSelectedSpatial(),PickManager.PLANE_XZ,getTransformType(),camera,screenCoord);
      }
 else       if (pickedMarker.equals(QUAD_YZ)) {
        pickManager.initiatePick(toolController.getSelectedSpatial(),PickManager.PLANE_YZ,getTransformType(),camera,screenCoord);
      }
 else       if (pickedMarker.equals(ARROW_X)) {
        pickManager.initiatePick(toolController.getSelectedSpatial(),PickManager.PLANE_XY,getTransformType(),camera,screenCoord);
        constraintAxis=Vector3f.UNIT_X;
      }
 else       if (pickedMarker.equals(ARROW_Y)) {
        pickManager.initiatePick(toolController.getSelectedSpatial(),PickManager.PLANE_YZ,getTransformType(),camera,screenCoord);
        constraintAxis=Vector3f.UNIT_Y;
      }
 else       if (pickedMarker.equals(ARROW_Z)) {
        pickManager.initiatePick(toolController.getSelectedSpatial(),PickManager.PLANE_XZ,getTransformType(),camera,screenCoord);
        constraintAxis=Vector3f.UNIT_Z;
      }
      startPosition=toolController.getSelectedSpatial().getLocalTranslation().clone();
      wasDragging=true;
    }
  }
}
