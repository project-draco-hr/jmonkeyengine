{
  for (int f=0; f < iNrTrianglesIn; f++) {
    for (int i=0; i < 3; i++) {
      if (pTriInfos[f].faceNeighbors[i] == -1) {
        final int i0_A=piTriListIn[f * 3 + i];
        final int i1_A=piTriListIn[f * 3 + (i < 2 ? (i + 1) : 0)];
        boolean bFound=false;
        int t=0, j=0;
        while (!bFound && t < iNrTrianglesIn) {
          if (t != f) {
            j=0;
            while (!bFound && j < 3) {
              final int i1_B=piTriListIn[t * 3 + j];
              final int i0_B=piTriListIn[t * 3 + (j < 2 ? (j + 1) : 0)];
              if (i0_A == i0_B && i1_A == i1_B) {
                bFound=true;
              }
 else {
                ++j;
              }
            }
          }
          if (!bFound) {
            ++t;
          }
        }
        if (bFound) {
          pTriInfos[f].faceNeighbors[i]=t;
          pTriInfos[t].faceNeighbors[j]=f;
        }
      }
    }
  }
}
