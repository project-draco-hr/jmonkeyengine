{
  Vector3f rootPoint=new Vector3f();
  Vector3f rightPoint=new Vector3f();
  Vector3f leftPoint=new Vector3f();
  Vector3f topPoint=new Vector3f();
  Vector3f bottomPoint=new Vector3f();
  Vector2f rootTex=new Vector2f();
  Vector2f rightTex=new Vector2f();
  Vector2f leftTex=new Vector2f();
  Vector2f topTex=new Vector2f();
  Vector2f bottomTex=new Vector2f();
  Vector3f tangent=new Vector3f();
  Vector3f binormal=new Vector3f();
  Vector3f normal=new Vector3f();
  int s=this.getSize() - 1;
  if (right != null) {
    for (int i=0; i < s + 1; i++) {
      rootPoint.set(s,this.getHeightmapHeight(s,i),i);
      leftPoint.set(s - 1,this.getHeightmapHeight(s - 1,i),i);
      rightPoint.set(s + 1,right.getHeightmapHeight(1,i),i);
      this.getTex(s,i,rootTex);
      rightTex.set(rootTex.add(right.getTex(1,i,rightTex).setY(0)));
      if (i == 0) {
        if (top == null) {
          bottomPoint.set(s,this.getHeightmapHeight(s,i + 1),i + 1);
          this.getTex(s,i + 1,bottomTex);
          averageNormalsTangents(null,rootPoint,leftPoint,bottomPoint,rightPoint,null,rootTex,leftTex,bottomTex,rightTex,normal,tangent,binormal);
          VertexBuffer tpNB=this.getMesh().getBuffer(Type.Normal);
          VertexBuffer rightNB=right.getMesh().getBuffer(Type.Normal);
          BufferUtils.setInBuffer(normal,(FloatBuffer)tpNB.getData(),s);
          BufferUtils.setInBuffer(normal,(FloatBuffer)rightNB.getData(),0);
        }
 else {
          topPoint.set(s,top.getHeightmapHeight(s,s - 1),i - 1);
          bottomPoint.set(s,this.getHeightmapHeight(s,i + 1),i + 1);
          this.getTex(s,i + 1,bottomTex);
          averageNormalsTangents(topPoint,rootPoint,leftPoint,bottomPoint,rightPoint,topTex,rootTex,leftTex,bottomTex,rightTex,normal,tangent,binormal);
          VertexBuffer tpNB=this.getMesh().getBuffer(Type.Normal);
          VertexBuffer rightNB=right.getMesh().getBuffer(Type.Normal);
          BufferUtils.setInBuffer(normal,(FloatBuffer)tpNB.getData(),s);
          BufferUtils.setInBuffer(normal,(FloatBuffer)rightNB.getData(),0);
        }
      }
 else       if (i == s) {
        if (bottom == null) {
          topPoint.set(s,this.getHeightmapHeight(s,i - 1),i - 1);
          averageNormalsTangents(topPoint,rootPoint,leftPoint,null,rightPoint,topTex,rootTex,leftTex,null,rightTex,normal,tangent,binormal);
          VertexBuffer tpNB=this.getMesh().getBuffer(Type.Normal);
          VertexBuffer rightNB=right.getMesh().getBuffer(Type.Normal);
          BufferUtils.setInBuffer(normal,(FloatBuffer)tpNB.getData(),(s + 1) * (i + 1) - 1);
          BufferUtils.setInBuffer(normal,(FloatBuffer)rightNB.getData(),(s + 1) * (i));
        }
 else {
          topPoint.set(s,this.getHeightmapHeight(s,i - 1),i - 1);
          bottomPoint.set(s,bottom.getHeightmapHeight(s,1),i + 1);
          bottom.getTex(s,1,bottomTex);
          averageNormalsTangents(topPoint,rootPoint,leftPoint,bottomPoint,rightPoint,topTex,rootTex,leftTex,bottomTex,rightTex,normal,tangent,binormal);
          VertexBuffer tpNB=this.getMesh().getBuffer(Type.Normal);
          VertexBuffer rightNB=right.getMesh().getBuffer(Type.Normal);
          VertexBuffer downNB=bottom.getMesh().getBuffer(Type.Normal);
          BufferUtils.setInBuffer(normal,(FloatBuffer)tpNB.getData(),(s + 1) * (s + 1) - 1);
          BufferUtils.setInBuffer(normal,(FloatBuffer)rightNB.getData(),(s + 1) * s);
          BufferUtils.setInBuffer(normal,(FloatBuffer)downNB.getData(),s);
          if (bottomRight != null) {
            VertexBuffer bottomRightNB=bottomRight.getMesh().getBuffer(Type.Normal);
            BufferUtils.setInBuffer(normal,(FloatBuffer)bottomRightNB.getData(),0);
            bottomRightNB.setUpdateNeeded();
          }
          downNB.setUpdateNeeded();
          ;
        }
      }
 else {
        topPoint.set(s,this.getHeightmapHeight(s,i - 1),i - 1);
        bottomPoint.set(s,this.getHeightmapHeight(s,i + 1),i + 1);
        this.getTex(s,i + 1,bottomTex);
        averageNormalsTangents(topPoint,rootPoint,leftPoint,bottomPoint,rightPoint,null,rootTex,null,bottomTex,rightTex,normal,tangent,binormal);
        VertexBuffer tpNB=this.getMesh().getBuffer(Type.Normal);
        VertexBuffer rightNB=right.getMesh().getBuffer(Type.Normal);
        BufferUtils.setInBuffer(normal,(FloatBuffer)tpNB.getData(),(s + 1) * (i + 1) - 1);
        BufferUtils.setInBuffer(normal,(FloatBuffer)rightNB.getData(),(s + 1) * (i));
      }
    }
    right.getMesh().getBuffer(Type.Normal).setUpdateNeeded();
  }
  if (bottom != null) {
    for (int i=0; i < s + 1; i++) {
      rootPoint.set(i,this.getHeightmapHeight(i,s),s);
      topPoint.set(i,this.getHeightmapHeight(i,s - 1),s - 1);
      bottomPoint.set(i,bottom.getHeightmapHeight(i,1),s + 1);
      this.getTex(i,s,rootTex);
      this.getTex(i,s - 1,topTex);
      bottomTex.set(rootTex.add(bottom.getTex(i,1,bottomTex).setX(0)));
      if (i == 0) {
        if (left == null) {
          rightPoint.set(i + 1,this.getHeightmapHeight(i + 1,s),s);
          averageNormalsTangents(topPoint,rootPoint,null,bottomPoint,rightPoint,topTex,rootTex,null,bottomTex,rightTex,normal,tangent,binormal);
          VertexBuffer tpNB=this.getMesh().getBuffer(Type.Normal);
          VertexBuffer tpTB=this.getMesh().getBuffer(Type.Tangent);
          VertexBuffer tpBB=this.getMesh().getBuffer(Type.Binormal);
          BufferUtils.setInBuffer(normal,(FloatBuffer)tpNB.getData(),(s + 1) * (s) + i);
          BufferUtils.setInBuffer(tangent,(FloatBuffer)tpTB.getData(),(s + 1) * (s) + i);
          BufferUtils.setInBuffer(binormal,(FloatBuffer)tpBB.getData(),(s + 1) * (s) + i);
          VertexBuffer downNB=bottom.getMesh().getBuffer(Type.Normal);
          BufferUtils.setInBuffer(normal,(FloatBuffer)downNB.getData(),i);
        }
      }
 else       if (i == s) {
      }
 else {
        leftPoint.set(i - 1,this.getHeightmapHeight(i - 1,s),s);
        rightPoint.set(i + 1,this.getHeightmapHeight(i + 1,s),s);
        this.getTex(i - 1,s,leftTex);
        this.getTex(i + 1,s,rightTex);
        averageNormalsTangents(topPoint,rootPoint,leftPoint,bottomPoint,rightPoint,topTex,rootTex,leftTex,bottomTex,rightTex,normal,tangent,binormal);
        VertexBuffer tpNB=this.getMesh().getBuffer(Type.Normal);
        VertexBuffer tpTB=this.getMesh().getBuffer(Type.Tangent);
        VertexBuffer tpBB=this.getMesh().getBuffer(Type.Binormal);
        BufferUtils.setInBuffer(normal,(FloatBuffer)tpNB.getData(),(s + 1) * (s) + i);
        BufferUtils.setInBuffer(tangent,(FloatBuffer)tpTB.getData(),(s + 1) * (s) + i);
        BufferUtils.setInBuffer(binormal,(FloatBuffer)tpBB.getData(),(s + 1) * (s) + i);
        averageNormalsTangents(topPoint,rootPoint,leftPoint,bottomPoint,rightPoint,null,null,null,null,null,normal,tangent,binormal);
        VertexBuffer downNB=bottom.getMesh().getBuffer(Type.Normal);
        BufferUtils.setInBuffer(normal,(FloatBuffer)downNB.getData(),i);
      }
    }
    bottom.getMesh().getBuffer(Type.Normal).setUpdateNeeded();
  }
  this.getMesh().getBuffer(Type.Normal).setUpdateNeeded();
  this.getMesh().getBuffer(Type.Tangent).setUpdateNeeded();
  this.getMesh().getBuffer(Type.Binormal).setUpdateNeeded();
}
