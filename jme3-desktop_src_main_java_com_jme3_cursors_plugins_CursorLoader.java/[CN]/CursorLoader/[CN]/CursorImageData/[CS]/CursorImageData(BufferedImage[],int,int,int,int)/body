{
  IntBuffer singleCursor=null;
  ArrayList<IntBuffer> cursors=new ArrayList<IntBuffer>();
  int bwidth=0;
  int bheight=0;
  boolean multIcons=false;
  for (int i=0; i < bi.length; i++) {
    BufferedImage img=bi[i];
    bwidth=img.getWidth();
    bheight=img.getHeight();
    if (curType == 1) {
      hsX=0;
      hsY=bheight - 1;
    }
 else     if (curType == 2) {
      if (hsY == 0) {
        hsY=bheight - 1;
      }
    }
 else {
      if (bwidth != 32 && bheight != 32) {
        multIcons=true;
        continue;
      }
 else {
        if (img.getType() != 2) {
          continue;
        }
 else {
          hsY=bheight - 1;
        }
      }
    }
    AffineTransform trans=AffineTransform.getScaleInstance(1,-1);
    trans.translate(0,-img.getHeight(null));
    AffineTransformOp op=new AffineTransformOp(trans,AffineTransformOp.TYPE_BILINEAR);
    img=op.filter(img,null);
    singleCursor=BufferUtils.createIntBuffer(img.getWidth() * img.getHeight());
    DataBufferInt dataIntBuf=(DataBufferInt)img.getData().getDataBuffer();
    singleCursor=IntBuffer.wrap(dataIntBuf.getData());
    cursors.add(singleCursor);
  }
  int count;
  if (multIcons) {
    bwidth=32;
    bheight=32;
    count=1;
  }
 else {
    count=cursors.size();
  }
  data=BufferUtils.createIntBuffer(bwidth * bheight);
  imgDelay=BufferUtils.createIntBuffer(bi.length);
  for (int i=0; i < count; i++) {
    data.put(cursors.get(i));
    if (delay > 0) {
      imgDelay.put(delay);
    }
  }
  width=bwidth;
  height=bheight;
  xHotSpot=hsX;
  yHotSpot=hsY;
  numImages=count;
  data.rewind();
  if (imgDelay != null) {
    imgDelay.rewind();
  }
}
