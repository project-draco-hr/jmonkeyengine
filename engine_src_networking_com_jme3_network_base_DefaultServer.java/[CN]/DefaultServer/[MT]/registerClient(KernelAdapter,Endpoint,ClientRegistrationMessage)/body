{
  Connection addedConnection=null;
  Connection bootedConnection=null;
synchronized (this) {
    long tempId=m.getId();
    Connection c=connecting.remove(tempId);
    if (c == null) {
      c=new Connection();
      log.log(Level.FINE,"Registering client for endpoint, pass 1:{0}.",p);
    }
 else {
      log.log(Level.FINE,"Refining client registration for endpoint:{0}.",p);
    }
    if (ka == fastAdapter) {
      c.fast=p;
      if (c.reliable == null) {
        connecting.put(tempId,c);
      }
    }
 else {
      c.reliable=p;
      if (!getGameName().equals(m.getGameName()) || getVersion() != m.getVersion()) {
        log.log(Level.INFO,"Kicking client due to name/version mismatch:{0}.",c);
        c.close("Server client mismatch, server:" + getGameName() + " v"+ getVersion()+ "  client:"+ m.getGameName()+ " v"+ m.getVersion());
        return;
      }
      if (c.fast == null && fastAdapter != null) {
        connecting.put(tempId,c);
      }
    }
    if (!connecting.containsKey(tempId)) {
      if (connections.put(c.getId(),c) == null) {
        if (c.fast != null) {
          endpointConnections.put(c.fast,c);
        }
        endpointConnections.put(c.reliable,c);
        addedConnection=c;
      }
    }
  }
  if (addedConnection != null) {
    log.log(Level.INFO,"Client registered:{0}.",addedConnection);
    fireConnectionAdded(addedConnection);
    m=new ClientRegistrationMessage();
    m.setId(addedConnection.getId());
    m.setReliable(true);
    addedConnection.send(m);
  }
}
