{
  float turb=turbul;
  xyz[0]=(float)Math.sin((x + y + z) * 5.0f);
  xyz[1]=(float)Math.cos((-x + y - z) * 5.0f);
  xyz[2]=-(float)Math.cos((-x - y + z) * 5.0f);
  if (colorBand != null) {
    pixel.intensity=FastMath.clamp(0.3333f * (xyz[0] + xyz[1] + xyz[2]),0.0f,1.0f);
    int colorbandIndex=(int)(pixel.intensity * 1000.0f);
    pixel.red=colorBand[colorbandIndex][0];
    pixel.green=colorBand[colorbandIndex][1];
    pixel.blue=colorBand[colorbandIndex][2];
    pixel.alpha=colorBand[colorbandIndex][3];
  }
 else {
    if (noisedepth > 0) {
      xyz[0]*=turb;
      xyz[1]*=turb;
      xyz[2]*=turb;
      for (int m=0; m < noisedepth; ++m) {
        noiseDepthFunctions[m].compute(xyz,turb);
      }
    }
    if (turb != 0.0f) {
      turb*=2.0f;
      xyz[0]/=turb;
      xyz[1]/=turb;
      xyz[2]/=turb;
    }
    pixel.red=0.5f - xyz[0];
    pixel.green=0.5f - xyz[1];
    pixel.blue=0.5f - xyz[2];
    pixel.alpha=1.0f;
  }
  this.applyBrightnessAndContrast(bacd,pixel);
}
