{
  physicsSpace=space;
  if (space == null) {
    return;
  }
  if (space.getSpaceId() == 0) {
    throw new IllegalStateException("Physics space is not initialized!");
  }
  if (rayCasterId != 0) {
    space.removeCollisionObject(this);
    Logger.getLogger(this.getClass().getName()).log(Level.INFO,"Clearing RayCaster {0}",Long.toHexString(rayCasterId));
    Logger.getLogger(this.getClass().getName()).log(Level.INFO,"Clearing Vehicle {0}",Long.toHexString(vehicleId));
    finalizeNative(rayCasterId,vehicleId);
  }
  rayCasterId=createVehicleRaycaster(objectId,space.getSpaceId());
  Logger.getLogger(this.getClass().getName()).log(Level.INFO,"Created RayCaster {0}",Long.toHexString(rayCasterId));
  vehicleId=createRaycastVehicle(objectId,rayCasterId);
  Logger.getLogger(this.getClass().getName()).log(Level.INFO,"Created Vehicle {0}",Long.toHexString(vehicleId));
  setCoordinateSystem(vehicleId,0,1,2);
  for (  VehicleWheel wheel : wheels) {
    wheel.setWheelId(addWheel(vehicleId,wheel.getLocation(),wheel.getDirection(),wheel.getAxle(),wheel.getRestLength(),wheel.getRadius(),tuning,wheel.isFrontWheel()));
  }
}
