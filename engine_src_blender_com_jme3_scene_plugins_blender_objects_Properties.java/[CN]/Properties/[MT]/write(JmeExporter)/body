{
  OutputCapsule oc=ex.getCapsule(this);
  oc.write(name,"name",DEFAULT_NAME);
  oc.write(type,"type",0);
  oc.write(subType,"subtype",0);
  oc.write(description,"description",null);
switch (type) {
case IDP_STRING:
    oc.write((String)value,"value",null);
  break;
case IDP_INT:
oc.write((Integer)value,"value",0);
break;
case IDP_FLOAT:
oc.write((Float)value,"value",0);
break;
case IDP_ARRAY:
switch (subType) {
case IDP_INT:
oc.write((int[])value,"value",null);
break;
case IDP_FLOAT:
oc.write((float[])value,"value",null);
break;
case IDP_DOUBLE:
oc.write((double[])value,"value",null);
break;
default :
LOGGER.warning("Cannot save the property's value! Invalid array subtype! Property: name: " + name + "; subtype: "+ subType);
}
case IDP_GROUP:
oc.writeSavableArrayList((ArrayList<Properties>)value,"value",null);
break;
case IDP_DOUBLE:
oc.write((Double)value,"value",0);
break;
case IDP_IDPARRAY:
oc.writeSavableArrayList((ArrayList)value,"value",null);
break;
case IDP_NUMTYPES:
LOGGER.warning("Numtypes value not supported! Cannot write it!");
break;
default :
LOGGER.warning("Cannot save the property's value! Invalid type! Property: name: " + name + "; type: "+ type);
}
}
