{
  super.onCreate(savedInstanceState);
  JmeAndroidSystem.setActivity(this);
  if (screenFullScreen) {
    requestWindowFeature(Window.FEATURE_NO_TITLE);
    getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,WindowManager.LayoutParams.FLAG_FULLSCREEN);
  }
 else {
    if (!screenShowTitle) {
      requestWindowFeature(Window.FEATURE_NO_TITLE);
    }
  }
  setRequestedOrientation(screenOrientation);
  final DataObject data=(DataObject)getLastNonConfigurationInstance();
  if (data != null) {
    logger.log(Level.INFO,"onCreate: onRetainNonConfigurationInstance is not null");
    this.app=data.app;
    ctx=(OGLESContext)app.getContext();
    view=ctx.createView(eglConfigType,eglConfigVerboseLogging);
    ctx.setSystemListener(this);
    layoutDisplay();
    logger.log(Level.INFO,"app: {0}",app.hashCode());
    logger.log(Level.INFO,"ctx: {0}",ctx.hashCode());
    logger.log(Level.INFO,"view: {0}",view.hashCode());
  }
 else {
    logger.log(Level.INFO,"onCreate: onRetainNonConfigurationInstance is null");
    AppSettings settings=new AppSettings(true);
    settings.setEmulateMouse(mouseEventsEnabled);
    settings.setEmulateMouseFlipAxis(mouseEventsInvertX,mouseEventsInvertY);
    try {
      if (app == null) {
        @SuppressWarnings("unchecked") Class<? extends Application> clazz=(Class<? extends Application>)Class.forName(appClass);
        app=clazz.newInstance();
      }
      app.setSettings(settings);
      app.start();
      ctx=(OGLESContext)app.getContext();
      view=ctx.createView(eglConfigType,eglConfigVerboseLogging);
      WindowManager wind=this.getWindowManager();
      Display disp=wind.getDefaultDisplay();
      logger.log(Level.WARNING,"Resolution from Window: {0}, {1}",new Object[]{disp.getWidth(),disp.getHeight()});
      ctx.getSettings().setResolution(disp.getWidth(),disp.getHeight());
      ctx.setSystemListener(this);
      layoutDisplay();
    }
 catch (    Exception ex) {
      handleError("Class " + appClass + " init failed",ex);
      setContentView(new TextView(this));
    }
  }
}
