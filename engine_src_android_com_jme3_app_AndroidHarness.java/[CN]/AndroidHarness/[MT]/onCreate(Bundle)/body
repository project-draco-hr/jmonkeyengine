{
  super.onCreate(savedInstanceState);
  Logger log=logger;
  boolean bIsLogFormatSet=false;
  do {
    if (log.getHandlers().length == 0) {
      log=logger.getParent();
      if (log != null) {
        for (        Handler h : log.getHandlers()) {
          h.setFormatter(new JmeFormatter());
          bIsLogFormatSet=true;
        }
      }
    }
  }
 while (log != null && !bIsLogFormatSet);
  JmeSystem.setResources(getResources());
  JmeSystem.setActivity(this);
  requestWindowFeature(Window.FEATURE_NO_TITLE);
  getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,WindowManager.LayoutParams.FLAG_FULLSCREEN);
  setRequestedOrientation(screenOrientation);
  AppSettings settings=new AppSettings(true);
  AndroidInput input=new AndroidInput(this);
  input.setMouseEventsInvertX(mouseEventsInvertX);
  input.setMouseEventsInvertY(mouseEventsInvertY);
  input.setMouseEventsEnabled(mouseEventsEnabled);
  try {
    if (app == null) {
      @SuppressWarnings("unchecked") Class<? extends Application> clazz=(Class<? extends Application>)Class.forName(appClass);
      app=clazz.newInstance();
    }
    app.setSettings(settings);
    app.start();
    ctx=(OGLESContext)app.getContext();
    view=ctx.createView(input,eglConfigType,eglConfigVerboseLogging);
    setContentView(view);
    WindowManager wind=this.getWindowManager();
    Display disp=wind.getDefaultDisplay();
    ctx.getSettings().setResolution(disp.getWidth(),disp.getHeight());
    AppSettings s=ctx.getSettings();
    logger.log(Level.INFO,"Settings: Width {0} Height {1}",new Object[]{s.getWidth(),s.getHeight()});
  }
 catch (  Exception ex) {
    handleError("Class " + appClass + " init failed",ex);
    setContentView(new TextView(this));
  }
}
