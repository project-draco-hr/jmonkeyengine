{
  int bufId=vb.getId();
  boolean created=false;
  if (bufId == -1) {
    glGenBuffers(intBuf1);
    bufId=intBuf1.get(0);
    vb.setId(bufId);
    objManager.registerForCleanup(vb);
    created=true;
  }
  int target;
  if (vb.getBufferType() == VertexBuffer.Type.Index) {
    target=GL_ELEMENT_ARRAY_BUFFER;
    if (context.boundElementArrayVBO != bufId) {
      glBindBuffer(target,bufId);
      context.boundElementArrayVBO=bufId;
    }
  }
 else {
    target=GL_ARRAY_BUFFER;
    if (context.boundArrayVBO != bufId) {
      glBindBuffer(target,bufId);
      context.boundArrayVBO=bufId;
    }
  }
  int usage=convertUsage(vb.getUsage());
  vb.getData().rewind();
  if (created || vb.hasDataSizeChanged()) {
switch (vb.getFormat()) {
case Byte:
case UnsignedByte:
      glBufferData(target,(ByteBuffer)vb.getData(),usage);
    break;
case Short:
case UnsignedShort:
  glBufferData(target,(ShortBuffer)vb.getData(),usage);
break;
case Int:
case UnsignedInt:
glBufferData(target,(IntBuffer)vb.getData(),usage);
break;
case Float:
glBufferData(target,(FloatBuffer)vb.getData(),usage);
break;
case Double:
glBufferData(target,(DoubleBuffer)vb.getData(),usage);
break;
default :
throw new UnsupportedOperationException("Unknown buffer format.");
}
}
 else {
switch (vb.getFormat()) {
case Byte:
case UnsignedByte:
glBufferSubData(target,0,(ByteBuffer)vb.getData());
break;
case Short:
case UnsignedShort:
glBufferSubData(target,0,(ShortBuffer)vb.getData());
break;
case Int:
case UnsignedInt:
glBufferSubData(target,0,(IntBuffer)vb.getData());
break;
case Float:
glBufferSubData(target,0,(FloatBuffer)vb.getData());
break;
case Double:
glBufferSubData(target,0,(DoubleBuffer)vb.getData());
break;
default :
throw new UnsupportedOperationException("Unknown buffer format.");
}
}
vb.clearUpdateNeeded();
}
