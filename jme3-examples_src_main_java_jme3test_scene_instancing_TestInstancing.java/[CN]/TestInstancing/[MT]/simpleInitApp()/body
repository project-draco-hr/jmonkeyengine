{
  initInputs();
  Sphere sphere=new Sphere(10,10,0.5f,true,false);
  material=new Material(assetManager,"Common/MatDefs/Misc/ShowNormals.j3md");
  material.setBoolean("UseInstancing",true);
  instancedGeometry=new InstancedGeometry(InstancedGeometry.Mode.Auto,"instanced_geom");
  instancedGeometry.setMaxNumInstances(60 * 60);
  instancedGeometry.setCurrentNumInstances(60 * 60);
  instancedGeometry.setCullHint(CullHint.Never);
  instancedGeometry.setMesh(sphere);
  instancedGeometry.setMaterial(material);
  rootNode.attachChild(instancedGeometry);
  instancedGeoms=new Node("instances_node");
  instancedGeoms.setCullHint(CullHint.Always);
  for (int y=-30; y < 30; y++) {
    for (int x=-30; x < 30; x++) {
      Geometry instance=createInstance(x,y);
      instancedGeoms.attachChild(instance);
    }
  }
  rootNode.attachChild(instancedGeoms);
  rootNode.setCullHint(CullHint.Never);
  int instanceIndex=0;
  for (  Spatial child : instancedGeoms.getChildren()) {
    if (instanceIndex < instancedGeometry.getMaxNumInstances()) {
      instancedGeometry.setInstanceTransform(instanceIndex++,child.getWorldTransform());
    }
  }
  instancedGeometry.setCurrentNumInstances(instanceIndex);
  cam.setLocation(new Vector3f(38.373516f,6.689055f,38.482082f));
  cam.setRotation(new Quaternion(-0.04004206f,0.918326f,-0.096310444f,-0.38183528f));
  flyCam.setMoveSpeed(15);
}
