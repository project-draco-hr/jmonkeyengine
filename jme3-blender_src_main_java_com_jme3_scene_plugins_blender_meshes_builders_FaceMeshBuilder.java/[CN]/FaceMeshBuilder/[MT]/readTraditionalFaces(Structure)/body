{
  LOGGER.fine("Reading traditional faces.");
  Pointer pMFace=(Pointer)meshStructure.getFieldValue("mface");
  List<Structure> mFaces=pMFace.isNotNull() ? pMFace.fetchData() : null;
  if (mFaces != null && mFaces.size() > 0) {
    Map<String,List<Vector2f>> uvs=this.loadUVCoordinates(meshStructure,false);
    Map<String,Vector2f[]> uvCoordinatesForFace=new HashMap<String,Vector2f[]>();
    int[] vertexColorIndex=verticesColors == null ? null : new int[3];
    for (int i=0; i < mFaces.size(); ++i) {
      Structure mFace=mFaces.get(i);
      int materialNumber=((Number)mFace.getFieldValue("mat_nr")).intValue();
      boolean smooth=(((Number)mFace.getFieldValue("flag")).byteValue() & 0x01) != 0x00;
      if (uvs != null) {
        for (        Entry<String,List<Vector2f>> entry : uvs.entrySet()) {
          Vector2f[] uvCoordsForASingleFace=new Vector2f[3];
          uvCoordsForASingleFace[0]=entry.getValue().get(i * 4);
          uvCoordsForASingleFace[1]=entry.getValue().get(i * 4 + 1);
          uvCoordsForASingleFace[2]=entry.getValue().get(i * 4 + 2);
          uvCoordinatesForFace.put(entry.getKey(),uvCoordsForASingleFace);
        }
      }
      int v1=((Number)mFace.getFieldValue("v1")).intValue();
      int v2=((Number)mFace.getFieldValue("v2")).intValue();
      int v3=((Number)mFace.getFieldValue("v3")).intValue();
      int v4=((Number)mFace.getFieldValue("v4")).intValue();
      if (vertexColorIndex != null) {
        vertexColorIndex[0]=i * 4;
        vertexColorIndex[1]=i * 4 + 1;
        vertexColorIndex[2]=i * 4 + 2;
      }
      this.appendFace(v1,v2,v3,smooth,materialNumber,uvs == null ? null : uvCoordinatesForFace,vertexColorIndex);
      uvCoordinatesForFace.clear();
      if (v4 > 0) {
        if (uvs != null) {
          for (          Entry<String,List<Vector2f>> entry : uvs.entrySet()) {
            Vector2f[] uvCoordsForASingleFace=new Vector2f[3];
            uvCoordsForASingleFace[0]=entry.getValue().get(i * 4);
            uvCoordsForASingleFace[1]=entry.getValue().get(i * 4 + 2);
            uvCoordsForASingleFace[2]=entry.getValue().get(i * 4 + 3);
            uvCoordinatesForFace.put(entry.getKey(),uvCoordsForASingleFace);
          }
        }
        if (vertexColorIndex != null) {
          vertexColorIndex[0]=i * 4;
          vertexColorIndex[1]=i * 4 + 2;
          vertexColorIndex[2]=i * 4 + 3;
        }
        this.appendFace(v1,v3,v4,smooth,materialNumber,uvs == null ? null : uvCoordinatesForFace,vertexColorIndex);
        uvCoordinatesForFace.clear();
      }
    }
  }
}
