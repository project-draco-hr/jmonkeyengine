{
  int type=((Number)constraintStructure.getFieldValue("type")).intValue();
  ConstraintType constraintType=ConstraintType.valueOf(type);
switch (constraintType) {
case CONSTRAINT_TYPE_ACTION:
    return new ConstraintAction(constraintStructure,boneOMA,influenceIpo,dataRepository);
case CONSTRAINT_TYPE_CHILDOF:
  return new ConstraintChildOf(constraintStructure,boneOMA,influenceIpo,dataRepository);
case CONSTRAINT_TYPE_CLAMPTO:
return new ConstraintClampTo(constraintStructure,boneOMA,influenceIpo,dataRepository);
case CONSTRAINT_TYPE_DISTLIMIT:
return new ConstraintDistLimit(constraintStructure,boneOMA,influenceIpo,dataRepository);
case CONSTRAINT_TYPE_FOLLOWPATH:
return new ConstraintFollowPath(constraintStructure,boneOMA,influenceIpo,dataRepository);
case CONSTRAINT_TYPE_KINEMATIC:
return new ConstraintInverseKinematics(constraintStructure,boneOMA,influenceIpo,dataRepository);
case CONSTRAINT_TYPE_LOCKTRACK:
return new ConstraintLockTrack(constraintStructure,boneOMA,influenceIpo,dataRepository);
case CONSTRAINT_TYPE_LOCLIKE:
return new ConstraintLocLike(constraintStructure,boneOMA,influenceIpo,dataRepository);
case CONSTRAINT_TYPE_LOCLIMIT:
return new ConstraintLocLimit(constraintStructure,boneOMA,influenceIpo,dataRepository);
case CONSTRAINT_TYPE_MINMAX:
return new ConstraintMinMax(constraintStructure,boneOMA,influenceIpo,dataRepository);
case CONSTRAINT_TYPE_NULL:
return new ConstraintNull(constraintStructure,boneOMA,influenceIpo,dataRepository);
case CONSTRAINT_TYPE_PYTHON:
return new ConstraintPython(constraintStructure,boneOMA,influenceIpo,dataRepository);
case CONSTRAINT_TYPE_RIGIDBODYJOINT:
return new ConstraintRigidBodyJoint(constraintStructure,boneOMA,influenceIpo,dataRepository);
case CONSTRAINT_TYPE_ROTLIKE:
return new ConstraintRotLike(constraintStructure,boneOMA,influenceIpo,dataRepository);
case CONSTRAINT_TYPE_ROTLIMIT:
return new ConstraintRotLimit(constraintStructure,boneOMA,influenceIpo,dataRepository);
case CONSTRAINT_TYPE_SHRINKWRAP:
return new ConstraintShrinkWrap(constraintStructure,boneOMA,influenceIpo,dataRepository);
case CONSTRAINT_TYPE_SIZELIKE:
return new ConstraintSizeLike(constraintStructure,boneOMA,influenceIpo,dataRepository);
case CONSTRAINT_TYPE_SIZELIMIT:
return new ConstraintSizeLimit(constraintStructure,boneOMA,influenceIpo,dataRepository);
case CONSTRAINT_TYPE_STRETCHTO:
return new ConstraintStretchTo(constraintStructure,boneOMA,influenceIpo,dataRepository);
case CONSTRAINT_TYPE_TRANSFORM:
return new ConstraintTransform(constraintStructure,boneOMA,influenceIpo,dataRepository);
default :
throw new IllegalStateException("Unknown constraint type: " + constraintType);
}
}
