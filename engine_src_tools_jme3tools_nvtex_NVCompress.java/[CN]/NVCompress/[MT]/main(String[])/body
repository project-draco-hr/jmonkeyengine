{
  try {
    UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
  }
 catch (  Exception ex) {
    ex.printStackTrace();
  }
  System.out.println("Verifiying texture tools path..");
  String path=attemptLocateToolsPath();
  texToolsPath=path == null ? null : new File(path);
  if (texToolsPath != null) {
    System.out.println("Found existing path: " + texToolsPath);
  }
  if (texToolsPath == null || !verifyTexToolsPath(texToolsPath)) {
    while (true) {
      File f=showToolsPathChooser(texToolsPath);
      if (f == null)       return;
      if (verifyTexToolsPath(f)) {
        texToolsPath=f;
        pref.put("NVTextureToolsPath",texToolsPath.toString());
        System.out.println("User specified valid path: " + texToolsPath);
        try {
          pref.flush();
        }
 catch (        BackingStoreException ex) {
        }
        break;
      }
 else {
        JOptionPane.showMessageDialog(null,"Directory must" + " contain nvcompress","Error",JOptionPane.ERROR_MESSAGE);
      }
    }
  }
  java.awt.EventQueue.invokeLater(new Runnable(){
    public void run(){
      new NVCompress().setVisible(true);
    }
  }
);
}
