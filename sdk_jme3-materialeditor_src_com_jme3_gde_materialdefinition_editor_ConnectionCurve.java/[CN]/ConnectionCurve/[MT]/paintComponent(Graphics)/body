{
  Graphics2D g2=((Graphics2D)g);
  g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING,RenderingHints.VALUE_ANTIALIAS_ON);
  g2.setStroke(new BasicStroke(4));
  Path2D.Double path1=new Path2D.Double();
  if (getDiagram().getSelectedItems().contains(this)) {
    g.setColor(SELECTED_COLOR);
  }
 else {
    g.setColor(VERY_DARK_GREY);
  }
  if (pointsSize < 4) {
    translate(points[0],p1);
    translate(points[1],p2);
    translate(points[1],p3);
    translate(points[2],p4);
    path1.moveTo(p1.x,p1.y);
    path1.curveTo(p2.x,p2.y,p3.x,p3.y,p4.x,p4.y);
    curves[0].setCurve(p1.x,p1.y,p2.x,p2.y,p3.x,p3.y,p4.x,p4.y);
    nbCurve=1;
  }
  for (int i=0; i < pointsSize - 3; i+=3) {
    translate(points[i],p1);
    translate(points[i + 1],p2);
    translate(points[i + 2],p3);
    translate(points[i + 3],p4);
    path1.moveTo(p1.x,p1.y);
    path1.curveTo(p2.x,p2.y,p3.x,p3.y,p4.x,p4.y);
    if (i > 1) {
      curves[1].setCurve(p1.x,p1.y,p2.x,p2.y,p3.x,p3.y,p4.x,p4.y);
      nbCurve=2;
    }
 else {
      curves[0].setCurve(p1.x,p1.y,p2.x,p2.y,p3.x,p3.y,p4.x,p4.y);
      nbCurve=1;
    }
  }
  ((Graphics2D)g).draw(path1);
  g2.setStroke(new BasicStroke(2));
  if (getDiagram().getSelectedItems().contains(this)) {
    g.setColor(Color.WHITE);
  }
 else {
    g.setColor(LIGHT_GREY);
  }
  ((Graphics2D)g).draw(path1);
}
