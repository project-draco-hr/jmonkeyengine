{
  try {
    KeyStore ks=KeyStore.getInstance("JKS");
    File kf=new File("keystore");
    ks.load(new FileInputStream(kf),"lollercopter".toCharArray());
    KeyManagerFactory kmf=KeyManagerFactory.getInstance("SunX509");
    kmf.init(ks,"lollercopter".toCharArray());
    TrustManagerFactory tmf=TrustManagerFactory.getInstance("SunX509");
    tmf.init(ks);
    TrustManager[] trustAllCerts=new TrustManager[]{new X509TrustManager(){
      public java.security.cert.X509Certificate[] getAcceptedIssuers(){
        return null;
      }
      public void checkClientTrusted(      java.security.cert.X509Certificate[] certs,      String authType){
      }
      public void checkServerTrusted(      java.security.cert.X509Certificate[] certs,      String authType){
      }
    }
};
    SSLContext sslContext=SSLContext.getInstance("TLS");
    sslContext.init(kmf.getKeyManagers(),trustAllCerts,null);
    sslEngine=sslContext.createSSLEngine();
  }
 catch (  Exception e) {
    log.log(Level.SEVERE,"[{0}][TCP] Could not create SSL engine: {1}",new Object[]{label,e.getMessage()});
  }
}
