{
  if (light == null) {
    throw new IllegalStateException("The light can't be null for a " + this.getClass().getName());
  }
  GeometryList occluders=rq.getShadowQueueContent(ShadowMode.Cast);
  if (occluders.size() == 0) {
    return;
  }
  GeometryList receivers=rq.getShadowQueueContent(ShadowMode.Receive);
  if (receivers.size() == 0) {
    return;
  }
  Camera viewCam=viewPort.getCamera();
  float zFar=zFarOverride;
  if (zFar == 0) {
    zFar=viewCam.getFrustumFar();
  }
  updateShadowCams();
  Renderer r=renderManager.getRenderer();
  renderManager.setForcedMaterial(preshadowMat);
  renderManager.setForcedTechnique("PreShadow");
  for (int i=0; i < CAM_NUMBER; i++) {
    ShadowUtil.getOccludersInCamFrustum(occluders,shadowCams[i],splitOccluders);
    lightViewProjectionsMatrices[i].set(shadowCams[i].getViewProjectionMatrix());
    renderManager.setCamera(shadowCams[i],false);
    if (debug && frustums[i].getParent() == null) {
      ((Node)viewPort.getScenes().get(0)).attachChild(frustums[i]);
    }
    r.setFrameBuffer(shadowFB[i]);
    r.clearBuffers(false,true,false);
    viewPort.getQueue().renderShadowQueue(splitOccluders,renderManager,shadowCams[i],true);
  }
  if (flushQueues) {
    occluders.clear();
  }
  r.setFrameBuffer(viewPort.getOutputFrameBuffer());
  renderManager.setForcedMaterial(null);
  renderManager.setForcedTechnique(null);
  renderManager.setCamera(viewCam,false);
}
