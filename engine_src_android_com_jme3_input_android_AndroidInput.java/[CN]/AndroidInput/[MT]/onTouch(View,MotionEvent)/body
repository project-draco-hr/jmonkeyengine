{
  if (view != this.view) {
    return false;
  }
  boolean bWasHandled=false;
  TouchEvent touch;
  int action=event.getAction() & MotionEvent.ACTION_MASK;
  int pointerIndex=(event.getAction() & MotionEvent.ACTION_POINTER_INDEX_MASK) >> MotionEvent.ACTION_POINTER_INDEX_SHIFT;
  int pointerId=event.getPointerId(pointerIndex);
  Vector2f lastPos=lastPositions.get(pointerId);
switch (action) {
case MotionEvent.ACTION_POINTER_DOWN:
case MotionEvent.ACTION_DOWN:
    touch=getNextFreeTouchEvent();
  touch.set(Type.DOWN,event.getX(pointerIndex),view.getHeight() - event.getY(pointerIndex),0,0);
touch.setPointerId(pointerId);
touch.setTime(event.getEventTime());
touch.setPressure(event.getPressure(pointerIndex));
processEvent(touch);
lastPos=new Vector2f(event.getX(pointerIndex),view.getHeight() - event.getY(pointerIndex));
lastPositions.put(pointerId,lastPos);
bWasHandled=true;
break;
case MotionEvent.ACTION_POINTER_UP:
case MotionEvent.ACTION_CANCEL:
case MotionEvent.ACTION_UP:
touch=getNextFreeTouchEvent();
touch.set(Type.UP,event.getX(pointerIndex),view.getHeight() - event.getY(pointerIndex),0,0);
touch.setPointerId(pointerId);
touch.setTime(event.getEventTime());
touch.setPressure(event.getPressure(pointerIndex));
processEvent(touch);
lastPositions.remove(pointerId);
bWasHandled=true;
break;
case MotionEvent.ACTION_MOVE:
for (int p=0; p < event.getPointerCount(); p++) {
lastPos=lastPositions.get(p);
if (lastPos == null) {
lastPos=new Vector2f(event.getX(p),view.getHeight() - event.getY(p));
lastPositions.put(event.getPointerId(p),lastPos);
}
float dX=event.getX(p) - lastPos.x;
float dY=view.getHeight() - event.getY(p) - lastPos.y;
if (dX != 0 || dY != 0) {
touch=getNextFreeTouchEvent();
touch.set(Type.MOVE,event.getX(p),view.getHeight() - event.getY(p),dX,dY);
touch.setPointerId(event.getPointerId(p));
touch.setTime(event.getEventTime());
touch.setPressure(event.getPressure(p));
touch.setScaleSpanInProgress(scaleInProgress);
processEvent(touch);
lastPos.set(event.getX(p),view.getHeight() - event.getY(p));
}
}
bWasHandled=true;
break;
case MotionEvent.ACTION_OUTSIDE:
break;
}
this.detector.onTouchEvent(event);
this.scaledetector.onTouchEvent(event);
return bWasHandled;
}
