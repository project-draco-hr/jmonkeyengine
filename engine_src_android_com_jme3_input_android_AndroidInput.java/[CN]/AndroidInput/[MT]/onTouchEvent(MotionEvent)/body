{
  boolean bWasHandled=false;
  TouchEvent touch;
  this.detector.onTouchEvent(event);
  this.scaledetector.onTouchEvent(event);
switch (event.getAction()) {
case MotionEvent.ACTION_DOWN:
    for (int p=0; p < event.getPointerCount(); p++) {
      touch=getNextFreeTouchEvent();
      touch.set(Type.DOWN,event.getX(p),event.getY(p),0,0);
      touch.setPointerId(event.getPointerId(p));
      touch.setTime(event.getEventTime());
      touch.setPressure(event.getPressure(p));
      processEvent(touch);
    }
  bWasHandled=true;
break;
case MotionEvent.ACTION_UP:
for (int p=0; p < event.getPointerCount(); p++) {
touch=getNextFreeTouchEvent();
touch.set(Type.UP,event.getX(p),event.getY(p),0,0);
touch.setPointerId(event.getPointerId(p));
touch.setTime(event.getEventTime());
touch.setPressure(event.getPressure(p));
processEvent(touch);
}
bWasHandled=true;
break;
case MotionEvent.ACTION_MOVE:
for (int p=0; p < event.getPointerCount(); p++) {
Vector2f lastPos=lastPositions.get(event.getPointerId(p));
if (lastPos == null) {
lastPos=new Vector2f(event.getX(p),event.getY(p));
lastPositions.put(event.getPointerId(p),lastPos);
}
touch=getNextFreeTouchEvent();
touch.set(Type.MOVE,event.getX(p),event.getY(p),event.getX(p) - lastPos.x,event.getY(p) - lastPos.y);
touch.setPointerId(event.getPointerId(p));
touch.setTime(event.getEventTime());
touch.setPressure(event.getPressure(p));
processEvent(touch);
lastPos.set(event.getX(p),event.getY(p));
}
bWasHandled=true;
break;
case MotionEvent.ACTION_POINTER_UP:
break;
case MotionEvent.ACTION_POINTER_DOWN:
break;
case MotionEvent.ACTION_OUTSIDE:
break;
case MotionEvent.ACTION_CANCEL:
break;
}
return bWasHandled;
}
