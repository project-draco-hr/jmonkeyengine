{
  loaded=false;
  this.matDefFile=obj.getPrimaryFile();
  this.assetManager=lookup.lookup(ProjectAssetManager.class);
  this.glsl100=new Glsl100ShaderGenerator(assetManager);
  this.glsl150=new Glsl150ShaderGenerator(assetManager);
  this.lookup=lookup;
  if (matDefStructure != null) {
    obj.getLookupContents().remove(matDefStructure);
    matDefStructure=null;
  }
  if (materialDef != null) {
    obj.getLookupContents().remove(materialDef);
    materialDef=null;
  }
  if (material != null) {
    obj.getLookupContents().remove(material);
    matToRemove=material;
    material=null;
  }
  FileLock lock=null;
  InputStream in=null;
  boolean matParseError=false;
  try {
    lock=matDefFile.lock();
    in=obj.getPrimaryFile().getInputStream();
    List<Statement> sta=BlockLanguageParser.parse(in);
    matDefStructure=new MatDefBlock(sta.get(0));
    if (assetManager != null) {
      AssetKey<MaterialDef> matDefKey=new AssetKey<MaterialDef>(assetManager.getRelativeAssetPath(assetManager.getRelativeAssetPath(matDefFile.getPath())));
      assetManager.deleteFromCache(matDefKey);
      materialDef=(MaterialDef)assetManager.loadAsset(assetManager.getRelativeAssetPath(matDefFile.getPath()));
    }
  }
 catch (  Exception ex) {
    Throwable t=ex.getCause();
    while (t != null) {
      if (t instanceof MatParseException) {
        Logger.getLogger(EditableMatDefFile.class.getName()).log(Level.SEVERE,t.getMessage());
        matParseError=true;
      }
      t=t.getCause();
    }
    if (!matParseError) {
      Exceptions.printStackTrace(ex);
    }
  }
 finally {
    if (lock != null) {
      lock.releaseLock();
    }
    if (in != null) {
      try {
        in.close();
      }
 catch (      IOException ex) {
        Exceptions.printStackTrace(ex);
      }
    }
  }
  if (materialDef != null && !matParseError) {
    if (currentTechnique == null) {
      currentTechnique=matDefStructure.getTechniques().get(0);
    }
    registerListener(matDefStructure);
    obj.getLookupContents().add(matDefStructure);
    updateLookupWithMaterialData(obj);
    loaded=true;
  }
}
