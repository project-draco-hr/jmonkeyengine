{
  Map<Integer,Vector3f> normalMap=new TreeMap<Integer,Vector3f>();
  Vector3f[] allVerts=BufferUtils.getVector3Array(points);
  for (int i=0; i < indexes.limit(); i+=3) {
    int index1=indexes.get(i);
    int index2=indexes.get(i + 1);
    int index3=indexes.get(i + 2);
    Vector3f n=FastMath.computeNormal(allVerts[index1],allVerts[index2],allVerts[index3]);
    this.addNormal(n,normalMap,smooth,index1,index2,index3);
  }
  FloatBuffer normals=BufferUtils.createFloatBuffer(normalMap.size() * 3);
  for (  Entry<Integer,Vector3f> entry : normalMap.entrySet()) {
    normals.put(entry.getValue().x);
    normals.put(entry.getValue().y);
    normals.put(entry.getValue().z);
  }
  return normals;
}
