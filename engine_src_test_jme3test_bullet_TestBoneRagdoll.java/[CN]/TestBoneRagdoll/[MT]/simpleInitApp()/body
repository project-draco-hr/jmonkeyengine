{
  initCrossHairs();
  initMaterial();
  cam.setLocation(new Vector3f(0.26924422f,6.646658f,22.265987f));
  cam.setRotation(new Quaternion(-2.302544E-4f,0.99302495f,-0.117888905f,-0.0019395084f));
  bulletAppState=new BulletAppState();
  bulletAppState.setEnabled(true);
  stateManager.attach(bulletAppState);
  PhysicsTestHelper.createPhysicsTestWorld(rootNode,assetManager,bulletAppState.getPhysicsSpace());
  setupLight();
  model=(Node)assetManager.loadModel("Models/Sinbad/Sinbad.mesh.xml");
  AnimControl control=model.getControl(AnimControl.class);
  SkeletonDebugger skeletonDebug=new SkeletonDebugger("skeleton",control.getSkeleton());
  Material mat2=new Material(assetManager,"Common/MatDefs/Misc/WireColor.j3md");
  mat2.setColor("Color",ColorRGBA.Green);
  mat2.getAdditionalRenderState().setDepthTest(false);
  skeletonDebug.setMaterial(mat2);
  skeletonDebug.setLocalTranslation(model.getLocalTranslation());
  ragdoll=new RagdollControl(0.7f);
  setupSinbad(ragdoll);
  ragdoll.addCollisionListener(this);
  model.addControl(ragdoll);
  float eighth_pi=FastMath.PI * 0.125f;
  getPhysicsSpace().add(ragdoll);
  speed=1.3f;
  rootNode.attachChild(model);
  flyCam.setMoveSpeed(50);
  final AnimChannel channel=control.createChannel();
  channel.setAnim("Dance");
  inputManager.addListener(new ActionListener(){
    public void onAction(    String name,    boolean isPressed,    float tpf){
      if (name.equals("toggle") && isPressed) {
        ragdoll.setControl(false);
        model.setLocalTranslation(0,0,0);
      }
      if (name.equals("bullet+") && isPressed) {
        bulletSize+=0.1f;
      }
      if (name.equals("bullet-") && isPressed) {
        bulletSize-=0.1f;
      }
      if (name.equals("shoot") && isPressed) {
      }
      if (name.equals("stop") && isPressed) {
        bulletAppState.setEnabled(!bulletAppState.isEnabled());
      }
      if (name.equals("shoot") && !isPressed) {
        Geometry bulletg=new Geometry("bullet",bullet);
        bulletg.setMaterial(matBullet);
        bulletg.setLocalTranslation(cam.getLocation());
        bulletg.setLocalScale(bulletSize);
        bulletCollisionShape=new SphereCollisionShape(bulletSize);
        RigidBodyControl bulletNode=new RigidBodyControl(bulletCollisionShape,bulletSize * 10);
        bulletNode.setCcdMotionThreshold(0.001f);
        bulletNode.setLinearVelocity(cam.getDirection().mult(80));
        bulletg.addControl(bulletNode);
        rootNode.attachChild(bulletg);
        getPhysicsSpace().add(bulletNode);
      }
    }
  }
,"toggle","shoot","stop","bullet+","bullet-");
  inputManager.addMapping("toggle",new KeyTrigger(KeyInput.KEY_SPACE));
  inputManager.addMapping("shoot",new MouseButtonTrigger(MouseInput.BUTTON_LEFT));
  inputManager.addMapping("stop",new KeyTrigger(KeyInput.KEY_H));
  inputManager.addMapping("bullet-",new KeyTrigger(KeyInput.KEY_COMMA));
  inputManager.addMapping("bullet+",new KeyTrigger(KeyInput.KEY_PERIOD));
}
