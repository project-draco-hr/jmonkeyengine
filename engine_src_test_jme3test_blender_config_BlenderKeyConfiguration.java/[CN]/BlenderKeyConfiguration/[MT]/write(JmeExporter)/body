{
  OutputCapsule oc=ex.getCapsule(this);
  oc.write(blenderKeys.size(),"versions-count",0);
  int i=0;
  for (  Entry<String,Map<String,BlenderKey>> entry : blenderKeys.entrySet()) {
    oc.write(entry.getKey(),"key" + i,null);
    oc.writeStringSavableMap(entry.getValue(),"value" + i++,null);
  }
  oc.writeStringSavableMap(lastUsedKey,"last-key",null);
  if (selectedAnimations == null) {
    oc.write(0,"selected-animations-count",0);
  }
 else {
    i=0;
    oc.write(selectedAnimations.size(),"selected-animations-count",0);
    for (    Entry<String,List<String[]>> entry : selectedAnimations.entrySet()) {
      oc.write(entry.getKey(),"animKey" + i,null);
      oc.write(entry.getValue().toArray(new String[selectedAnimations.size()][]),"animVal" + i++,null);
    }
  }
  oc.write(useModelKey,"use-model-key",false);
  oc.write(logLevel == null ? null : logLevel.getName(),"log-level",Level.INFO.getName());
  oc.write(lastVersionUsed,"versionUsed",null);
}
