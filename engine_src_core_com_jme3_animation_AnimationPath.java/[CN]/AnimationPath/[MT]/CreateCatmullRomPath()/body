{
  Material mat=new Material(assetManager,"Common/MatDefs/Misc/WireColor.j3md");
  mat.setColor("Color",ColorRGBA.Blue);
  int nbSubSegments=10;
  float[] array=new float[(((wayPoints.size() - 1) * nbSubSegments) + 1) * 3];
  short[] indices=new short[((wayPoints.size() - 1) * nbSubSegments) * 2];
  int i=0;
  int cptCP=0;
  for (Iterator<Vector3f> it=wayPoints.iterator(); it.hasNext(); ) {
    Vector3f vector3f=it.next();
    array[i]=vector3f.x;
    i++;
    array[i]=vector3f.y;
    i++;
    array[i]=vector3f.z;
    i++;
    if (it.hasNext()) {
      for (int j=1; j < nbSubSegments; j++) {
        Vector3f temp=FastMath.interpolateCatmullRom((float)j / nbSubSegments,curveTension,CRcontrolPoints.get(cptCP),CRcontrolPoints.get(cptCP + 1),CRcontrolPoints.get(cptCP + 2),CRcontrolPoints.get(cptCP + 3));
        array[i]=temp.x;
        i++;
        array[i]=temp.y;
        i++;
        array[i]=temp.z;
        i++;
      }
    }
    cptCP++;
  }
  i=0;
  int k=0;
  for (int j=0; j < ((wayPoints.size() - 1) * nbSubSegments); j++) {
    k=j;
    indices[i]=(short)k;
    i++;
    k++;
    indices[i]=(short)k;
    i++;
  }
  Mesh lineMesh=new Mesh();
  lineMesh.setMode(Mesh.Mode.Lines);
  lineMesh.setBuffer(VertexBuffer.Type.Position,3,array);
  lineMesh.setBuffer(VertexBuffer.Type.Index,((wayPoints.size() - 1) * nbSubSegments) * 2,indices);
  lineMesh.updateBound();
  lineMesh.updateCounts();
  Geometry lineGeometry=new Geometry("line",lineMesh);
  lineGeometry.setMaterial(mat);
  return lineGeometry;
}
