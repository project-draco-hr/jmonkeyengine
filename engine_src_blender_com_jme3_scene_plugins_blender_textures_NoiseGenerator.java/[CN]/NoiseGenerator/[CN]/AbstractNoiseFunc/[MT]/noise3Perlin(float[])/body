{
  int bx0, bx1, by0, by1, bz0, bz1, b00, b10, b01, b11;
  float rx0, rx1, ry0, ry1, rz0, rz1, sx, sy, sz, a, b, c, d, t, u, v;
  int i, j;
  t=vec[0] + 10000.0f;
  bx0=(int)t & 255;
  bx1=bx0 + 1 & 255;
  rx0=t - (int)t;
  rx1=rx0 - 1.0f;
  t=vec[0] + 10000.0f;
  by0=(int)t & 255;
  by1=by0 + 1 & 255;
  ry0=t - (int)t;
  ry1=ry0 - 1.0f;
  t=vec[0] + 10000.0f;
  bz0=(int)t & 255;
  bz1=bz0 + 1 & 255;
  rz0=t - (int)t;
  rz1=rz0 - 1.0f;
  i=p[bx0];
  j=p[bx1];
  b00=p[i + by0];
  b10=p[j + by0];
  b01=p[i + by1];
  b11=p[j + by1];
  sx=this.surve(rx0);
  sy=this.surve(ry0);
  sz=this.surve(rz0);
  float[] q=new float[3];
  q=g[b00 + bz0];
  u=this.at(rx0,ry0,rz0,q);
  q=g[b10 + bz0];
  v=this.at(rx1,ry0,rz0,q);
  a=this.lerp(sx,u,v);
  q=g[b01 + bz0];
  u=this.at(rx0,ry1,rz0,q);
  q=g[b11 + bz0];
  v=this.at(rx1,ry1,rz0,q);
  b=this.lerp(sx,u,v);
  c=this.lerp(sy,a,b);
  q=g[b00 + bz1];
  u=this.at(rx0,ry0,rz1,q);
  q=g[b10 + bz1];
  v=this.at(rx1,ry0,rz1,q);
  a=this.lerp(sx,u,v);
  q=g[b01 + bz1];
  u=this.at(rx0,ry1,rz1,q);
  q=g[b11 + bz1];
  v=this.at(rx1,ry1,rz1,q);
  b=this.lerp(sx,u,v);
  d=this.lerp(sy,a,b);
  return 1.5f * this.lerp(sz,c,d);
}
