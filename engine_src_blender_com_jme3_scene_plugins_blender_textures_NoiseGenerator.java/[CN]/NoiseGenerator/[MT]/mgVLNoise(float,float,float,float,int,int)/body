{
  AbstractNoiseFunc abstractNoiseFunc1=noiseFunctions.get(Integer.valueOf(nbas1));
  if (abstractNoiseFunc1 == null) {
    abstractNoiseFunc1=noiseFunctions.get(Integer.valueOf(0));
  }
  AbstractNoiseFunc abstractNoiseFunc2=noiseFunctions.get(Integer.valueOf(nbas2));
  if (abstractNoiseFunc2 == null) {
    abstractNoiseFunc2=noiseFunctions.get(Integer.valueOf(0));
  }
  float rx=abstractNoiseFunc1.execute(x + 13.5f,y + 13.5f,z + 13.5f) * distortion;
  float ry=abstractNoiseFunc1.execute(x,y,z) * distortion;
  float rz=abstractNoiseFunc1.execute(x - 13.5f,y - 13.5f,z - 13.5f) * distortion;
  return abstractNoiseFunc2.executeS(x + rx,y + ry,z + rz);
}
