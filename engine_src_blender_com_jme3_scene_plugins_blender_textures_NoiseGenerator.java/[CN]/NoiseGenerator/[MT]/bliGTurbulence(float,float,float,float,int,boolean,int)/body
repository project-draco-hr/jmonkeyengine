{
  AbstractNoiseFunc abstractNoiseFunc=noiseFunctions.get(Integer.valueOf(noisebasis));
  if (abstractNoiseFunc == null) {
    abstractNoiseFunc=noiseFunctions.get(0);
    noisebasis=0;
  }
  if (noisebasis == 0) {
    x+=1;
    y+=1;
    z+=1;
  }
  float sum=0, t, amp=1, fscale=1;
  if (noisesize != 0.0) {
    noisesize=1.0f / noisesize;
    x*=noisesize;
    y*=noisesize;
    z*=noisesize;
  }
  for (int i=0; i <= oct; ++i, amp*=0.5, fscale*=2) {
    t=abstractNoiseFunc.execute(fscale * x,fscale * y,fscale * z);
    if (isHard) {
      t=FastMath.abs(2.0f * t - 1.0f);
    }
    sum+=t * amp;
  }
  sum*=(float)(1 << oct) / (float)((1 << oct + 1) - 1);
  return sum;
}
