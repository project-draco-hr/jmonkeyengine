{
  final ProjectAssetManager manager=context.getLookup().lookup(ProjectAssetManager.class);
  if (manager == null) {
    return;
  }
  final FileObject file=context.getPrimaryFile();
  final OgreXMLConvertOptions options=new OgreXMLConvertOptions(file.getPath(),file.getParent().getPath() + "/" + "+"+ file.getNameExt());
  AdvOgreXMLConvertDialog dialog=new AdvOgreXMLConvertDialog(WindowManager.getDefault().getMainWindow(),true,options);
  dialog.setLocationRelativeTo(WindowManager.getDefault().getMainWindow());
  dialog.setVisible(true);
  Runnable run=new Runnable(){
    public void run(){
      ProgressHandle progressHandle=ProgressHandleFactory.createHandle("Converting OgreXML");
      progressHandle.start();
      OgreXMLConvert converter=new OgreXMLConvert();
      if (!converter.doConvert(options,progressHandle)) {
        progressHandle.finish();
        return;
      }
      FileObject sourceMatFile=FileUtil.toFileObject(new File(options.getSourceFile().replaceAll("mesh.xml","material")));
      if (sourceMatFile != null && sourceMatFile.isValid()) {
        try {
          sourceMatFile.copy(sourceMatFile.getParent(),"+" + sourceMatFile.getName(),sourceMatFile.getExt());
        }
 catch (        IOException ex) {
          Exceptions.printStackTrace(ex);
        }
      }
 else {
        Confirmation msg=new NotifyDescriptor.Confirmation("No material file found for " + file.getNameExt() + "\n"+ "A file named "+ file.getNameExt().replaceAll(".mesh.xml",".material")+ " should be in the same folder.\n"+ "Press OK to import mesh only.",NotifyDescriptor.OK_CANCEL_OPTION,NotifyDescriptor.WARNING_MESSAGE);
        Object result=DialogDisplayer.getDefault().notify(msg);
        if (!NotifyDescriptor.OK_OPTION.equals(result)) {
          return;
        }
      }
      FileObject file=FileUtil.toFileObject(new File(options.getDestFile()));
      try {
        progressHandle.progress("Creating j3o file");
        String outputPath=file.getParent().getPath() + "/" + context.getPrimaryFile().getName()+ ".j3o";
        manager.clearCache();
        Spatial model=manager.loadModel(manager.getRelativeAssetPath(file.getPath()));
        BinaryExporter exp=BinaryExporter.getInstance();
        exp.save(model,new File(outputPath));
        try {
          FileUtil.toFileObject(new File(options.getDestFile())).delete();
          FileUtil.toFileObject(new File(options.getDestFile().replaceAll("mesh.xml","material"))).delete();
        }
 catch (        Exception e) {
        }
        context.getPrimaryFile().getParent().refresh();
      }
 catch (      IOException ex) {
        Exceptions.printStackTrace(ex);
        Confirmation msg=new NotifyDescriptor.Confirmation("Error converting " + file.getNameExt() + "\n"+ ex.toString(),NotifyDescriptor.OK_CANCEL_OPTION,NotifyDescriptor.ERROR_MESSAGE);
        DialogDisplayer.getDefault().notify(msg);
      }
 finally {
        progressHandle.finish();
      }
    }
  }
;
  new Thread(run).start();
}
