{
  try {
    if (Display.isCreated() && Display.isCurrent()) {
      if (GLContext.getCapabilities().GL_ARB_framebuffer_object) {
        return GL11.glGetInteger(ARBFramebufferObject.GL_MAX_SAMPLES);
      }
 else       if (GLContext.getCapabilities().GL_EXT_framebuffer_multisample) {
        return GL11.glGetInteger(EXTFramebufferMultisample.GL_MAX_SAMPLES_EXT);
      }
 else {
        return Integer.MAX_VALUE;
      }
    }
  }
 catch (  LWJGLException ex) {
    listener.handleError("Failed to check if display is current",ex);
  }
  if ((Pbuffer.getCapabilities() & Pbuffer.PBUFFER_SUPPORTED) == 0) {
    return Integer.MAX_VALUE;
  }
 else {
    Pbuffer pb=null;
    try {
      pb=new Pbuffer(1,1,new PixelFormat(0,0,0),null);
      pb.makeCurrent();
      if (GLContext.getCapabilities().GL_ARB_framebuffer_object) {
        return GL11.glGetInteger(ARBFramebufferObject.GL_MAX_SAMPLES);
      }
 else       if (GLContext.getCapabilities().GL_EXT_framebuffer_multisample) {
        return GL11.glGetInteger(EXTFramebufferMultisample.GL_MAX_SAMPLES_EXT);
      }
      return Integer.MAX_VALUE;
    }
 catch (    LWJGLException ex) {
      return Integer.MAX_VALUE;
    }
 finally {
      if (pb != null) {
        pb.destroy();
      }
    }
  }
}
