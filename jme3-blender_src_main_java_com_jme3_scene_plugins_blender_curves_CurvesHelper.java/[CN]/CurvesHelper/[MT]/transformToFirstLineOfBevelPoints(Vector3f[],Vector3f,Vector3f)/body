{
  Vector3f planeNormal=secondCurvePoint.subtract(firstCurvePoint).normalizeLocal();
  float angle=FastMath.acos(planeNormal.dot(Vector3f.UNIT_X));
  Vector3f rotationVector=Vector3f.UNIT_X.cross(planeNormal).normalizeLocal();
  Matrix4f m=new Matrix4f();
  m.setRotationQuaternion(new Quaternion().fromAngleAxis(angle,rotationVector));
  m.setTranslation(firstCurvePoint);
  Vector3f temp=new Vector3f();
  Vector3f[] verts=new Vector3f[startingLinePoints.length];
  for (int i=0; i < verts.length; ++i) {
    verts[i]=m.mult(startingLinePoints[i],temp).clone();
  }
  return verts;
}
