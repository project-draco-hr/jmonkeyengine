{
  Vector3f angVel=getAngularVelocity();
  float rotationVelocity=angVel.getY();
  Vector3f dir=getForwardVector(tempVect2).multLocal(1,0,1).normalizeLocal();
  getLinearVelocity(tempVect3);
  Vector3f linearVelocity=tempVect3.multLocal(1,0,1);
  if (steeringValue != 0) {
    if (rotationVelocity < 1 && rotationVelocity > -1) {
      applyTorque(tempVect1.set(0,steeringValue,0));
    }
  }
 else {
    if (rotationVelocity > 0.2f) {
      applyTorque(tempVect1.set(0,-mass * 20,0));
    }
 else     if (rotationVelocity < -0.2f) {
      applyTorque(tempVect1.set(0,mass * 20,0));
    }
  }
  if (accelerationValue > 0) {
    float d=dir.dot(linearVelocity.normalize());
    Vector3f counter=dir.project(linearVelocity).normalizeLocal().negateLocal().multLocal(1 - d);
    applyForce(counter.multLocal(mass * 10),Vector3f.ZERO);
    if (linearVelocity.length() < 30) {
      applyForce(dir.multLocal(accelerationValue),Vector3f.ZERO);
    }
  }
 else {
    if (linearVelocity.length() > FastMath.ZERO_TOLERANCE) {
      linearVelocity.normalizeLocal().negateLocal();
      applyForce(linearVelocity.mult(mass * 10),Vector3f.ZERO);
    }
  }
}
