{
  boolean consumed=false;
  int action=getAction(event);
  int pointerId=getPointerId(event);
  int pointerIndex=getPointerIndex(event);
  Vector2f lastPos=lastHoverPositions.get(pointerId);
  float jmeX;
  float jmeY;
  numPointers=event.getPointerCount();
  TouchEvent touchEvent;
switch (action) {
case MotionEvent.ACTION_HOVER_ENTER:
    jmeX=getJmeX(event.getX(pointerIndex));
  jmeY=invertY(getJmeY(event.getY(pointerIndex)));
touchEvent=getFreeTouchEvent();
touchEvent.set(TouchEvent.Type.HOVER_START,jmeX,jmeY,0,0);
touchEvent.setPointerId(pointerId);
touchEvent.setTime(event.getEventTime());
touchEvent.setPressure(event.getPressure(pointerIndex));
lastPos=new Vector2f(jmeX,jmeY);
lastHoverPositions.put(pointerId,lastPos);
addEvent(touchEvent);
consumed=true;
break;
case MotionEvent.ACTION_HOVER_MOVE:
for (int p=0; p < event.getPointerCount(); p++) {
jmeX=getJmeX(event.getX(p));
jmeY=invertY(getJmeY(event.getY(p)));
lastPos=lastHoverPositions.get(event.getPointerId(p));
if (lastPos == null) {
lastPos=new Vector2f(jmeX,jmeY);
lastHoverPositions.put(event.getPointerId(p),lastPos);
}
float dX=jmeX - lastPos.x;
float dY=jmeY - lastPos.y;
if (dX != 0 || dY != 0) {
touchEvent=getFreeTouchEvent();
touchEvent.set(TouchEvent.Type.HOVER_MOVE,jmeX,jmeY,dX,dY);
touchEvent.setPointerId(event.getPointerId(p));
touchEvent.setTime(event.getEventTime());
touchEvent.setPressure(event.getPressure(p));
lastPos.set(jmeX,jmeY);
addEvent(touchEvent);
}
}
consumed=true;
break;
case MotionEvent.ACTION_HOVER_EXIT:
jmeX=getJmeX(event.getX(pointerIndex));
jmeY=invertY(getJmeY(event.getY(pointerIndex)));
touchEvent=getFreeTouchEvent();
touchEvent.set(TouchEvent.Type.HOVER_END,jmeX,jmeY,0,0);
touchEvent.setPointerId(pointerId);
touchEvent.setTime(event.getEventTime());
touchEvent.setPressure(event.getPressure(pointerIndex));
lastHoverPositions.remove(pointerId);
addEvent(touchEvent);
consumed=true;
break;
default :
consumed=false;
break;
}
return consumed;
}
