{
  spatialModButtonGroup=new ButtonGroup();
  sceneInfoPanel=new javax.swing.JPanel();
  sceneInfoLabel1=new javax.swing.JLabel();
  sceneInfoLabel2=new javax.swing.JLabel();
  jToolBar1=new javax.swing.JToolBar();
  selectButton=new javax.swing.JToggleButton();
  moveButton=new javax.swing.JToggleButton();
  rotateButton=new javax.swing.JToggleButton();
  scaleButton=new javax.swing.JToggleButton();
  jSeparator5=new javax.swing.JToolBar.Separator();
  moveToCursorButton=new javax.swing.JButton();
  jSeparator4=new javax.swing.JToolBar.Separator();
  jLabel3=new javax.swing.JLabel();
  showSelectionToggleButton=new javax.swing.JToggleButton();
  showGridToggleButton=new javax.swing.JToggleButton();
  jSeparator3=new javax.swing.JToolBar.Separator();
  jLabel1=new javax.swing.JLabel();
  resetCursorButton=new javax.swing.JButton();
  cursorToSelectionButton=new javax.swing.JButton();
  jSeparator2=new javax.swing.JToolBar.Separator();
  jLabel2=new javax.swing.JLabel();
  camToCursorSelectionButton=new javax.swing.JButton();
  jSeparator1=new javax.swing.JToolBar.Separator();
  jLabel6=new javax.swing.JLabel();
  jButton2=new javax.swing.JButton();
  jButton3=new javax.swing.JButton();
  jPanel3=new javax.swing.JPanel();
  jPanel4=new javax.swing.JPanel();
  jToolBar2=new javax.swing.JToolBar();
  createPhysicsMeshButton=new javax.swing.JButton();
  jCheckBox1=new javax.swing.JCheckBox();
  jTextField1=new javax.swing.JTextField();
  jLabel4=new javax.swing.JLabel();
  jToolBar3=new javax.swing.JToolBar();
  jButton1=new javax.swing.JButton();
  fixedCheckBox=new javax.swing.JCheckBox();
  radiusSpinner=new javax.swing.JSpinner();
  heightSpinner=new javax.swing.JSpinner();
  jSeparator6=new javax.swing.JSeparator();
  jLabel5=new javax.swing.JLabel();
  emitButton=new javax.swing.JButton();
  setBackground(new java.awt.Color(204,204,204));
  sceneInfoPanel.setBackground(new java.awt.Color(204,204,204));
  sceneInfoPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(SceneComposerTopComponent.class,"SceneComposerTopComponent.sceneInfoPanel.border.title")));
  org.openide.awt.Mnemonics.setLocalizedText(sceneInfoLabel1,org.openide.util.NbBundle.getMessage(SceneComposerTopComponent.class,"SceneComposerTopComponent.sceneInfoLabel1.text"));
  org.openide.awt.Mnemonics.setLocalizedText(sceneInfoLabel2,org.openide.util.NbBundle.getMessage(SceneComposerTopComponent.class,"SceneComposerTopComponent.sceneInfoLabel2.text"));
  javax.swing.GroupLayout sceneInfoPanelLayout=new javax.swing.GroupLayout(sceneInfoPanel);
  sceneInfoPanel.setLayout(sceneInfoPanelLayout);
  sceneInfoPanelLayout.setHorizontalGroup(sceneInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(sceneInfoLabel1,javax.swing.GroupLayout.DEFAULT_SIZE,365,Short.MAX_VALUE).addComponent(sceneInfoLabel2,javax.swing.GroupLayout.DEFAULT_SIZE,365,Short.MAX_VALUE));
  sceneInfoPanelLayout.setVerticalGroup(sceneInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(sceneInfoPanelLayout.createSequentialGroup().addComponent(sceneInfoLabel1).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(sceneInfoLabel2).addContainerGap(107,Short.MAX_VALUE)));
  jToolBar1.setBackground(new java.awt.Color(204,204,204));
  jToolBar1.setFloatable(false);
  jToolBar1.setRollover(true);
  spatialModButtonGroup.add(selectButton);
  selectButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/jme3/gde/scenecomposer/icon_select.png")));
  selectButton.setSelected(true);
  org.openide.awt.Mnemonics.setLocalizedText(selectButton,org.openide.util.NbBundle.getMessage(SceneComposerTopComponent.class,"SceneComposerTopComponent.selectButton.text"));
  selectButton.setToolTipText(org.openide.util.NbBundle.getMessage(SceneComposerTopComponent.class,"SceneComposerTopComponent.selectButton.toolTipText"));
  selectButton.setFocusable(false);
  selectButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
  selectButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
  selectButton.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      selectButtonActionPerformed(evt);
    }
  }
);
  jToolBar1.add(selectButton);
  spatialModButtonGroup.add(moveButton);
  moveButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/jme3/gde/scenecomposer/icon_arrow_out.png")));
  org.openide.awt.Mnemonics.setLocalizedText(moveButton,org.openide.util.NbBundle.getMessage(SceneComposerTopComponent.class,"SceneComposerTopComponent.moveButton.text"));
  moveButton.setToolTipText(org.openide.util.NbBundle.getMessage(SceneComposerTopComponent.class,"SceneComposerTopComponent.moveButton.toolTipText"));
  moveButton.setFocusable(false);
  moveButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
  moveButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
  moveButton.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      moveButtonActionPerformed(evt);
    }
  }
);
  jToolBar1.add(moveButton);
  spatialModButtonGroup.add(rotateButton);
  rotateButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/jme3/gde/scenecomposer/icon_arrow_rotate_clockwise.png")));
  org.openide.awt.Mnemonics.setLocalizedText(rotateButton,org.openide.util.NbBundle.getMessage(SceneComposerTopComponent.class,"SceneComposerTopComponent.rotateButton.text"));
  rotateButton.setToolTipText(org.openide.util.NbBundle.getMessage(SceneComposerTopComponent.class,"SceneComposerTopComponent.rotateButton.toolTipText"));
  rotateButton.setFocusable(false);
  rotateButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
  rotateButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
  rotateButton.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      rotateButtonActionPerformed(evt);
    }
  }
);
  jToolBar1.add(rotateButton);
  spatialModButtonGroup.add(scaleButton);
  scaleButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/jme3/gde/scenecomposer/icon_arrow_inout.png")));
  org.openide.awt.Mnemonics.setLocalizedText(scaleButton,org.openide.util.NbBundle.getMessage(SceneComposerTopComponent.class,"SceneComposerTopComponent.scaleButton.text"));
  scaleButton.setToolTipText(org.openide.util.NbBundle.getMessage(SceneComposerTopComponent.class,"SceneComposerTopComponent.scaleButton.toolTipText"));
  scaleButton.setFocusable(false);
  scaleButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
  scaleButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
  scaleButton.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      scaleButtonActionPerformed(evt);
    }
  }
);
  jToolBar1.add(scaleButton);
  jToolBar1.add(jSeparator5);
  moveToCursorButton.setBackground(new java.awt.Color(204,204,204));
  moveToCursorButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/jme3/gde/scenecomposer/move.gif")));
  org.openide.awt.Mnemonics.setLocalizedText(moveToCursorButton,org.openide.util.NbBundle.getMessage(SceneComposerTopComponent.class,"SceneComposerTopComponent.moveToCursorButton.text"));
  moveToCursorButton.setToolTipText(org.openide.util.NbBundle.getMessage(SceneComposerTopComponent.class,"SceneComposerTopComponent.moveToCursorButton.toolTipText"));
  moveToCursorButton.setFocusable(false);
  moveToCursorButton.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
  moveToCursorButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
  moveToCursorButton.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      moveToCursorButtonActionPerformed(evt);
    }
  }
);
  jToolBar1.add(moveToCursorButton);
  jToolBar1.add(jSeparator4);
  jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/jme3/gde/scenecomposer/box_wire.gif")));
  org.openide.awt.Mnemonics.setLocalizedText(jLabel3,org.openide.util.NbBundle.getMessage(SceneComposerTopComponent.class,"SceneComposerTopComponent.jLabel3.text"));
  jToolBar1.add(jLabel3);
  showSelectionToggleButton.setSelected(true);
  org.openide.awt.Mnemonics.setLocalizedText(showSelectionToggleButton,org.openide.util.NbBundle.getMessage(SceneComposerTopComponent.class,"SceneComposerTopComponent.showSelectionToggleButton.text"));
  showSelectionToggleButton.setToolTipText(org.openide.util.NbBundle.getMessage(SceneComposerTopComponent.class,"SceneComposerTopComponent.showSelectionToggleButton.toolTipText"));
  showSelectionToggleButton.setFocusable(false);
  showSelectionToggleButton.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
  showSelectionToggleButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
  showSelectionToggleButton.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      showSelectionToggleButtonActionPerformed(evt);
    }
  }
);
  jToolBar1.add(showSelectionToggleButton);
  org.openide.awt.Mnemonics.setLocalizedText(showGridToggleButton,org.openide.util.NbBundle.getMessage(SceneComposerTopComponent.class,"SceneComposerTopComponent.showGridToggleButton.text"));
  showGridToggleButton.setToolTipText(org.openide.util.NbBundle.getMessage(SceneComposerTopComponent.class,"SceneComposerTopComponent.showGridToggleButton.toolTipText"));
  showGridToggleButton.setFocusable(false);
  showGridToggleButton.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
  showGridToggleButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
  showGridToggleButton.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      showGridToggleButtonActionPerformed(evt);
    }
  }
);
  jToolBar1.add(showGridToggleButton);
  jToolBar1.add(jSeparator3);
  jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/jme3/gde/scenecomposer/cursor.gif")));
  org.openide.awt.Mnemonics.setLocalizedText(jLabel1,org.openide.util.NbBundle.getMessage(SceneComposerTopComponent.class,"SceneComposerTopComponent.jLabel1.text"));
  jToolBar1.add(jLabel1);
  resetCursorButton.setBackground(new java.awt.Color(204,204,204));
  org.openide.awt.Mnemonics.setLocalizedText(resetCursorButton,org.openide.util.NbBundle.getMessage(SceneComposerTopComponent.class,"SceneComposerTopComponent.resetCursorButton.text"));
  resetCursorButton.setToolTipText(org.openide.util.NbBundle.getMessage(SceneComposerTopComponent.class,"SceneComposerTopComponent.resetCursorButton.toolTipText"));
  resetCursorButton.setFocusable(false);
  resetCursorButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
  resetCursorButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
  resetCursorButton.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      resetCursorButtonActionPerformed(evt);
    }
  }
);
  jToolBar1.add(resetCursorButton);
  cursorToSelectionButton.setBackground(new java.awt.Color(204,204,204));
  org.openide.awt.Mnemonics.setLocalizedText(cursorToSelectionButton,org.openide.util.NbBundle.getMessage(SceneComposerTopComponent.class,"SceneComposerTopComponent.cursorToSelectionButton.text"));
  cursorToSelectionButton.setToolTipText(org.openide.util.NbBundle.getMessage(SceneComposerTopComponent.class,"SceneComposerTopComponent.cursorToSelectionButton.toolTipText"));
  cursorToSelectionButton.setFocusable(false);
  cursorToSelectionButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
  cursorToSelectionButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
  cursorToSelectionButton.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      cursorToSelectionButtonActionPerformed(evt);
    }
  }
);
  jToolBar1.add(cursorToSelectionButton);
  jToolBar1.add(jSeparator2);
  jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/jme3/gde/scenecomposer/camera.gif")));
  org.openide.awt.Mnemonics.setLocalizedText(jLabel2,org.openide.util.NbBundle.getMessage(SceneComposerTopComponent.class,"SceneComposerTopComponent.jLabel2.text"));
  jToolBar1.add(jLabel2);
  camToCursorSelectionButton.setBackground(new java.awt.Color(204,204,204));
  org.openide.awt.Mnemonics.setLocalizedText(camToCursorSelectionButton,org.openide.util.NbBundle.getMessage(SceneComposerTopComponent.class,"SceneComposerTopComponent.camToCursorSelectionButton.text"));
  camToCursorSelectionButton.setToolTipText(org.openide.util.NbBundle.getMessage(SceneComposerTopComponent.class,"SceneComposerTopComponent.camToCursorSelectionButton.toolTipText"));
  camToCursorSelectionButton.setFocusable(false);
  camToCursorSelectionButton.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
  camToCursorSelectionButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
  camToCursorSelectionButton.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      camToCursorSelectionButtonActionPerformed(evt);
    }
  }
);
  jToolBar1.add(camToCursorSelectionButton);
  jToolBar1.add(jSeparator1);
  jLabel6.setFont(new java.awt.Font("Lucida Grande",0,10));
  org.openide.awt.Mnemonics.setLocalizedText(jLabel6,org.openide.util.NbBundle.getMessage(SceneComposerTopComponent.class,"SceneComposerTopComponent.jLabel6.text"));
  jToolBar1.add(jLabel6);
  jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/jme3/gde/scenecomposer/play.gif")));
  org.openide.awt.Mnemonics.setLocalizedText(jButton2,org.openide.util.NbBundle.getMessage(SceneComposerTopComponent.class,"SceneComposerTopComponent.jButton2.text"));
  jButton2.setToolTipText(org.openide.util.NbBundle.getMessage(SceneComposerTopComponent.class,"SceneComposerTopComponent.jButton2.toolTipText"));
  jButton2.setFocusable(false);
  jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
  jButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
  jButton2.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      jButton2ActionPerformed(evt);
    }
  }
);
  jToolBar1.add(jButton2);
  jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/jme3/gde/scenecomposer/pause.gif")));
  org.openide.awt.Mnemonics.setLocalizedText(jButton3,org.openide.util.NbBundle.getMessage(SceneComposerTopComponent.class,"SceneComposerTopComponent.jButton3.text"));
  jButton3.setToolTipText(org.openide.util.NbBundle.getMessage(SceneComposerTopComponent.class,"SceneComposerTopComponent.jButton3.toolTipText"));
  jButton3.setFocusable(false);
  jButton3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
  jButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
  jButton3.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      jButton3ActionPerformed(evt);
    }
  }
);
  jToolBar1.add(jButton3);
  jPanel3.setBackground(new java.awt.Color(204,204,204));
  javax.swing.GroupLayout jPanel3Layout=new javax.swing.GroupLayout(jPanel3);
  jPanel3.setLayout(jPanel3Layout);
  jPanel3Layout.setHorizontalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGap(0,272,Short.MAX_VALUE));
  jPanel3Layout.setVerticalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGap(0,23,Short.MAX_VALUE));
  jToolBar1.add(jPanel3);
  jPanel4.setBackground(new java.awt.Color(204,204,204));
  jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(SceneComposerTopComponent.class,"SceneComposerTopComponent.jPanel4.border.title")));
  jToolBar2.setBackground(new java.awt.Color(204,204,204));
  jToolBar2.setFloatable(false);
  jToolBar2.setRollover(true);
  createPhysicsMeshButton.setBackground(new java.awt.Color(204,204,204));
  org.openide.awt.Mnemonics.setLocalizedText(createPhysicsMeshButton,org.openide.util.NbBundle.getMessage(SceneComposerTopComponent.class,"SceneComposerTopComponent.createPhysicsMeshButton.text"));
  createPhysicsMeshButton.setToolTipText(org.openide.util.NbBundle.getMessage(SceneComposerTopComponent.class,"SceneComposerTopComponent.createPhysicsMeshButton.toolTipText"));
  createPhysicsMeshButton.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      createPhysicsMeshButtonActionPerformed(evt);
    }
  }
);
  jToolBar2.add(createPhysicsMeshButton);
  jCheckBox1.setBackground(new java.awt.Color(204,204,204));
  org.openide.awt.Mnemonics.setLocalizedText(jCheckBox1,org.openide.util.NbBundle.getMessage(SceneComposerTopComponent.class,"SceneComposerTopComponent.jCheckBox1.text"));
  jToolBar2.add(jCheckBox1);
  jTextField1.setText(org.openide.util.NbBundle.getMessage(SceneComposerTopComponent.class,"SceneComposerTopComponent.jTextField1.text"));
  jToolBar2.add(jTextField1);
  org.openide.awt.Mnemonics.setLocalizedText(jLabel4,org.openide.util.NbBundle.getMessage(SceneComposerTopComponent.class,"SceneComposerTopComponent.jLabel4.text"));
  jToolBar2.add(jLabel4);
  jToolBar3.setBackground(new java.awt.Color(204,204,204));
  jToolBar3.setFloatable(false);
  jToolBar3.setRollover(true);
  jButton1.setBackground(new java.awt.Color(204,204,204));
  org.openide.awt.Mnemonics.setLocalizedText(jButton1,org.openide.util.NbBundle.getMessage(SceneComposerTopComponent.class,"SceneComposerTopComponent.jButton1.text"));
  jButton1.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      jButton1ActionPerformed(evt);
    }
  }
);
  jToolBar3.add(jButton1);
  fixedCheckBox.setBackground(new java.awt.Color(204,204,204));
  fixedCheckBox.setSelected(true);
  org.openide.awt.Mnemonics.setLocalizedText(fixedCheckBox,org.openide.util.NbBundle.getMessage(SceneComposerTopComponent.class,"SceneComposerTopComponent.fixedCheckBox.text"));
  fixedCheckBox.setEnabled(false);
  jToolBar3.add(fixedCheckBox);
  radiusSpinner.setModel(new javax.swing.SpinnerNumberModel(Float.valueOf(0.5f),null,null,Float.valueOf(0.1f)));
  jToolBar3.add(radiusSpinner);
  heightSpinner.setModel(new javax.swing.SpinnerNumberModel(Float.valueOf(1.8f),null,null,Float.valueOf(0.1f)));
  jToolBar3.add(heightSpinner);
  org.openide.awt.Mnemonics.setLocalizedText(jLabel5,org.openide.util.NbBundle.getMessage(SceneComposerTopComponent.class,"SceneComposerTopComponent.jLabel5.text"));
  org.openide.awt.Mnemonics.setLocalizedText(emitButton,org.openide.util.NbBundle.getMessage(SceneComposerTopComponent.class,"SceneComposerTopComponent.emitButton.text"));
  emitButton.setToolTipText(org.openide.util.NbBundle.getMessage(SceneComposerTopComponent.class,"SceneComposerTopComponent.emitButton.toolTipText"));
  emitButton.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      emitButtonActionPerformed(evt);
    }
  }
);
  javax.swing.GroupLayout jPanel4Layout=new javax.swing.GroupLayout(jPanel4);
  jPanel4.setLayout(jPanel4Layout);
  jPanel4Layout.setHorizontalGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jToolBar2,javax.swing.GroupLayout.DEFAULT_SIZE,377,Short.MAX_VALUE).addComponent(jToolBar3,javax.swing.GroupLayout.DEFAULT_SIZE,377,Short.MAX_VALUE).addGroup(jPanel4Layout.createSequentialGroup().addContainerGap().addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel4Layout.createSequentialGroup().addGap(10,10,10).addComponent(jLabel5).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(emitButton,javax.swing.GroupLayout.DEFAULT_SIZE,302,Short.MAX_VALUE)).addComponent(jSeparator6,javax.swing.GroupLayout.DEFAULT_SIZE,357,Short.MAX_VALUE)).addContainerGap()));
  jPanel4Layout.setVerticalGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel4Layout.createSequentialGroup().addComponent(jToolBar2,javax.swing.GroupLayout.PREFERRED_SIZE,25,javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jToolBar3,javax.swing.GroupLayout.PREFERRED_SIZE,25,javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jSeparator6,javax.swing.GroupLayout.PREFERRED_SIZE,10,javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel5).addComponent(emitButton)).addContainerGap(40,Short.MAX_VALUE)));
  javax.swing.GroupLayout layout=new javax.swing.GroupLayout(this);
  this.setLayout(layout);
  layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addComponent(jPanel4,javax.swing.GroupLayout.PREFERRED_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(sceneInfoPanel,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,Short.MAX_VALUE)).addComponent(jToolBar1,javax.swing.GroupLayout.DEFAULT_SIZE,772,Short.MAX_VALUE));
  layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addComponent(jToolBar1,javax.swing.GroupLayout.PREFERRED_SIZE,25,javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(sceneInfoPanel,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,Short.MAX_VALUE).addComponent(jPanel4,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,Short.MAX_VALUE))));
}
