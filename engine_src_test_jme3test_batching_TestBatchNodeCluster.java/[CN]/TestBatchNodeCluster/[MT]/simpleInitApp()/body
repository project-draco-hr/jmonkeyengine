{
  timer=new NanoTimer();
  blue=new BatchNode("blue");
  brown=new BatchNode("brown");
  pink=new BatchNode("pink");
  orange=new BatchNode("orange");
  xPosition.add(0);
  yPosition.add(0);
  zPosition.add(0);
  randomGenerator();
  mat1=new Material(assetManager,"Common/MatDefs/Misc/Unshaded.j3md");
  mat1.setColor("Color",ColorRGBA.White);
  mat1.setColor("GlowColor",ColorRGBA.Blue.mult(10));
  blue.setMaterial(mat1);
  mat2=new Material(assetManager,"Common/MatDefs/Misc/Unshaded.j3md");
  mat2.setColor("Color",ColorRGBA.White);
  mat2.setColor("GlowColor",ColorRGBA.Red.mult(10));
  brown.setMaterial(mat2);
  mat3=new Material(assetManager,"Common/MatDefs/Misc/Unshaded.j3md");
  mat3.setColor("Color",ColorRGBA.White);
  mat3.setColor("GlowColor",ColorRGBA.Yellow.mult(10));
  pink.setMaterial(mat3);
  mat4=new Material(assetManager,"Common/MatDefs/Misc/Unshaded.j3md");
  mat4.setColor("Color",ColorRGBA.White);
  mat4.setColor("GlowColor",ColorRGBA.Orange.mult(10));
  orange.setMaterial(mat4);
  inputManager.addMapping("Start Game",new KeyTrigger(KeyInput.KEY_J));
  inputManager.addListener(al,new String[]{"Start Game"});
  cam.setLocation(new Vector3f(-34.403286f,126.65158f,434.791f));
  cam.setRotation(new Quaternion(0.022630932f,0.9749435f,-0.18736298f,0.11776358f));
  blue.batch();
  brown.batch();
  pink.batch();
  orange.batch();
  terrain=new Node("terrain");
  terrain.setLocalTranslation(50,0,50);
  terrain.attachChild(blue);
  terrain.attachChild(brown);
  terrain.attachChild(pink);
  terrain.attachChild(orange);
  flyCam.setMoveSpeed(100);
  rootNode.attachChild(terrain);
  Vector3f pos=new Vector3f(-40,0,-40);
  blue.setLocalTranslation(pos);
  brown.setLocalTranslation(pos);
  pink.setLocalTranslation(pos);
  orange.setLocalTranslation(pos);
  Arrow a=new Arrow(new Vector3f(0,50,0));
  Geometry g=new Geometry("a",a);
  g.setLocalTranslation(terrain.getLocalTranslation());
  Material m=new Material(assetManager,"Common/MatDefs/Misc/Unshaded.j3md");
  m.setColor("Color",ColorRGBA.Blue);
  g.setMaterial(m);
  FilterPostProcessor fpp=new FilterPostProcessor(assetManager);
  fpp.addFilter(new BloomFilter(BloomFilter.GlowMode.Objects));
  viewPort.addProcessor(fpp);
}
