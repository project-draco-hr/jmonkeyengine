{
  String[] inputs={ChaseCamToggleRotate,ChaseCamDown,ChaseCamUp,ChaseCamMoveLeft,ChaseCamMoveRight,ChaseCamZoomIn,ChaseCamZoomOut};
  this.inputManager=inputManager;
  if (!invertYaxis) {
    inputManager.addMapping(ChaseCamDown,new MouseAxisTrigger(MouseInput.AXIS_Y,true));
    inputManager.addMapping(ChaseCamUp,new MouseAxisTrigger(MouseInput.AXIS_Y,false));
  }
 else {
    inputManager.addMapping(ChaseCamDown,new MouseAxisTrigger(MouseInput.AXIS_Y,false));
    inputManager.addMapping(ChaseCamUp,new MouseAxisTrigger(MouseInput.AXIS_Y,true));
  }
  inputManager.addMapping(ChaseCamZoomIn,new MouseAxisTrigger(MouseInput.AXIS_WHEEL,false));
  inputManager.addMapping(ChaseCamZoomOut,new MouseAxisTrigger(MouseInput.AXIS_WHEEL,true));
  if (!invertXaxis) {
    inputManager.addMapping(ChaseCamMoveLeft,new MouseAxisTrigger(MouseInput.AXIS_X,true));
    inputManager.addMapping(ChaseCamMoveRight,new MouseAxisTrigger(MouseInput.AXIS_X,false));
  }
 else {
    inputManager.addMapping(ChaseCamMoveLeft,new MouseAxisTrigger(MouseInput.AXIS_X,false));
    inputManager.addMapping(ChaseCamMoveRight,new MouseAxisTrigger(MouseInput.AXIS_X,true));
  }
  inputManager.addMapping(ChaseCamToggleRotate,new MouseButtonTrigger(MouseInput.BUTTON_LEFT));
  inputManager.addMapping(ChaseCamToggleRotate,new MouseButtonTrigger(MouseInput.BUTTON_RIGHT));
  inputManager.addListener(this,inputs);
}
