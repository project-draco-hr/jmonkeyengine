{
  if (!toBeDestroyed.isDirect()) {
    return;
  }
  try {
    Method cleanerMethod=toBeDestroyed.getClass().getMethod("cleaner");
    cleanerMethod.setAccessible(true);
    Object cleaner=cleanerMethod.invoke(toBeDestroyed);
    if (cleaner != null) {
      Method cleanMethod=cleaner.getClass().getMethod("clean");
      cleanMethod.setAccessible(true);
      cleanMethod.invoke(cleaner);
    }
 else {
      Method viewedBufferMethod=toBeDestroyed.getClass().getMethod("viewedBuffer");
      viewedBufferMethod.setAccessible(true);
      Object viewedBuffer=viewedBufferMethod.invoke(toBeDestroyed);
      if (viewedBuffer != null) {
        destroyDirectBuffer((Buffer)viewedBuffer);
      }
 else {
        Logger.getLogger(BufferUtils.class.getName()).log(Level.SEVERE,"Buffer cannot be destroyed: {0}",toBeDestroyed);
      }
    }
  }
 catch (  IllegalAccessException ex) {
    Logger.getLogger(BufferUtils.class.getName()).log(Level.SEVERE,"{0}",ex);
  }
catch (  IllegalArgumentException ex) {
    Logger.getLogger(BufferUtils.class.getName()).log(Level.SEVERE,"{0}",ex);
  }
catch (  InvocationTargetException ex) {
    Logger.getLogger(BufferUtils.class.getName()).log(Level.SEVERE,"{0}",ex);
  }
catch (  NoSuchMethodException ex) {
    Logger.getLogger(BufferUtils.class.getName()).log(Level.SEVERE,"{0}",ex);
  }
catch (  SecurityException ex) {
    Logger.getLogger(BufferUtils.class.getName()).log(Level.SEVERE,"{0}",ex);
  }
}
