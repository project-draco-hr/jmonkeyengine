{
  if (sceneActive) {
    return super.enqueue(callable);
  }
 else {
    try {
      final V value=callable.call();
      return new Future<V>(){
        public boolean cancel(        boolean mayInterruptIfRunning){
          return true;
        }
        public boolean isCancelled(){
          return false;
        }
        public boolean isDone(){
          return true;
        }
        public V get() throws InterruptedException, ExecutionException {
          return value;
        }
        public V get(        long timeout,        TimeUnit unit){
          return value;
        }
      }
;
    }
 catch (    Exception e) {
      e.printStackTrace();
    }
    return null;
  }
}
