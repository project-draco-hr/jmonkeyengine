{
  while (!externalNode.getChildren().isEmpty()) {
    try {
      externalNode.detachAllChildren();
    }
 catch (    Exception e) {
      Exceptions.printStackTrace(e);
    }
catch (    Error e) {
      Exceptions.printStackTrace(e);
    }
  }
  Control control=externalNode.getControl(Control.class);
  while (control != null) {
    try {
      externalNode.removeControl(control);
    }
 catch (    Exception e) {
      Exceptions.printStackTrace(e);
    }
catch (    Error e) {
      Exceptions.printStackTrace(e);
    }
    control=externalNode.getControl(Control.class);
  }
  Collection<String> keys=externalNode.getUserDataKeys();
  if (keys != null) {
    for (Iterator<String> it=keys.iterator(); it.hasNext(); ) {
      String string=it.next();
      externalNode.setUserData(string,null);
    }
  }
  LightList llist=null;
  try {
    llist=externalNode.getLocalLightList();
    for (Iterator<Light> it=llist.iterator(); it.hasNext(); ) {
      Light light=it.next();
      try {
        externalNode.removeLight(light);
      }
 catch (      Exception e) {
        Exceptions.printStackTrace(e);
      }
catch (      Error e) {
        Exceptions.printStackTrace(e);
      }
    }
  }
 catch (  Exception e) {
    Exceptions.printStackTrace(e);
  }
catch (  Error e) {
    Exceptions.printStackTrace(e);
  }
}
