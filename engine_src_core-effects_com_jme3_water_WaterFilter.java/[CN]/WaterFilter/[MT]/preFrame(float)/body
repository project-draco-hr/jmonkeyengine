{
  time=time + (tpf * speed);
  material.setFloat("Time",time);
  Camera sceneCam=viewPort.getCamera();
  biasMatrix.mult(sceneCam.getViewProjectionMatrix(),textureProjMatrix);
  material.setMatrix4("TextureProjMatrix",textureProjMatrix);
  material.setVector3("CameraPosition",sceneCam.getLocation());
  material.setFloat("WaterHeight",waterHeight);
  plane=new Plane(Vector3f.UNIT_Y,new Vector3f(0,waterHeight,0).dot(Vector3f.UNIT_Y));
  reflectionProcessor.setReflectionClipPlane(plane);
  WaterUtils.updateReflectionCam(reflectionCam,plane,sceneCam);
  if (sceneCam.getLocation().y >= waterHeight) {
    boolean rtb=true;
    if (!renderManager.isHandleTranslucentBucket()) {
      renderManager.setHandleTranslucentBucket(true);
      rtb=false;
    }
    renderManager.renderViewPort(reflectionView,tpf);
    if (!rtb) {
      renderManager.setHandleTranslucentBucket(false);
    }
    renderManager.setCamera(sceneCam,false);
    renderManager.getRenderer().setFrameBuffer(viewPort.getOutputFrameBuffer());
    underWater=false;
  }
 else {
    underWater=true;
  }
}
