{
  if (influence == 0 || !trackToBeChanged || targetTransform == null) {
    return;
  }
  DQuaternion q=new DQuaternion();
  Vector3d t=new Vector3d(targetTransform.getTranslation());
  List<BoneContext> bones=this.loadBones();
  if (bones.size() == 0) {
    return;
  }
  double distanceFromTarget=Double.MAX_VALUE;
  int iterations=this.iterations;
  if (bones.size() == 1) {
    iterations=1;
  }
 else {
    BoneContext rootBone=bones.get(bones.size() - 1);
    Transform rootBoneTransform=constraintHelper.getTransform(rootBone.getArmatureObjectOMA(),rootBone.getBone().getName(),Space.CONSTRAINT_SPACE_WORLD);
    if (t.distance(new Vector3d(rootBoneTransform.getTranslation())) >= chainLength) {
      Collections.reverse(bones);
      for (      BoneContext boneContext : bones) {
        Bone bone=boneContext.getBone();
        DTransform boneTransform=new DTransform(constraintHelper.getTransform(boneContext.getArmatureObjectOMA(),bone.getName(),Space.CONSTRAINT_SPACE_WORLD));
        Vector3d e=boneTransform.getTranslation().add(boneTransform.getRotation().mult(Vector3d.UNIT_Y).multLocal(boneContext.getLength()));
        Vector3d j=boneTransform.getTranslation();
        Vector3d currentDir=e.subtractLocal(j).normalizeLocal();
        Vector3d target=t.subtract(j).normalizeLocal();
        double angle=currentDir.angleBetween(target);
        if (angle != 0) {
          Vector3d cross=currentDir.crossLocal(target).normalizeLocal();
          q.fromAngleAxis(angle,cross);
          if (boneContext.isLockX()) {
            q.set(0,q.getY(),q.getZ(),q.getW());
          }
          if (boneContext.isLockY()) {
            q.set(q.getX(),0,q.getZ(),q.getW());
          }
          if (boneContext.isLockZ()) {
            q.set(q.getX(),q.getY(),0,q.getW());
          }
          boneTransform.getRotation().set(q.multLocal(boneTransform.getRotation()));
          constraintHelper.applyTransform(boneContext.getArmatureObjectOMA(),bone.getName(),Space.CONSTRAINT_SPACE_WORLD,boneTransform.toTransform());
        }
      }
      iterations=0;
    }
  }
  BoneContext topBone=bones.get(0);
  for (int i=0; i < iterations && distanceFromTarget > MIN_DISTANCE; ++i) {
    for (    BoneContext boneContext : bones) {
      Bone bone=boneContext.getBone();
      DTransform topBoneTransform=new DTransform(constraintHelper.getTransform(topBone.getArmatureObjectOMA(),topBone.getBone().getName(),Space.CONSTRAINT_SPACE_WORLD));
      DTransform boneWorldTransform=new DTransform(constraintHelper.getTransform(boneContext.getArmatureObjectOMA(),bone.getName(),Space.CONSTRAINT_SPACE_WORLD));
      Vector3d e=topBoneTransform.getTranslation().addLocal(topBoneTransform.getRotation().mult(Vector3d.UNIT_Y).multLocal(topBone.getLength()));
      Vector3d j=boneWorldTransform.getTranslation();
      Vector3d currentDir=e.subtractLocal(j).normalizeLocal();
      Vector3d target=t.subtract(j).normalizeLocal();
      double angle=currentDir.angleBetween(target);
      if (angle != 0) {
        Vector3d cross=currentDir.crossLocal(target).normalizeLocal();
        q.fromAngleAxis(angle,cross);
        if (boneContext.isLockX()) {
          q.set(0,q.getY(),q.getZ(),q.getW());
        }
        if (boneContext.isLockY()) {
          q.set(q.getX(),0,q.getZ(),q.getW());
        }
        if (boneContext.isLockZ()) {
          q.set(q.getX(),q.getY(),0,q.getW());
        }
        boneWorldTransform.getRotation().set(q.multLocal(boneWorldTransform.getRotation()));
        constraintHelper.applyTransform(boneContext.getArmatureObjectOMA(),bone.getName(),Space.CONSTRAINT_SPACE_WORLD,boneWorldTransform.toTransform());
      }
 else {
        iterations=0;
        break;
      }
    }
    DTransform topBoneTransform=new DTransform(constraintHelper.getTransform(topBone.getArmatureObjectOMA(),topBone.getBone().getName(),Space.CONSTRAINT_SPACE_WORLD));
    Vector3d e=topBoneTransform.getTranslation().addLocal(topBoneTransform.getRotation().mult(Vector3d.UNIT_Y).multLocal(topBone.getLength()));
    distanceFromTarget=e.distance(t);
  }
}
