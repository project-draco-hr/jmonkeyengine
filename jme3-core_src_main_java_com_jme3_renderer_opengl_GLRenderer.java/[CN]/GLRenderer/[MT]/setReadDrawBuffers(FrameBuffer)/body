{
  if (gl2 == null) {
    return;
  }
  final int NONE=-2;
  final int INITIAL=-1;
  final int MRT_OFF=100;
  if (fb == null) {
    if (context.boundDrawBuf != INITIAL) {
      gl2.glDrawBuffer(context.initialDrawBuf);
      context.boundDrawBuf=INITIAL;
    }
    if (context.boundReadBuf != INITIAL) {
      gl2.glReadBuffer(context.initialReadBuf);
      context.boundReadBuf=INITIAL;
    }
  }
 else {
    if (fb.getNumColorBuffers() == 0) {
      if (gl2 != null) {
        if (context.boundDrawBuf != NONE) {
          gl2.glDrawBuffer(GL.GL_NONE);
          context.boundDrawBuf=NONE;
        }
        if (context.boundReadBuf != NONE) {
          gl2.glReadBuffer(GL.GL_NONE);
          context.boundReadBuf=NONE;
        }
      }
    }
 else {
      if (fb.getNumColorBuffers() > limits.get(Limits.FrameBufferAttachments)) {
        throw new RendererException("Framebuffer has more color " + "attachments than are supported" + " by the video hardware!");
      }
      if (fb.isMultiTarget()) {
        if (!caps.contains(Caps.FrameBufferMRT)) {
          throw new RendererException("Multiple render targets " + " are not supported by the video hardware");
        }
        if (fb.getNumColorBuffers() > limits.get(Limits.FrameBufferMrtAttachments)) {
          throw new RendererException("Framebuffer has more" + " multi targets than are supported" + " by the video hardware!");
        }
        intBuf16.clear();
        for (int i=0; i < fb.getNumColorBuffers(); i++) {
          intBuf16.put(GLFbo.GL_COLOR_ATTACHMENT0_EXT + i);
        }
        intBuf16.flip();
        glext.glDrawBuffers(intBuf16);
        context.boundDrawBuf=MRT_OFF + fb.getNumColorBuffers();
      }
 else {
        RenderBuffer rb=fb.getColorBuffer(fb.getTargetIndex());
        if (gl2 != null) {
          if (context.boundDrawBuf != rb.getSlot()) {
            gl2.glDrawBuffer(GLFbo.GL_COLOR_ATTACHMENT0_EXT + rb.getSlot());
            context.boundDrawBuf=rb.getSlot();
          }
        }
      }
    }
  }
}
