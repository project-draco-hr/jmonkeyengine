{
  rangeCheck(x,y);
  if ((codec.flags & ImageCodec.FLAG_GRAY) != 0) {
    float gray=color.r * 0.27f + color.g * 0.67f + color.b * 0.06f;
    color=new ColorRGBA(gray,gray,gray,color.a);
  }
  if ((codec.flags & ImageCodec.FLAG_F16) != 0) {
    components[0]=(int)FastMath.convertFloatToHalf(color.a);
    components[1]=(int)FastMath.convertFloatToHalf(color.r);
    components[2]=(int)FastMath.convertFloatToHalf(color.g);
    components[3]=(int)FastMath.convertFloatToHalf(color.b);
  }
 else   if ((codec.flags & ImageCodec.FLAG_F32) != 0) {
    components[0]=(int)Float.floatToIntBits(color.a);
    components[1]=(int)Float.floatToIntBits(color.r);
    components[2]=(int)Float.floatToIntBits(color.g);
    components[3]=(int)Float.floatToIntBits(color.b);
  }
 else {
    components[0]=Math.min((int)(color.a * codec.maxAlpha + 0.5f),codec.maxAlpha);
    components[1]=Math.min((int)(color.r * codec.maxRed + 0.5f),codec.maxRed);
    components[2]=Math.min((int)(color.g * codec.maxGreen + 0.5f),codec.maxGreen);
    components[3]=Math.min((int)(color.b * codec.maxBlue + 0.5f),codec.maxBlue);
  }
  codec.writeComponents(buffer,x,y,width,components,temp);
  image.setUpdateNeeded();
}
