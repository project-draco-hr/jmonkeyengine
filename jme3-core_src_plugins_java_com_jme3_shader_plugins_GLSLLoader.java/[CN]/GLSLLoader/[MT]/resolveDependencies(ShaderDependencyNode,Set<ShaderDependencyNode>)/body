{
  if (alreadyInjectedSet.contains(node)) {
    return "// " + node.getName() + " was already injected at the top.\n";
  }
 else {
    alreadyInjectedSet.add(node);
  }
  if (node.getDependencies().isEmpty()) {
    return node.getSource();
  }
 else {
    StringBuilder sb=new StringBuilder(node.getSource());
    List<String> resolvedShaderNodes=new ArrayList<String>();
    for (    ShaderDependencyNode dependencyNode : node.getDependencies()) {
      resolvedShaderNodes.add(resolveDependencies(dependencyNode,alreadyInjectedSet));
    }
    List<Integer> injectIndices=node.getDependencyInjectIndices();
    for (int i=resolvedShaderNodes.size() - 1; i >= 0; i--) {
      sb.insert(injectIndices.get(i),resolvedShaderNodes.get(i));
    }
    return sb.toString();
  }
}
