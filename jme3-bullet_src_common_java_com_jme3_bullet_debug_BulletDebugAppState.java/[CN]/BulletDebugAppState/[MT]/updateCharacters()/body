{
  HashMap<PhysicsCharacter,Spatial> oldObjects=characters;
  characters=new HashMap<PhysicsCharacter,Spatial>();
  Collection<PhysicsCharacter> current=space.getCharacterList();
  for (Iterator<PhysicsCharacter> it=current.iterator(); it.hasNext(); ) {
    PhysicsCharacter physicsObject=it.next();
    if (oldObjects.containsKey(physicsObject)) {
      Spatial spat=oldObjects.get(physicsObject);
      characters.put(physicsObject,spat);
      oldObjects.remove(physicsObject);
    }
 else {
      if (filter == null || filter.displayObject(physicsObject)) {
        logger.log(Level.FINE,"Create new debug Character");
        Node node=new Node(physicsObject.toString());
        node.addControl(new BulletCharacterDebugControl(this,physicsObject));
        characters.put(physicsObject,node);
        physicsDebugRootNode.attachChild(node);
      }
    }
  }
  for (  Map.Entry<PhysicsCharacter,Spatial> entry : oldObjects.entrySet()) {
    PhysicsCharacter object=entry.getKey();
    Spatial spatial=entry.getValue();
    spatial.removeFromParent();
  }
}
