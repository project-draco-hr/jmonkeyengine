{
  Pointer pLib=(Pointer)id.getFieldValue("lib");
  if (pLib.isNotNull()) {
    String fullName=id.getFieldValue("name").toString();
    String nameOfFeatureToLoad=id.getName();
    Structure library=pLib.fetchData().get(0);
    String path=library.getFieldValue("filepath").toString();
    if (!blenderContext.getLinkedFeatures().keySet().contains(path)) {
      Spatial loadedAsset=null;
      BlenderKey blenderKey=new BlenderKey(path);
      blenderKey.setLoadUnlinkedAssets(true);
      try {
        loadedAsset=blenderContext.getAssetManager().loadAsset(blenderKey);
      }
 catch (      AssetNotFoundException e) {
        LOGGER.log(Level.FINEST,"Cannot locate linked resource at path: {0}.",path);
      }
      if (loadedAsset != null) {
        Map<String,Map<String,Object>> linkedData=loadedAsset.getUserData("linkedData");
        for (        Entry<String,Map<String,Object>> entry : linkedData.entrySet()) {
          String linkedDataFilePath="this".equals(entry.getKey()) ? path : entry.getKey();
          blenderContext.getLinkedFeatures().put(linkedDataFilePath,entry.getValue());
        }
      }
 else {
        LOGGER.log(Level.WARNING,"No features loaded from path: {0}.",path);
      }
    }
    Object result=blenderContext.getLinkedFeature(path,fullName);
    if (result == null) {
      LOGGER.log(Level.WARNING,"Could NOT find asset named {0} in the library of path: {1}.",new Object[]{nameOfFeatureToLoad,path});
    }
 else {
      blenderContext.addLoadedFeatures(id.getOldMemoryAddress(),LoadedDataType.STRUCTURE,id);
      blenderContext.addLoadedFeatures(id.getOldMemoryAddress(),LoadedDataType.FEATURE,result);
    }
    return result;
  }
 else {
    LOGGER.warning("Library link points to nothing!");
  }
  return null;
}
