{
  this.getWorldTransform();
  TempVars vars=TempVars.get();
  Vector3f min=vars.vect1.set(Vector3f.POSITIVE_INFINITY);
  Vector3f max=vars.vect2.set(Vector3f.NEGATIVE_INFINITY);
  for (int i=0; i < particles.length; ++i) {
    Particle p=particles[i];
    if (p.life == 0) {
      continue;
    }
    p.life-=tpf;
    if (p.life <= 0) {
      this.freeParticle(i);
      continue;
    }
    updateParticle(p,tpf,min,max);
    if (firstUnUsed < i) {
      this.swap(firstUnUsed,i);
      if (i == lastUsed) {
        lastUsed=firstUnUsed;
      }
      firstUnUsed++;
    }
  }
  float interval=1f / particlesPerSec;
  float originalTpf=tpf;
  tpf+=timeDifference;
  while (tpf > interval) {
    tpf-=interval;
    Particle p=emitParticle(min,max);
    if (p != null) {
      p.life-=tpf;
      if (lastPos != null) {
        p.position.interpolateLocal(lastPos,1 - tpf / originalTpf);
      }
      if (p.life <= 0) {
        freeParticle(lastUsed);
      }
 else {
        updateParticle(p,tpf,min,max);
      }
    }
  }
  timeDifference=tpf;
  if (lastPos == null) {
    lastPos=new Vector3f();
  }
  lastPos.set(getWorldTranslation());
  BoundingBox bbox=(BoundingBox)this.getMesh().getBound();
  bbox.setMinMax(min,max);
  this.setBoundRefresh();
  vars.release();
}
