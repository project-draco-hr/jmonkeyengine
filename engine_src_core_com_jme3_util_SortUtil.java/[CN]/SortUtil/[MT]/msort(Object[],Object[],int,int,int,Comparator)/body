{
  int length=high - low;
  if (length < INSERTION_SORT_THRESHOLD) {
    for (int ii=low; ii < high; ii++) {
      for (int jj=ii; jj > low && comp.compare(dest[jj - 1],dest[jj]) > 0; jj--) {
        Object temp=dest[jj];
        dest[jj]=dest[jj - 1];
        dest[jj - 1]=temp;
      }
    }
    return;
  }
  int destLow=low, destHigh=high;
  low+=offset;
  high+=offset;
  int mid=(low + high) >> 1;
  msort(dest,src,low,mid,-offset,comp);
  msort(dest,src,mid,high,-offset,comp);
  if (comp.compare(src[mid - 1],src[mid]) <= 0) {
    System.arraycopy(src,low,dest,destLow,length);
    return;
  }
  for (int ii=destLow, pp=low, qq=mid; ii < destHigh; ii++) {
    if (qq >= high || pp < mid && comp.compare(src[pp],src[qq]) <= 0) {
      dest[ii]=src[pp++];
    }
 else {
      dest[ii]=src[qq++];
    }
  }
}
