{
  setupKeys();
  matTerrain=new Material(assetManager,"Common/MatDefs/Terrain/TerrainLighting.j3md");
  matTerrain.setBoolean("useTriPlanarMapping",false);
  matTerrain.setFloat("Shininess",0.0f);
  matTerrain.setTexture("AlphaMap",assetManager.loadTexture("Textures/Terrain/splat/alpha1.png"));
  matTerrain.setTexture("AlphaMap_1",assetManager.loadTexture("Textures/Terrain/splat/alpha2.png"));
  TextureKey hmKey=new TextureKey("Textures/Terrain/splat/mountains512.png",false);
  Texture heightMapImage=assetManager.loadTexture(hmKey);
  Texture dirt=assetManager.loadTexture("Textures/Terrain/splat/dirt.jpg");
  dirt.setWrap(WrapMode.Repeat);
  matTerrain.setTexture("DiffuseMap",dirt);
  matTerrain.setFloat("DiffuseMap_0_scale",dirtScale);
  Texture darkRock=assetManager.loadTexture("Textures/Terrain/Rock2/rock.jpg");
  darkRock.setWrap(WrapMode.Repeat);
  matTerrain.setTexture("DiffuseMap_1",darkRock);
  matTerrain.setFloat("DiffuseMap_1_scale",darkRockScale);
  Texture pinkRock=assetManager.loadTexture("Textures/Terrain/Rock/Rock.PNG");
  pinkRock.setWrap(WrapMode.Repeat);
  matTerrain.setTexture("DiffuseMap_2",pinkRock);
  matTerrain.setFloat("DiffuseMap_2_scale",pinkRockScale);
  Texture riverRock=assetManager.loadTexture("Textures/Terrain/Pond/Pond.jpg");
  riverRock.setWrap(WrapMode.Repeat);
  matTerrain.setTexture("DiffuseMap_3",riverRock);
  matTerrain.setFloat("DiffuseMap_3_scale",riverRockScale);
  Texture grass=assetManager.loadTexture("Textures/Terrain/splat/grass.jpg");
  grass.setWrap(WrapMode.Repeat);
  matTerrain.setTexture("DiffuseMap_4",grass);
  matTerrain.setFloat("DiffuseMap_4_scale",grassScale);
  Texture brick=assetManager.loadTexture("Textures/Terrain/BrickWall/BrickWall.jpg");
  brick.setWrap(WrapMode.Repeat);
  matTerrain.setTexture("DiffuseMap_5",brick);
  matTerrain.setFloat("DiffuseMap_5_scale",brickScale);
  Texture road=assetManager.loadTexture("Textures/Terrain/splat/road.jpg");
  road.setWrap(WrapMode.Repeat);
  matTerrain.setTexture("DiffuseMap_6",road);
  matTerrain.setFloat("DiffuseMap_6_scale",roadScale);
  Texture normalMapDirt=assetManager.loadTexture("Textures/Terrain/splat/dirt_normal.png");
  normalMapDirt.setWrap(WrapMode.Repeat);
  Texture normalMapPinkRock=assetManager.loadTexture("Textures/Terrain/Rock/Rock_normal.png");
  normalMapPinkRock.setWrap(WrapMode.Repeat);
  Texture normalMapGrass=assetManager.loadTexture("Textures/Terrain/splat/grass_normal.jpg");
  normalMapGrass.setWrap(WrapMode.Repeat);
  Texture normalMapRoad=assetManager.loadTexture("Textures/Terrain/splat/road_normal.png");
  normalMapRoad.setWrap(WrapMode.Repeat);
  matTerrain.setTexture("NormalMap",normalMapDirt);
  matTerrain.setTexture("NormalMap_1",normalMapPinkRock);
  matTerrain.setTexture("NormalMap_2",normalMapPinkRock);
  matTerrain.setTexture("NormalMap_4",normalMapGrass);
  matTerrain.setTexture("NormalMap_6",normalMapRoad);
  matWire=new Material(assetManager,"Common/MatDefs/Misc/Unshaded.j3md");
  matWire.getAdditionalRenderState().setWireframe(true);
  matWire.setColor("Color",ColorRGBA.Green);
  createSky();
  AbstractHeightMap heightmap=null;
  try {
    heightmap=new ImageBasedHeightMap(heightMapImage.getImage(),0.3f);
    heightmap.load();
    heightmap.smooth(0.9f,1);
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
  terrain=new TerrainQuad("terrain",65,513,heightmap.getHeightMap());
  TerrainLodControl control=new TerrainLodControl(terrain,getCamera());
  control.setLodCalculator(new DistanceLodCalculator(65,2.7f));
  terrain.addControl(control);
  terrain.setMaterial(matTerrain);
  terrain.setModelBound(new BoundingBox());
  terrain.updateModelBound();
  terrain.setLocalTranslation(0,-100,0);
  terrain.setLocalScale(1f,1f,1f);
  rootNode.attachChild(terrain);
  DirectionalLight light=new DirectionalLight();
  light.setDirection((new Vector3f(-0.1f,-0.1f,-0.1f)).normalize());
  rootNode.addLight(light);
  cam.setLocation(new Vector3f(0,10,-10));
  cam.lookAtDirection(new Vector3f(0,-1.5f,-1).normalizeLocal(),Vector3f.UNIT_Y);
  flyCam.setMoveSpeed(400);
  rootNode.attachChild(createAxisMarker(20));
}
