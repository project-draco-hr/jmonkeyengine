{
  if (points == null) {
    return;
  }
  points.rewind();
  if (points.remaining() <= 2) {
    return;
  }
  TempVars vars=TempVars.get();
  BufferUtils.populateFromBuffer(vars.vect1,points,0);
  float minX=vars.vect1.x, minY=vars.vect1.y, minZ=vars.vect1.z;
  float maxX=vars.vect1.x, maxY=vars.vect1.y, maxZ=vars.vect1.z;
  for (int i=1, len=points.remaining() / 3; i < len; i++) {
    BufferUtils.populateFromBuffer(vars.vect1,points,i);
    if (vars.vect1.x < minX) {
      minX=vars.vect1.x;
    }
 else     if (vars.vect1.x > maxX) {
      maxX=vars.vect1.x;
    }
    if (vars.vect1.y < minY) {
      minY=vars.vect1.y;
    }
 else     if (vars.vect1.y > maxY) {
      maxY=vars.vect1.y;
    }
    if (vars.vect1.z < minZ) {
      minZ=vars.vect1.z;
    }
 else     if (vars.vect1.z > maxZ) {
      maxZ=vars.vect1.z;
    }
  }
  vars.release();
  center.set(minX + maxX,minY + maxY,minZ + maxZ);
  center.multLocal(0.5f);
  xExtent=maxX - center.x;
  yExtent=maxY - center.y;
  zExtent=maxZ - center.z;
}
