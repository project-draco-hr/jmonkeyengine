{
  Caps caps=pad.getCaps();
  if (caps == null) {
    Debug.log(Debug.INFO,"pad added without caps: " + pad);
    return;
  }
  Debug.log(Debug.INFO,"pad added " + pad);
  String mime=caps.getMime();
  if (mime.equals("audio/x-vorbis")) {
    if (true)     return;
    if (a_queue != null) {
      Debug.log(Debug.INFO,"More than one audio stream detected, ignoring all except first one");
      return;
    }
    a_queue=ElementFactory.makeByName("queue","a_queue");
    if (a_queue == null) {
      noSuchElement("queue");
      return;
    }
    if (v_queue != null) {
      v_queue.setProperty("leaky","2");
    }
    audiodec=ElementFactory.makeByName("vorbisdec","audiodec");
    if (audiodec == null) {
      noSuchElement("vorbisdec");
      return;
    }
    a_queue.setProperty("maxBuffers","100");
    add(a_queue);
    add(audiodec);
    pad.link(a_queue.getPad("sink"));
    a_queue.getPad("src").link(audiodec.getPad("sink"));
    if (!audiodec.getPad("src").link(asinkpad)) {
      postMessage(Message.newError(this,"audiosink already linked"));
      return;
    }
    apad=pad;
    audiodec.setState(PAUSE);
    a_queue.setState(PAUSE);
  }
 else   if (enableVideo && mime.equals("video/x-theora")) {
    v_queue=ElementFactory.makeByName("queue","v_queue");
    v_queue2=ElementFactory.makeByName("queue","v_queue2");
    yuv2tex=new YUV2Texture(app);
    if (v_queue == null) {
      noSuchElement("queue");
      return;
    }
    videodec=ElementFactory.makeByName("theoradec","videodec");
    if (videodec == null) {
      noSuchElement("theoradec");
      return;
    }
    add(videodec);
    if (a_queue != null) {
      v_queue.setProperty("leaky","2");
    }
    v_queue.setProperty("maxBuffers","5");
    v_queue2.setProperty("maxBuffers","5");
    v_queue2.setProperty("isBuffer",Boolean.FALSE);
    add(v_queue);
    add(v_queue2);
    add(yuv2tex);
    pad.link(v_queue.getPad("sink"));
    v_queue.getPad("src").link(videodec.getPad("sink"));
    videodec.getPad("src").link(yuv2tex.getPad("sink"));
    yuv2tex.getPad("src").link(v_queue2.getPad("sink"));
    v_queue2.getPad("src").link(videosink.getPad("sink"));
    if (!v_queue2.getPad("src").link(ovsinkpad)) {
      postMessage(Message.newError(this,"videosink already linked"));
      return;
    }
    vpad=pad;
    videodec.setState(PAUSE);
    v_queue.setState(PAUSE);
    v_queue2.setState(PAUSE);
    yuv2tex.setState(PAUSE);
  }
}
