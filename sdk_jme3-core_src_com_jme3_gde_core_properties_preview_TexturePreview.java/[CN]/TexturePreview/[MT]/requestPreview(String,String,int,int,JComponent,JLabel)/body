{
  picPreview=picLabel;
  clearPreview();
  if (infoLabel != null) {
    infoLabel.setText(" Creating preview...");
  }
  SceneApplication.getApplication().enqueue(new Callable<Void>(){
    @Override public Void call() throws Exception {
      TextureKey key=new TextureKey(textureName);
      Texture t=assetManager.loadTexture(key);
      Spatial geom=quad;
      if (key.getTextureTypeHint() == Texture.Type.TwoDimensional) {
        material.setTexture("ColorMap",t);
        geom.setMaterial(material);
        setLabel(infoLabel,displayName,t.getImage().getWidth(),t.getImage().getHeight(),-1);
      }
 else       if (key.getTextureTypeHint() == Texture.Type.ThreeDimensional) {
        geom=quad3D;
        material3D.setTexture("Texture",t);
        geom.setMaterial(material3D);
        setLabel(infoLabel,displayName + " (Texture3D)",t.getImage().getWidth(),t.getImage().getHeight(),t.getImage().getDepth());
      }
 else       if (key.getTextureTypeHint() == Texture.Type.CubeMap) {
        geom=SkyFactory.createSky(assetManager,textureName,SkyFactory.EnvMapType.CubeMap);
        setLabel(infoLabel,displayName + " (CubeMap)",t.getImage().getWidth(),t.getImage().getHeight(),-1);
      }
      PreviewRequest request=new PreviewRequest(TexturePreview.this,geom,width,height);
      request.getCameraRequest().setLocation(new Vector3f(0,0,5.3f));
      request.getCameraRequest().setLookAt(new Vector3f(0,0,0),Vector3f.UNIT_Y.mult(-1));
      SceneApplication.getApplication().createPreview(request);
      return null;
    }
  }
);
}
