{
  Mesh m=new Mesh();
  Vector3f[] vertices=new Vector3f[4];
  vertices[0]=new Vector3f(0,0,0);
  vertices[1]=new Vector3f(3,0,0);
  vertices[2]=new Vector3f(0,3,0);
  vertices[3]=new Vector3f(3,3,0);
  Vector2f[] texCoord=new Vector2f[4];
  texCoord[0]=new Vector2f(0,0);
  texCoord[1]=new Vector2f(1,0);
  texCoord[2]=new Vector2f(0,1);
  texCoord[3]=new Vector2f(1,1);
  short[] indexes={2,0,1,1,3,2};
  m.setBuffer(Type.Position,3,BufferUtils.createFloatBuffer(vertices));
  m.setBuffer(Type.TexCoord,2,BufferUtils.createFloatBuffer(texCoord));
  m.setBuffer(Type.Index,1,BufferUtils.createShortBuffer(indexes));
  m.updateBound();
  Geometry geom=new Geometry("OurMesh",m);
  Material mat=new Material(assetManager,"Common/MatDefs/Misc/Unshaded.j3md");
  mat.setColor("Color",ColorRGBA.Blue);
  geom.setMaterial(mat);
  rootNode.attachChild(geom);
  Mesh cMesh=m.clone();
  Geometry coloredMesh=new Geometry("ColoredMesh",cMesh);
  Material matVC=new Material(assetManager,"Common/MatDefs/Misc/Unshaded.j3md");
  matVC.setBoolean("VertexColor",true);
  float[] colorArray=new float[4 * 4];
  int colorIndex=0;
  for (int i=0; i < 4; i++) {
    colorArray[colorIndex++]=0.1f + (.2f * i);
    colorArray[colorIndex++]=0.9f - (0.2f * i);
    colorArray[colorIndex++]=0.5f;
    colorArray[colorIndex++]=1.0f;
  }
  cMesh.setBuffer(Type.Color,4,colorArray);
  coloredMesh.setMaterial(matVC);
  coloredMesh.setLocalTranslation(4,0,0);
  rootNode.attachChild(coloredMesh);
  Mesh wfMesh=m.clone();
  Geometry wfGeom=new Geometry("wireframeGeometry",wfMesh);
  Material matWireframe=new Material(assetManager,"Common/MatDefs/Misc/Unshaded.j3md");
  matWireframe.setColor("Color",ColorRGBA.Green);
  matWireframe.getAdditionalRenderState().setWireframe(true);
  wfGeom.setMaterial(matWireframe);
  wfGeom.setLocalTranslation(4,4,0);
  rootNode.attachChild(wfGeom);
}
