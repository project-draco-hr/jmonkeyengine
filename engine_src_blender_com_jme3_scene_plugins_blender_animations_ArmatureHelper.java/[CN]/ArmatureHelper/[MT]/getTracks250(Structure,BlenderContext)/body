{
  LOGGER.log(Level.INFO,"Getting tracks!");
  int fps=blenderContext.getBlenderKey().getFps();
  Structure groups=(Structure)actionStructure.getFieldValue("groups");
  List<Structure> actionGroups=groups.evaluateListBase(blenderContext);
  if (actionGroups != null && actionGroups.size() > 0 && (bonesMap == null || bonesMap.size() == 0)) {
    throw new IllegalStateException("No bones found! Cannot proceed to calculating tracks!");
  }
  List<Track<?>> tracks=new ArrayList<Track<?>>();
  for (  Structure actionGroup : actionGroups) {
    String name=actionGroup.getFieldValue("name").toString();
    Integer boneIndex=bonesMap.get(name);
    if (boneIndex != null) {
      List<Structure> channels=((Structure)actionGroup.getFieldValue("channels")).evaluateListBase(blenderContext);
      BezierCurve[] bezierCurves=new BezierCurve[channels.size()];
      int channelCounter=0;
      for (      Structure c : channels) {
        BlenderInputStream bis=blenderContext.getInputStream();
        int currentPosition=bis.getPosition();
        Pointer pRnaPath=(Pointer)c.getFieldValue("rna_path");
        FileBlockHeader dataFileBlock=blenderContext.getFileBlock(pRnaPath.getOldMemoryAddress());
        bis.setPosition(dataFileBlock.getBlockPosition());
        String rnaPath=bis.readString();
        bis.setPosition(currentPosition);
        int arrayIndex=((Number)c.getFieldValue("array_index")).intValue();
        int type=this.getCurveType(rnaPath,arrayIndex);
        Pointer pBezTriple=(Pointer)c.getFieldValue("bezt");
        List<Structure> bezTriples=pBezTriple.fetchData(blenderContext.getInputStream());
        bezierCurves[channelCounter++]=new BezierCurve(type,bezTriples,2);
      }
      Ipo ipo=new Ipo(bezierCurves);
      tracks.add(ipo.calculateTrack(boneIndex.intValue(),0,ipo.getLastFrame(),fps));
    }
  }
  return tracks.toArray(new Track<?>[tracks.size()]);
}
