{
  LOGGER.log(Level.INFO,"Getting tracks!");
  IpoHelper ipoHelper=blenderContext.getHelper(IpoHelper.class);
  int fps=blenderContext.getBlenderKey().getFps();
  Structure groups=(Structure)actionStructure.getFieldValue("groups");
  List<Structure> actionGroups=groups.evaluateListBase(blenderContext);
  List<BoneTrack> tracks=new ArrayList<BoneTrack>();
  for (  Structure actionGroup : actionGroups) {
    String name=actionGroup.getFieldValue("name").toString();
    int boneIndex=this.getBoneIndex(skeleton,name);
    if (boneIndex >= 0) {
      List<Structure> channels=((Structure)actionGroup.getFieldValue("channels")).evaluateListBase(blenderContext);
      BezierCurve[] bezierCurves=new BezierCurve[channels.size()];
      int channelCounter=0;
      for (      Structure c : channels) {
        int type=ipoHelper.getCurveType(c,blenderContext);
        Pointer pBezTriple=(Pointer)c.getFieldValue("bezt");
        List<Structure> bezTriples=pBezTriple.fetchData(blenderContext.getInputStream());
        bezierCurves[channelCounter++]=new BezierCurve(type,bezTriples,2);
      }
      Ipo ipo=new Ipo(bezierCurves,fixUpAxis);
      tracks.add((BoneTrack)ipo.calculateTrack(boneIndex,0,ipo.getLastFrame(),fps,false));
    }
  }
  return tracks.toArray(new BoneTrack[tracks.size()]);
}
