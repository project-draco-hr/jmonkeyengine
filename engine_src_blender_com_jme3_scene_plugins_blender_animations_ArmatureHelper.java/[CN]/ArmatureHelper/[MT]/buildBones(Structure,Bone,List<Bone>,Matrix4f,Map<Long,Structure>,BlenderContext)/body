{
  String boneName=boneStructure.getFieldValue("name").toString();
  Long boneOMA=boneStructure.getOldMemoryAddress();
  Bone bone=new Bone(boneName);
  this.bonesOMAs.put(bone,boneOMA);
  blenderContext.addLoadedFeatures(boneStructure.getOldMemoryAddress(),boneName,boneStructure,bone);
  ObjectHelper objectHelper=blenderContext.getHelper(ObjectHelper.class);
  Matrix4f boneMatrix=arbt.mult(objectHelper.getMatrix(boneStructure,"arm_mat",true));
  Pointer pParentStructure=(Pointer)boneStructure.getFieldValue("parent");
  if (pParentStructure.isNotNull()) {
    Structure parentStructure=pParentStructure.fetchData(blenderContext.getInputStream()).get(0);
    Matrix4f parentArmMat=objectHelper.getMatrix(parentStructure,"arm_mat",true);
    parentArmMat=arbt.mult(parentArmMat).invertLocal();
    boneMatrix=parentArmMat.multLocal(boneMatrix);
  }
  Transform baseTransform=new Transform(boneMatrix.toTranslationVector(),boneMatrix.toRotationQuat());
  baseTransform.setScale(objectHelper.getScale(boneMatrix));
  bone.setBindTransforms(baseTransform.getTranslation(),baseTransform.getRotation(),baseTransform.getScale());
  Structure poseChannel=bonesPoseChannels.get(boneStructure.getOldMemoryAddress());
  DynamicArray<Number> loc=(DynamicArray<Number>)poseChannel.getFieldValue("loc");
  DynamicArray<Number> size=(DynamicArray<Number>)poseChannel.getFieldValue("size");
  DynamicArray<Number> quat=(DynamicArray<Number>)poseChannel.getFieldValue("quat");
  Transform transform=new Transform();
  if (blenderContext.getBlenderKey().isFixUpAxis()) {
    transform.setTranslation(loc.get(0).floatValue(),-loc.get(2).floatValue(),loc.get(1).floatValue());
    transform.setRotation(new Quaternion(quat.get(1).floatValue(),-quat.get(3).floatValue(),quat.get(2).floatValue(),quat.get(0).floatValue()));
    transform.setScale(size.get(0).floatValue(),size.get(2).floatValue(),size.get(1).floatValue());
  }
 else {
    transform.setTranslation(loc.get(0).floatValue(),loc.get(1).floatValue(),loc.get(2).floatValue());
    transform.setRotation(new Quaternion(quat.get(0).floatValue(),quat.get(1).floatValue(),quat.get(2).floatValue(),quat.get(3).floatValue()));
    transform.setScale(size.get(0).floatValue(),size.get(1).floatValue(),size.get(2).floatValue());
  }
  this.boneBindTransforms.put(bone,transform);
  if (parent != null) {
    parent.addChild(bone);
  }
  result.add(bone);
  List<Structure> childbase=((Structure)boneStructure.getFieldValue("childbase")).evaluateListBase(blenderContext);
  for (  Structure child : childbase) {
    this.buildBones(child,bone,result,arbt,bonesPoseChannels,blenderContext);
  }
}
