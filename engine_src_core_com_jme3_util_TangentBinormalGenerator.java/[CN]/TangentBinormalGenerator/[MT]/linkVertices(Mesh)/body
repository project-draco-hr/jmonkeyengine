{
  ArrayList<VertexInfo> vertexMap=new ArrayList<VertexInfo>();
  FloatBuffer vertexBuffer=(FloatBuffer)mesh.getBuffer(Type.Position).getData();
  FloatBuffer normalBuffer=(FloatBuffer)mesh.getBuffer(Type.Normal).getData();
  Vector3f position=new Vector3f();
  Vector3f normal=new Vector3f();
  final int size=vertexBuffer.capacity() / 3;
  for (int i=0; i < size; i++) {
    populateFromBuffer(position,vertexBuffer,i);
    populateFromBuffer(normal,normalBuffer,i);
    boolean found=false;
    for (int j=0; j < vertexMap.size(); j++) {
      VertexInfo vertexInfo=vertexMap.get(j);
      if (approxEqual(vertexInfo.position,position) && approxEqual(vertexInfo.normal,normal)) {
        vertexInfo.indices.add(i);
        found=true;
        break;
      }
    }
    if (!found) {
      VertexInfo vertexInfo=new VertexInfo(position.clone(),normal.clone());
      vertexInfo.indices.add(i);
      vertexMap.add(vertexInfo);
    }
  }
  return vertexMap;
}
