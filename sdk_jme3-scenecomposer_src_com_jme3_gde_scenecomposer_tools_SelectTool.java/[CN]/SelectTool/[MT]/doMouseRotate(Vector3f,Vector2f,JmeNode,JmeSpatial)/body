{
  if (startMouseCoord == null) {
    startMouseCoord=screenCoord.clone();
  }
  if (startSelectedCoord == null) {
    Vector3f screen=getCamera().getScreenCoordinates(selected.getWorldTranslation());
    startSelectedCoord=new Vector2f(screen.x,screen.y);
  }
  if (rotating == null) {
    rotating=new RotateUndo(selected,selected.getLocalRotation().clone(),null);
  }
  Vector2f origRot=startMouseCoord.subtract(startSelectedCoord);
  Vector2f newRot=screenCoord.subtract(startSelectedCoord);
  float newRotAngle=origRot.angleBetween(newRot);
  float temp=newRotAngle;
  if (lastRotAngle != 0) {
    newRotAngle-=lastRotAngle;
  }
  lastRotAngle=temp;
  Quaternion rotate=new Quaternion();
  if (axis != Vector3f.UNIT_XYZ) {
    rotate=rotate.fromAngleAxis(newRotAngle,selected.getWorldRotation().inverse().mult(axis));
  }
 else {
    rotate=rotate.fromAngleAxis(newRotAngle,selected.getWorldRotation().inverse().mult(getCamera().getDirection().mult(-1).normalizeLocal()));
  }
  selected.setLocalRotation(selected.getLocalRotation().mult(rotate));
}
