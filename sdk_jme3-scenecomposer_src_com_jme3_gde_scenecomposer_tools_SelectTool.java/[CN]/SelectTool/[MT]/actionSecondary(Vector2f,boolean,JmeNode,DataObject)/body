{
  if (pressed) {
    if (moving != null) {
      moving.sceneUndo();
      moving=null;
      clearState();
    }
 else     if (scaling != null) {
      scaling.sceneUndo();
      scaling=null;
      clearState();
    }
 else     if (rotating != null) {
      rotating.sceneUndo();
      rotating=null;
      clearState();
    }
 else     if (!wasDraggingR && !wasDownR) {
      Spatial s=pickWorldSpatial(camera,screenCoord,rootNode);
      if (!toolController.selectTerrain() && isTerrain(s)) {
        selected=null;
        return;
      }
 else {
        Spatial linkNodeParent=findModelNodeParent(s);
        if (linkNodeParent != null) {
          s=linkNodeParent;
        }
 else {
          return;
        }
        final Spatial selec=s;
        selected=selec;
        java.awt.EventQueue.invokeLater(new Runnable(){
          @Override public void run(){
            if (selec != null) {
              SceneViewerTopComponent.findInstance().setActivatedNodes(new org.openide.nodes.Node[]{rootNode.getChild(selec)});
              SceneExplorerTopComponent.findInstance().setSelectedNode(rootNode.getChild(selec));
            }
 else {
              SceneViewerTopComponent.findInstance().setActivatedNodes(new org.openide.nodes.Node[]{rootNode});
              SceneExplorerTopComponent.findInstance().setSelectedNode(rootNode);
            }
          }
        }
);
      }
      toolController.updateSelection(selected);
    }
    wasDownR=true;
  }
 else {
    wasDownR=false;
    wasDraggingR=false;
  }
}
