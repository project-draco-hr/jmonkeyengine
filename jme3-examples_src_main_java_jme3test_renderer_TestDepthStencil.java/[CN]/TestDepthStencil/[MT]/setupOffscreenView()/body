{
  offCamera=new Camera(width,height);
  offView=renderManager.createPreView("Offscreen View",offCamera);
  offView.setBackgroundColor(ColorRGBA.DarkGray);
  offView.setClearFlags(true,true,true);
  offView.addProcessor(this);
  offBuffer=new FrameBuffer(width,height,1);
  offCamera.setFrustumPerspective(45f,1f,1f,1000f);
  offCamera.setLocation(new Vector3f(0f,0f,-5f));
  offCamera.lookAt(new Vector3f(0f,0f,0f),Vector3f.UNIT_Y);
  offBuffer.setDepthBuffer(Format.Depth24Stencil8);
  offBuffer.setColorBuffer(Format.RGBA8);
  offView.setOutputFrameBuffer(offBuffer);
  Box boxMesh=new Box(Vector3f.ZERO,1,1,1);
  final Material material=assetManager.loadMaterial("Interface/Logo/Logo.j3m");
  offBox=new Geometry("box",boxMesh);
  offBox.setMaterial(material);
  offBox.addControl(new AbstractControl(){
    @Override protected void controlUpdate(    float tpf){
      material.getAdditionalRenderState().setStencil(enableStencil,StencilOperation.Keep,StencilOperation.Keep,StencilOperation.Keep,StencilOperation.Keep,StencilOperation.Keep,StencilOperation.Keep,TestFunction.Never,TestFunction.Never);
    }
    @Override protected void controlRender(    RenderManager rm,    ViewPort vp){
    }
  }
);
  offView.attachScene(offBox);
}
