{
  frame=new JFrame("Test");
  frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
  frame.addWindowListener(new WindowAdapter(){
    @Override public void windowClosed(    WindowEvent e){
      app.stop();
    }
  }
);
  JMenuBar menuBar=new JMenuBar();
  frame.setJMenuBar(menuBar);
  JMenu menuFile=new JMenu("File");
  menuBar.add(menuFile);
  final JMenuItem itemRemoveCanvas=new JMenuItem("Remove Canvas");
  menuFile.add(itemRemoveCanvas);
  itemRemoveCanvas.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      if (itemRemoveCanvas.getText().equals("Remove Canvas")) {
        frame.getContentPane().remove(canvas);
        frame.setVisible(false);
        frame.setVisible(true);
        frame.requestFocus();
        itemRemoveCanvas.setText("Add Canvas");
      }
 else       if (itemRemoveCanvas.getText().equals("Add Canvas")) {
        frame.getContentPane().add(canvas);
        itemRemoveCanvas.setText("Remove Canvas");
      }
    }
  }
);
  JMenuItem itemKillCanvas=new JMenuItem("Stop/Start Canvas");
  menuFile.add(itemKillCanvas);
  itemKillCanvas.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      frame.getContentPane().remove(canvas);
      app.stop(true);
      createCanvas(appClass);
      frame.getContentPane().add(canvas);
      frame.pack();
      startApp();
    }
  }
);
  JMenuItem itemExit=new JMenuItem("Exit");
  menuFile.add(itemExit);
  itemExit.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent ae){
      frame.dispose();
      app.stop();
    }
  }
);
  JMenu menuEdit=new JMenu("Edit");
  menuBar.add(menuEdit);
  JMenuItem itemDelete=new JMenuItem("Delete");
  menuEdit.add(itemDelete);
  JMenu menuView=new JMenu("View");
  menuBar.add(menuView);
  JMenuItem itemSetting=new JMenuItem("Settings");
  menuView.add(itemSetting);
  JMenu menuHelp=new JMenu("Help");
  menuBar.add(menuHelp);
}
