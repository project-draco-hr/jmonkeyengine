{
  Box box1Mesh=new Box(1f,1f,1f);
  Geometry cubePlainGeo=new Geometry("My Textured Box",box1Mesh);
  Material stlMat=new Material(assetManager,"Common/MatDefs/Misc/Unshaded.j3md");
  Texture monkeyTex=assetManager.loadTexture("Interface/Logo/Monkey.jpg");
  stlMat.setTexture("ColorMap",monkeyTex);
  cubePlainGeo.setMaterial(stlMat);
  cubePlainGeo.move(new Vector3f(-3f,1.1f,0f));
  rootNode.attachChild(cubePlainGeo);
  Box box3Mesh=new Box(1f,1f,0.01f);
  Geometry windowGeo=new Geometry("window frame",box3Mesh);
  Material ttMat=new Material(assetManager,"Common/MatDefs/Misc/Unshaded.j3md");
  ttMat.setTexture("ColorMap",assetManager.loadTexture("Textures/ColoredTex/Monkey.png"));
  ttMat.getAdditionalRenderState().setBlendMode(BlendMode.Alpha);
  windowGeo.setQueueBucket(Bucket.Transparent);
  windowGeo.setMaterial(ttMat);
  rootNode.attachChild(windowGeo);
  Box box4Mesh=new Box(1f,1f,1f);
  Geometry bleedCubeGeo=new Geometry("bleed-through colored cube",box4Mesh);
  Material tlMat=new Material(assetManager,"Common/MatDefs/Misc/Unshaded.j3md");
  tlMat.setTexture("ColorMap",assetManager.loadTexture("Textures/ColoredTex/Monkey.png"));
  tlMat.setColor("Color",new ColorRGBA(1f,0f,1f,1f));
  bleedCubeGeo.setMaterial(tlMat);
  bleedCubeGeo.move(new Vector3f(3f,-1f,0f));
  rootNode.attachChild(bleedCubeGeo);
  Sphere sphereMesh=new Sphere(32,32,2f);
  Geometry shinyRockGeo=new Geometry("Shiny rock",sphereMesh);
  sphereMesh.setTextureMode(Sphere.TextureMode.Projected);
  TangentBinormalGenerator.generate(sphereMesh);
  Material litMat=new Material(assetManager,"Common/MatDefs/Light/Lighting.j3md");
  litMat.setTexture("DiffuseMap",assetManager.loadTexture("Textures/Terrain/Pond/Pond.jpg"));
  litMat.setTexture("NormalMap",assetManager.loadTexture("Textures/Terrain/Pond/Pond_normal.png"));
  litMat.setBoolean("UseMaterialColors",true);
  litMat.setColor("Specular",ColorRGBA.White);
  litMat.setColor("Diffuse",ColorRGBA.White);
  litMat.setFloat("Shininess",64f);
  shinyRockGeo.setMaterial(litMat);
  shinyRockGeo.setLocalTranslation(0,2,-2);
  shinyRockGeo.rotate(1.6f,0,0);
  rootNode.attachChild(shinyRockGeo);
  DirectionalLight sun=new DirectionalLight();
  sun.setDirection(new Vector3f(1,0,-2).normalizeLocal());
  sun.setColor(ColorRGBA.White);
  rootNode.addLight(sun);
}
