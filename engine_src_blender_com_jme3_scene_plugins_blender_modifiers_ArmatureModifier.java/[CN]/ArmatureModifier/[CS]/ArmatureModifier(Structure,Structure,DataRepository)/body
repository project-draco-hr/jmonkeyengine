{
  Pointer pArmatureObject=(Pointer)modifierStructure.getFieldValue("object");
  if (pArmatureObject.isNotNull()) {
    ObjectHelper objectHelper=dataRepository.getHelper(ObjectHelper.class);
    ArmatureHelper armatureHelper=dataRepository.getHelper(ArmatureHelper.class);
    Structure armatureObject=pArmatureObject.fetchData(dataRepository.getInputStream()).get(0);
    this.armatureObjectOMA=armatureObject.getOldMemoryAddress();
    Structure armatureStructure=((Pointer)armatureObject.getFieldValue("data")).fetchData(dataRepository.getInputStream()).get(0);
    Structure bonebase=(Structure)armatureStructure.getFieldValue("bonebase");
    List<Structure> bonesStructures=bonebase.evaluateListBase(dataRepository);
    for (    Structure boneStructure : bonesStructures) {
      BoneTransformationData rootBoneTransformationData=armatureHelper.readBoneAndItsChildren(boneStructure,null,dataRepository);
      armatureHelper.addBoneDataRoot(rootBoneTransformationData);
    }
    Matrix4f armatureObjectMatrix=objectHelper.getTransformationMatrix(armatureObject);
    Matrix4f inverseMeshObjectMatrix=objectHelper.getTransformationMatrix(objectStructure).invert();
    Matrix4f additionalRootBoneTransformation=inverseMeshObjectMatrix.multLocal(armatureObjectMatrix);
    Bone[] bones=armatureHelper.buildBonesStructure(Long.valueOf(0L),additionalRootBoneTransformation);
    Structure meshStructure=((Pointer)objectStructure.getFieldValue("data")).fetchData(dataRepository.getInputStream()).get(0);
    this.meshOMA=meshStructure.getOldMemoryAddress();
    this.readVerticesWeightsData(objectStructure,meshStructure,dataRepository);
    String objectName=objectStructure.getName();
    Set<String> animationNames=dataRepository.getBlenderKey().getAnimationNames(objectName);
    if (animationNames != null && animationNames.size() > 0) {
      ArrayList<Animation> animations=new ArrayList<Animation>();
      List<FileBlockHeader> actionHeaders=dataRepository.getFileBlocks(Integer.valueOf(FileBlockHeader.BLOCK_AC00));
      for (      FileBlockHeader header : actionHeaders) {
        Structure actionStructure=header.getStructure(dataRepository);
        String actionName=actionStructure.getName();
        if (animationNames.contains(actionName)) {
          int[] animationFrames=dataRepository.getBlenderKey().getAnimationFrames(objectName,actionName);
          int fps=dataRepository.getBlenderKey().getFps();
          float start=(float)animationFrames[0] / (float)fps;
          float stop=(float)animationFrames[1] / (float)fps;
          BoneAnimation boneAnimation=new BoneAnimation(actionName,stop - start);
          boneAnimation.setTracks(armatureHelper.getTracks(actionStructure,dataRepository,objectName,actionName));
          animations.add(boneAnimation);
        }
      }
      animData=new AnimData(new Skeleton(bones),animations);
    }
  }
}
