{
  if (this.validate(modifierStructure,blenderContext)) {
    Pointer pArmatureObject=(Pointer)modifierStructure.getFieldValue("object");
    if (pArmatureObject.isNotNull()) {
      ObjectHelper objectHelper=blenderContext.getHelper(ObjectHelper.class);
      ArmatureHelper armatureHelper=blenderContext.getHelper(ArmatureHelper.class);
      Structure armatureObject=pArmatureObject.fetchData(blenderContext.getInputStream()).get(0);
      this.armatureObjectOMA=armatureObject.getOldMemoryAddress();
      Structure armatureStructure=((Pointer)armatureObject.getFieldValue("data")).fetchData(blenderContext.getInputStream()).get(0);
      Structure bonebase=(Structure)armatureStructure.getFieldValue("bonebase");
      List<Structure> bonesStructures=bonebase.evaluateListBase(blenderContext);
      for (      Structure boneStructure : bonesStructures) {
        BoneTransformationData rootBoneTransformationData=armatureHelper.readBoneAndItsChildren(boneStructure,null,blenderContext);
        armatureHelper.addBoneDataRoot(rootBoneTransformationData);
      }
      Matrix4f armatureObjectMatrix=objectHelper.getTransformationMatrix(armatureObject);
      Matrix4f inverseMeshObjectMatrix=objectHelper.getTransformationMatrix(objectStructure).invert();
      Matrix4f additionalRootBoneTransformation=inverseMeshObjectMatrix.multLocal(armatureObjectMatrix);
      Bone[] bones=armatureHelper.buildBonesStructure(Long.valueOf(0L),additionalRootBoneTransformation);
      Structure meshStructure=((Pointer)objectStructure.getFieldValue("data")).fetchData(blenderContext.getInputStream()).get(0);
      this.meshOMA=meshStructure.getOldMemoryAddress();
      this.readVerticesWeightsData(objectStructure,meshStructure,blenderContext);
      ArrayList<Animation> animations=new ArrayList<Animation>();
      List<FileBlockHeader> actionHeaders=blenderContext.getFileBlocks(Integer.valueOf(FileBlockHeader.BLOCK_AC00));
      if (actionHeaders != null) {
        for (        FileBlockHeader header : actionHeaders) {
          Structure actionStructure=header.getStructure(blenderContext);
          String actionName=actionStructure.getName();
          Track<?>[] tracks=armatureHelper.getTracks(actionStructure,blenderContext);
          float maximumTrackLength=0;
          for (          Track<?> track : tracks) {
            float length=track.getLength();
            if (length > maximumTrackLength) {
              maximumTrackLength=length;
            }
          }
          Animation boneAnimation=new Animation(actionName,maximumTrackLength);
          boneAnimation.setTracks(tracks);
          animations.add(boneAnimation);
        }
      }
      animData=new AnimData(new Skeleton(bones),animations);
    }
  }
}
