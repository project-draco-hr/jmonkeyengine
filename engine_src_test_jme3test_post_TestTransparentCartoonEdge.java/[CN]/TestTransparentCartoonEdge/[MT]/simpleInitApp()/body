{
  renderManager.setAlphaToCoverage(true);
  cam.setLocation(new Vector3f(0.14914267f,0.58147097f,4.7686534f));
  cam.setRotation(new Quaternion(-0.0044764364f,0.9767943f,0.21314798f,0.020512417f));
  viewPort.setBackgroundColor(ColorRGBA.DarkGray);
  Quad q=new Quad(20,20);
  q.scaleTextureCoordinates(Vector2f.UNIT_XY.mult(5));
  Geometry geom=new Geometry("floor",q);
  Material mat=assetManager.loadMaterial("Textures/Terrain/Pond/Pond.j3m");
  geom.setMaterial(mat);
  geom.rotate(-FastMath.HALF_PI,0,0);
  geom.center();
  geom.setShadowMode(ShadowMode.Receive);
  rootNode.attachChild(geom);
  Spatial teaGeom=assetManager.loadModel("Models/Tree/Tree2.mesh.xml");
  teaGeom.setQueueBucket(Bucket.Transparent);
  teaGeom.setShadowMode(ShadowMode.Cast);
  makeToonish(teaGeom);
  AmbientLight al=new AmbientLight();
  al.setColor(ColorRGBA.White.mult(2));
  rootNode.addLight(al);
  DirectionalLight dl1=new DirectionalLight();
  dl1.setDirection(new Vector3f(1,-1,1).normalizeLocal());
  dl1.setColor(new ColorRGBA(0.965f,0.949f,0.772f,1f).mult(0.7f));
  rootNode.addLight(dl1);
  DirectionalLight dl=new DirectionalLight();
  dl.setDirection(new Vector3f(-1,-1,-1).normalizeLocal());
  dl.setColor(new ColorRGBA(0.965f,0.949f,0.772f,1f).mult(0.7f));
  rootNode.addLight(dl);
  rootNode.attachChild(teaGeom);
  FilterPostProcessor fpp=new FilterPostProcessor(assetManager);
  CartoonEdgeFilter toon=new CartoonEdgeFilter();
  toon.setEdgeWidth(0.5f);
  toon.setEdgeIntensity(1.0f);
  toon.setNormalThreshold(0.8f);
  fpp.addFilter(toon);
  viewPort.addProcessor(fpp);
}
