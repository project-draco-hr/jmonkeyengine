{
  int firstByteIndex;
  byte pixelValue;
switch (imageFormat) {
case ABGR8:
    firstByteIndex=pixelIndex << 2;
  pixelValue=data.get(firstByteIndex);
this.alpha=pixelValue >= 0 ? pixelValue / 255.0f : 1.0f - (~pixelValue) / 255.0f;
pixelValue=data.get(firstByteIndex + 1);
this.blue=pixelValue >= 0 ? pixelValue / 255.0f : 1.0f - (~pixelValue) / 255.0f;
pixelValue=data.get(firstByteIndex + 2);
this.green=pixelValue >= 0 ? pixelValue / 255.0f : 1.0f - (~pixelValue) / 255.0f;
pixelValue=data.get(firstByteIndex + 3);
this.red=pixelValue >= 0 ? pixelValue / 255.0f : 1.0f - (~pixelValue) / 255.0f;
break;
case RGBA8:
firstByteIndex=pixelIndex << 2;
pixelValue=data.get(firstByteIndex);
this.red=pixelValue >= 0 ? pixelValue / 255.0f : 1.0f - (~pixelValue) / 255.0f;
pixelValue=data.get(firstByteIndex + 1);
this.green=pixelValue >= 0 ? pixelValue / 255.0f : 1.0f - (~pixelValue) / 255.0f;
pixelValue=data.get(firstByteIndex + 2);
this.blue=pixelValue >= 0 ? pixelValue / 255.0f : 1.0f - (~pixelValue) / 255.0f;
pixelValue=data.get(firstByteIndex + 3);
this.alpha=pixelValue >= 0 ? pixelValue / 255.0f : 1.0f - (~pixelValue) / 255.0f;
break;
case BGR8:
firstByteIndex=pixelIndex * 3;
pixelValue=data.get(firstByteIndex);
this.blue=pixelValue >= 0 ? pixelValue / 255.0f : 1.0f - (~pixelValue) / 255.0f;
pixelValue=data.get(firstByteIndex + 1);
this.green=pixelValue >= 0 ? pixelValue / 255.0f : 1.0f - (~pixelValue) / 255.0f;
pixelValue=data.get(firstByteIndex + 2);
this.red=pixelValue >= 0 ? pixelValue / 255.0f : 1.0f - (~pixelValue) / 255.0f;
this.alpha=1.0f;
break;
case RGB8:
firstByteIndex=pixelIndex * 3;
pixelValue=data.get(firstByteIndex);
this.red=pixelValue >= 0 ? pixelValue / 255.0f : 1.0f - (~pixelValue) / 255.0f;
pixelValue=data.get(firstByteIndex + 1);
this.green=pixelValue >= 0 ? pixelValue / 255.0f : 1.0f - (~pixelValue) / 255.0f;
pixelValue=data.get(firstByteIndex + 2);
this.blue=pixelValue >= 0 ? pixelValue / 255.0f : 1.0f - (~pixelValue) / 255.0f;
this.alpha=1.0f;
break;
case Luminance8:
pixelValue=data.get(pixelIndex);
this.intensity=pixelValue >= 0 ? pixelValue / 255.0f : 1.0f - (~pixelValue) / 255.0f;
break;
default :
LOGGER.log(Level.FINEST,"Unknown type of texture: {0}. Black pixel used!",imageFormat);
this.intensity=this.blue=this.red=this.green=this.alpha=0.0f;
}
}
