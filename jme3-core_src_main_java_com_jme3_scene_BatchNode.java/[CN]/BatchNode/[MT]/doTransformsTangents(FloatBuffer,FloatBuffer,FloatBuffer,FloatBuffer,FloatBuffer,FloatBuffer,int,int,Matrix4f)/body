{
  TempVars vars=TempVars.get();
  Vector3f pos=vars.vect1;
  Vector3f norm=vars.vect2;
  Vector3f tan=vars.vect3;
  int length=(end - start) * 3;
  int tanLength=(end - start) * 4;
  int offset=start * 3;
  int tanOffset=start * 4;
  bindBufPos.rewind();
  bindBufNorm.rewind();
  bindBufTangents.rewind();
  bindBufPos.get(tmpFloat,0,length);
  bindBufNorm.get(tmpFloatN,0,length);
  bindBufTangents.get(tmpFloatT,0,tanLength);
  int index=0;
  int tanIndex=0;
  while (index < length) {
    pos.x=tmpFloat[index];
    norm.x=tmpFloatN[index++];
    pos.y=tmpFloat[index];
    norm.y=tmpFloatN[index++];
    pos.z=tmpFloat[index];
    norm.z=tmpFloatN[index];
    tan.x=tmpFloatT[tanIndex++];
    tan.y=tmpFloatT[tanIndex++];
    tan.z=tmpFloatT[tanIndex++];
    transform.mult(pos,pos);
    transform.multNormal(norm,norm);
    transform.multNormal(tan,tan);
    index-=2;
    tanIndex-=3;
    tmpFloat[index]=pos.x;
    tmpFloatN[index++]=norm.x;
    tmpFloat[index]=pos.y;
    tmpFloatN[index++]=norm.y;
    tmpFloat[index]=pos.z;
    tmpFloatN[index++]=norm.z;
    tmpFloatT[tanIndex++]=tan.x;
    tmpFloatT[tanIndex++]=tan.y;
    tmpFloatT[tanIndex++]=tan.z;
    tanIndex++;
  }
  vars.release();
  bufPos.position(offset);
  bufPos.put(tmpFloat,0,length);
  bufNorm.position(offset);
  bufNorm.put(tmpFloatN,0,length);
  bufTangents.position(tanOffset);
  bufTangents.put(tmpFloatT,0,tanLength);
}
