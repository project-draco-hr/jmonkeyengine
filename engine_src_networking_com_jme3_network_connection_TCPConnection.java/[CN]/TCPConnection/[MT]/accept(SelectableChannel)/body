{
  SocketChannel socketChannel=((ServerSocketChannel)channel).accept();
  String reason=shouldFilterConnector((InetSocketAddress)socketChannel.socket().getRemoteSocketAddress());
  if (reason != null) {
    log.log(Level.INFO,"[{2}][TCP] Client with address {0} got filtered with reason: {1}",new Object[]{(InetSocketAddress)socketChannel.socket().getRemoteSocketAddress(),reason,label});
    socketChannel.close();
    return;
  }
  socketChannel.configureBlocking(false);
  socketChannel.socket().setTcpNoDelay(true);
  Client con=new Client(true);
  con.setTCPConnection(this);
  con.setSocketChannel(socketChannel);
  socketChannel.register(selector,SelectionKey.OP_READ,con);
  connections.add(con);
  log.log(Level.INFO,"[{1}][TCP] A client connected with address {0}",new Object[]{socketChannel.socket().getInetAddress(),label});
}
