{
  node.addControl(new SkeletonControl(skeleton));
  blenderContext.setNodeForSkeleton(skeleton,node);
  List<BlenderAction> actions=this.getActions(skeleton,animationMatchMethod);
  if (actions.size() > 0) {
    List<Animation> animations=new ArrayList<Animation>();
    for (    BlenderAction action : actions) {
      BoneTrack[] tracks=action.toTracks(skeleton,blenderContext);
      if (tracks != null && tracks.length > 0) {
        Animation boneAnimation=new Animation(action.getName(),action.getAnimationTime());
        boneAnimation.setTracks(tracks);
        animations.add(boneAnimation);
        Long animatedNodeOMA=((Number)blenderContext.getMarkerValue(ObjectHelper.OMA_MARKER,node)).longValue();
        blenderContext.addAnimation(animatedNodeOMA,boneAnimation);
      }
    }
    if (animations.size() > 0) {
      AnimControl control=new AnimControl(skeleton);
      HashMap<String,Animation> anims=new HashMap<String,Animation>(animations.size());
      for (int i=0; i < animations.size(); ++i) {
        Animation animation=animations.get(i);
        anims.put(animation.getName(),animation);
      }
      control.setAnimations(anims);
      node.addControl(control);
      SkeletonControl skeletonControl=node.getControl(SkeletonControl.class);
      if (skeletonControl != null) {
        node.removeControl(SkeletonControl.class);
        node.addControl(skeletonControl);
      }
    }
  }
}
