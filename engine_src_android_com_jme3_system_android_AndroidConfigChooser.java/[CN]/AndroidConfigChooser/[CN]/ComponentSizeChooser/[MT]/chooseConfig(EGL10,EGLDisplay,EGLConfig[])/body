{
  EGLConfig keptConfig=null;
  int kd=0;
  int knbMs=0;
  for (  EGLConfig config : configs) {
    int r=eglGetConfigAttribSafe(egl,display,config,EGL10.EGL_RED_SIZE);
    int g=eglGetConfigAttribSafe(egl,display,config,EGL10.EGL_GREEN_SIZE);
    int b=eglGetConfigAttribSafe(egl,display,config,EGL10.EGL_BLUE_SIZE);
    int a=eglGetConfigAttribSafe(egl,display,config,EGL10.EGL_ALPHA_SIZE);
    int d=eglGetConfigAttribSafe(egl,display,config,EGL10.EGL_DEPTH_SIZE);
    int s=eglGetConfigAttribSafe(egl,display,config,EGL10.EGL_STENCIL_SIZE);
    int isMs=eglGetConfigAttribSafe(egl,display,config,EGL10.EGL_SAMPLE_BUFFERS);
    int nbMs=eglGetConfigAttribSafe(egl,display,config,EGL10.EGL_SAMPLES);
    if (inRange(r,configType.mr,configType.r) && inRange(g,configType.mg,configType.g) && inRange(b,configType.mb,configType.b)&& inRange(a,configType.ma,configType.a)&& inRange(d,configType.md,configType.d)&& inRange(s,configType.ms,configType.s)) {
      if (mSamples == 0 && isMs != 0) {
        continue;
      }
      boolean keep;
      if (d >= kd) {
        kd=d;
        keep=true;
      }
 else {
        keep=false;
      }
      if (mSamples != 0) {
        if (nbMs >= knbMs && nbMs <= mSamples) {
          knbMs=nbMs;
          keep=true;
        }
 else {
          keep=false;
        }
      }
      if (keep) {
        keptConfig=config;
      }
    }
  }
  if (keptConfig != null) {
    return keptConfig;
  }
  if (configType == ConfigType.BEST) {
    logger.log(Level.WARNING,"Failed to find a suitable display configuration for BEST, attempting BEST_TRANSLUCENT");
    configType=ConfigType.BEST_TRANSLUCENT;
    keptConfig=chooseConfig(egl,display,configs);
    if (keptConfig != null) {
      return keptConfig;
    }
  }
  if (configType == ConfigType.BEST_TRANSLUCENT) {
    logger.log(Level.WARNING,"Failed to find a suitable display configuration for BEST_TRANSLUCENT, attempting FASTEST");
    configType=ConfigType.FASTEST;
    keptConfig=chooseConfig(egl,display,configs);
    if (keptConfig != null) {
      return keptConfig;
    }
  }
  logger.log(Level.WARNING,"Failed to find a suitable display configuration for FASTEST, hoping for the best...");
  for (  EGLConfig config : configs) {
    int d=eglGetConfigAttribSafe(egl,display,config,EGL10.EGL_DEPTH_SIZE);
    if (d >= 16) {
      return config;
    }
  }
  return null;
}
