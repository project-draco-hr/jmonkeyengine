{
  for (int i=0; i < 4; i++) {
    for (int j=0; j < 4; j++) {
      int quadIdx=i * 4 + j;
      final Vector3f quadCell=location.add(quadIndex[quadIdx]);
      TerrainQuad q=cache.get(quadCell);
      if (q == null) {
        if (heightMapGrid != null) {
          HeightMap heightMapAt=heightMapGrid.getHeightMapAt(quadCell);
          q=new TerrainQuad(getName() + "Quad" + quadCell,patchSize,quadSize,heightMapAt == null ? null : heightMapAt.getHeightMap());
          q.setMaterial(material.clone());
          log.log(Level.FINE,"Loaded TerrainQuad {0} from HeightMapGrid",q.getName());
        }
 else         if (gridTileLoader != null) {
          q=gridTileLoader.getTerrainQuadAt(quadCell);
          if (q.getMaterial() == null)           q.setMaterial(material.clone());
          log.log(Level.FINE,"Loaded TerrainQuad {0} from TerrainQuadGrid",q.getName());
        }
      }
      cache.put(quadCell,q);
      final int quadrant=getQuadrant(quadIdx);
      final TerrainQuad newQuad=q;
      if (isCenter(quadIdx)) {
        getControl(UpdateControl.class).enqueue(new Callable(){
          public Object call() throws Exception {
            if (newQuad.getParent() != null) {
              attachQuadAt(newQuad,quadrant,quadCell,true);
            }
 else {
              attachQuadAt(newQuad,quadrant,quadCell,false);
            }
            return null;
          }
        }
);
      }
 else {
        getControl(UpdateControl.class).enqueue(new Callable(){
          public Object call() throws Exception {
            removeQuad(newQuad);
            return null;
          }
        }
);
      }
    }
  }
}
