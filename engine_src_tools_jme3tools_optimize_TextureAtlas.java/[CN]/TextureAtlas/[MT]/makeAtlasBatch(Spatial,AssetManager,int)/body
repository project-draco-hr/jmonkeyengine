{
  List<Geometry> geometries=new ArrayList<Geometry>();
  GeometryBatchFactory.gatherGeoms(spat,geometries);
  TextureAtlas atlas=new TextureAtlas(atlasSize,atlasSize);
  for (  Geometry geometry : geometries) {
    Texture diffuse=getMaterialTexture(geometry,"DiffuseMap");
    Texture normal=getMaterialTexture(geometry,"NormalMap");
    Texture specular=getMaterialTexture(geometry,"SpecularMap");
    if (diffuse == null) {
      diffuse=getMaterialTexture(geometry,"ColorMap");
    }
    if (diffuse != null && diffuse.getKey() != null) {
      String keyName=diffuse.getKey().getName();
      if (!atlas.addTexture(diffuse,"DiffuseMap")) {
        throw new IllegalStateException("Adding diffuse texture" + keyName + "to atlas failed, atlas full.");
      }
 else {
        if (normal != null && normal.getKey() != null) {
          atlas.addTexture(diffuse,"NormalMap",keyName);
        }
        if (specular != null && specular.getKey() != null) {
          atlas.addTexture(specular,"SpecularMap",keyName);
        }
      }
    }
  }
  Geometry geom=new Geometry();
  Mesh mesh=new Mesh();
  GeometryBatchFactory.mergeGeometries(geometries,mesh);
  applyAtlasCoords(geometries,mesh,atlas);
  mesh.updateCounts();
  mesh.updateBound();
  geom.setMesh(mesh);
  Material mat=new Material(mgr,"Common/MatDefs/Light/Lighting.j3md");
  mat.getAdditionalRenderState().setAlphaTest(true);
  Texture diffuseMap=atlas.getAtlasTexture("DiffuseMap");
  Texture normalMap=atlas.getAtlasTexture("NormalMap");
  Texture specularMap=atlas.getAtlasTexture("SpecularMap");
  if (diffuseMap != null) {
    mat.setTexture("DiffuseMap",diffuseMap);
  }
  if (normalMap != null) {
    mat.setTexture("NormalMap",normalMap);
  }
  if (specularMap != null) {
    mat.setTexture("SpecularMap",specularMap);
  }
  mat.setFloat("Shininess",16.0f);
  geom.setMaterial(mat);
  return geom;
}
