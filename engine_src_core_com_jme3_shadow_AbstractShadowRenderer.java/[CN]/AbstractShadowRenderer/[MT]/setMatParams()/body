{
  GeometryList l=viewPort.getQueue().getShadowQueueContent(ShadowMode.Receive);
  matCache.clear();
  for (int i=0; i < l.size(); i++) {
    Material mat=l.get(i).getMaterial();
    if (mat.getMaterialDef().getTechniqueDef(postTechniqueName) != null) {
      if (!matCache.contains(mat)) {
        matCache.add(mat);
      }
    }
 else {
      needsfallBackMaterial=true;
    }
  }
  for (  Material mat : matCache) {
    mat.setFloat("ShadowMapSize",shadowMapSize);
    for (int j=0; j < nbShadowMaps; j++) {
      mat.setMatrix4("LightViewProjectionMatrix" + j,lightViewProjectionsMatrices[j]);
    }
    for (int j=0; j < nbShadowMaps; j++) {
      mat.setTexture("ShadowMap" + j,shadowMaps[j]);
    }
    mat.setBoolean("HardwareShadows",shadowCompareMode == CompareMode.Hardware);
    mat.setInt("FilterMode",edgeFilteringMode.getMaterialParamValue());
    mat.setFloat("PCFEdge",edgesThickness);
    mat.setFloat("ShadowIntensity",shadowIntensity);
    setMaterialParameters(mat);
  }
  if (needsfallBackMaterial) {
    setPostShadowParams();
  }
}
