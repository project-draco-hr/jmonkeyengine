{
  setMode(Mode.Points);
  this.emitter=emitter;
  FloatBuffer pb=BufferUtils.createVector3Buffer(numParticles);
  VertexBuffer buf=getBuffer(VertexBuffer.Type.Position);
  if (buf != null) {
    buf.updateData(pb);
  }
 else {
    VertexBuffer pvb=new VertexBuffer(VertexBuffer.Type.Position);
    pvb.setupData(Usage.Stream,3,Format.Float,pb);
    setBuffer(pvb);
  }
  ByteBuffer cb=BufferUtils.createByteBuffer(numParticles * 4);
  buf=getBuffer(VertexBuffer.Type.Color);
  if (buf != null) {
    buf.updateData(cb);
  }
 else {
    VertexBuffer cvb=new VertexBuffer(VertexBuffer.Type.Color);
    cvb.setupData(Usage.Stream,4,Format.UnsignedByte,cb);
    cvb.setNormalized(true);
    setBuffer(cvb);
  }
  FloatBuffer sb=BufferUtils.createFloatBuffer(numParticles);
  buf=getBuffer(VertexBuffer.Type.Size);
  if (buf != null) {
    buf.updateData(sb);
  }
 else {
    VertexBuffer svb=new VertexBuffer(VertexBuffer.Type.Size);
    svb.setupData(Usage.Stream,1,Format.Float,sb);
    setBuffer(svb);
  }
  FloatBuffer tb=BufferUtils.createFloatBuffer(numParticles * 4);
  buf=getBuffer(VertexBuffer.Type.TexCoord);
  if (buf != null) {
    buf.updateData(tb);
  }
 else {
    VertexBuffer tvb=new VertexBuffer(VertexBuffer.Type.TexCoord);
    tvb.setupData(Usage.Stream,4,Format.Float,tb);
    setBuffer(tvb);
  }
  updateCounts();
}
