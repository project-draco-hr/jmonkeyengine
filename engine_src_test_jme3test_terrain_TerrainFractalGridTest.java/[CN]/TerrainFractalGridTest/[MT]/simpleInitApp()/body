{
  this.flyCam.setMoveSpeed(100f);
  ScreenshotAppState state=new ScreenshotAppState();
  this.stateManager.attach(state);
  this.mat_terrain=new Material(this.assetManager,"Common/MatDefs/Terrain/HeightBasedTerrain.j3md");
  Texture grass=this.assetManager.loadTexture("Textures/Terrain/splat/grass.jpg");
  grass.setWrap(WrapMode.Repeat);
  this.mat_terrain.setTexture("region1ColorMap",grass);
  this.mat_terrain.setVector3("region1",new Vector3f(88,200,this.grassScale));
  Texture dirt=this.assetManager.loadTexture("Textures/Terrain/splat/dirt.jpg");
  dirt.setWrap(WrapMode.Repeat);
  this.mat_terrain.setTexture("region2ColorMap",dirt);
  this.mat_terrain.setVector3("region2",new Vector3f(0,90,this.dirtScale));
  Texture rock=this.assetManager.loadTexture("Textures/Terrain/Rock2/rock.jpg");
  rock.setWrap(WrapMode.Repeat);
  this.mat_terrain.setTexture("region3ColorMap",rock);
  this.mat_terrain.setVector3("region3",new Vector3f(198,260,this.rockScale));
  this.mat_terrain.setTexture("region4ColorMap",rock);
  this.mat_terrain.setVector3("region4",new Vector3f(198,260,this.rockScale));
  this.mat_terrain.setTexture("slopeColorMap",rock);
  this.mat_terrain.setFloat("slopeTileFactor",32);
  this.mat_terrain.setFloat("terrainSize",513);
  this.base=new FractalSum();
  this.base.setRoughness(0.7f);
  this.base.setFrequency(1.0f);
  this.base.setAmplitude(1.0f);
  this.base.setLacunarity(2.12f);
  this.base.setOctaves(8);
  this.base.setScale(0.02125f);
  this.base.addModulator(new NoiseModulator(){
    @Override public float value(    float... in){
      return ShaderUtils.clamp(in[0] * 0.5f + 0.5f,0,1);
    }
  }
);
  FilteredBasis ground=new FilteredBasis(this.base);
  this.perturb=new PerturbFilter();
  this.perturb.setMagnitude(0.119f);
  this.therm=new OptimizedErode();
  this.therm.setRadius(5);
  this.therm.setTalus(0.011f);
  this.smooth=new SmoothFilter();
  this.smooth.setRadius(1);
  this.smooth.setEffect(0.7f);
  this.iterate=new IterativeFilter();
  this.iterate.addPreFilter(this.perturb);
  this.iterate.addPostFilter(this.smooth);
  this.iterate.setFilter(this.therm);
  this.iterate.setIterations(1);
  ground.addPreFilter(this.iterate);
  this.terrain=new TerrainGrid("terrain",65,257,new FractalHeightMapGrid(ground,null,256f));
  this.terrain.setMaterial(this.mat_terrain);
  this.terrain.setLocalTranslation(0,0,0);
  this.terrain.setLocalScale(2f,1f,2f);
  this.rootNode.attachChild(this.terrain);
  List<Camera> cameras=new ArrayList<Camera>();
  cameras.add(this.getCamera());
  TerrainLodControl control=new TerrainLodControl(this.terrain,cameras);
  this.terrain.addControl(control);
  final BulletAppState bulletAppState=new BulletAppState();
  stateManager.attach(bulletAppState);
  this.getCamera().setLocation(new Vector3f(0,0,0));
  this.viewPort.setBackgroundColor(new ColorRGBA(0.7f,0.8f,1f,1f));
  if (usePhysics) {
    terrain.addListener("physicsStartListener",new TerrainGridListener(){
      public void gridMoved(      Vector3f newCenter){
        terrain.removeListener("physicsStartListener");
        RigidBodyControl body=new RigidBodyControl(new HeightfieldCollisionShape(terrain.getHeightMap(),terrain.getLocalScale()),0);
        terrain.addControl(body);
        bulletAppState.getPhysicsSpace().add(terrain);
        CapsuleCollisionShape capsuleShape=new CapsuleCollisionShape(0.5f,1.8f,1);
        player3=new CharacterControl(capsuleShape,0.5f);
        player3.setJumpSpeed(20);
        player3.setFallSpeed(10);
        player3.setGravity(10);
        player3.setPhysicsLocation(new Vector3f(cam.getLocation().x,256,cam.getLocation().z));
        bulletAppState.getPhysicsSpace().add(player3);
        physicsAdded=true;
      }
      public Material tileLoaded(      Material material,      Vector3f cell){
        return material;
      }
    }
);
  }
  this.terrain.initialize(cam.getLocation());
  this.initKeys();
}
