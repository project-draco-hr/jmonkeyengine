{
  BoneTrack track=(BoneTrack)this.getTrack(animation,targetIndex);
  if (track != null) {
    Quaternion targetRotation=this.getTargetRotation();
    int flag=((Number)data.getFieldValue("flag")).intValue();
    float[] targetAngles=targetRotation.toAngles(null);
    Quaternion[] rotations=track.getRotations();
    int maxFrames=rotations.length;
    for (int frame=0; frame < maxFrames; ++frame) {
      float[] angles=rotations[frame].toAngles(null);
      Quaternion offset=Quaternion.IDENTITY;
      if ((flag & ROTLIKE_OFFSET) != 0) {
        offset=rotations[frame].clone();
      }
      if ((flag & ROTLIKE_X) != 0) {
        angles[0]=targetAngles[0];
        if ((flag & ROTLIKE_X_INVERT) != 0) {
          angles[0]=-angles[0];
        }
      }
 else       if ((flag & ROTLIKE_Y) != 0) {
        angles[1]=targetAngles[1];
        if ((flag & ROTLIKE_Y_INVERT) != 0) {
          angles[1]=-angles[1];
        }
      }
 else       if ((flag & ROTLIKE_Z) != 0) {
        angles[2]=targetAngles[2];
        if ((flag & ROTLIKE_Z_INVERT) != 0) {
          angles[2]=-angles[2];
        }
      }
      rotations[frame].fromAngles(angles).multLocal(offset);
    }
    track.setKeyframes(track.getTimes(),track.getTranslations(),rotations,track.getScales());
  }
}
