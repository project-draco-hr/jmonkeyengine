{
  checkDead();
synchronized (threadLock) {
    while (!threadLock.get()) {
      try {
        threadLock.wait();
      }
 catch (      InterruptedException ex) {
      }
    }
    if (audioDisabled) {
      return;
    }
    if (src.getAudioData() instanceof AudioStream) {
      throw new UnsupportedOperationException("Cannot play instances " + "of audio streams. Use playSource() instead.");
    }
    if (src.getAudioData().isUpdateNeeded()) {
      updateAudioData(src.getAudioData());
    }
    int index=newChannel();
    if (index == -1) {
      return;
    }
    int sourceId=channels[index];
    clearChannel(index);
    setSourceParams(sourceId,src,true);
    attachAudioToSource(sourceId,src.getAudioData());
    chanSrcs[index]=src;
    al.alSourcePlay(sourceId);
  }
}
