{
  float length=taperLength * percent;
  float currentLength=0;
  Vector3f p=new Vector3f();
  int i;
  for (i=0; i < taperPoints.length - 6 && currentLength < length; i+=3) {
    p.set(taperPoints[i],taperPoints[i + 1],taperPoints[i + 2]);
    p.subtractLocal(taperPoints[i + 3],taperPoints[i + 4],taperPoints[i + 5]);
    currentLength+=p.length();
  }
  currentLength-=p.length();
  float leftLength=length - currentLength;
  float percentOnSegment=p.length() == 0 ? 0 : leftLength / p.length();
  Vector3f store=FastMath.interpolateLinear(percentOnSegment,new Vector3f(taperPoints[i],taperPoints[i + 1],taperPoints[i + 2]),new Vector3f(taperPoints[i + 3],taperPoints[i + 4],taperPoints[i + 5]));
  return store.y;
}
