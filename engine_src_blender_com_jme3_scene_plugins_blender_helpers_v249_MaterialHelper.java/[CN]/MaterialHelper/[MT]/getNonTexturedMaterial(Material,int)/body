{
  String[] textureParamNames=new String[]{TEXTURE_TYPE_DIFFUSE,TEXTURE_TYPE_NORMAL,TEXTURE_TYPE_GLOW,TEXTURE_TYPE_SPECULAR,TEXTURE_TYPE_ALPHA};
  Map<String,Texture> textures=new HashMap<String,Texture>(textureParamNames.length);
  for (  String textureParamName : textureParamNames) {
    MatParamTexture matParamTexture=material.getTextureParam(textureParamName);
    if (matParamTexture != null) {
      textures.put(textureParamName,matParamTexture.getTextureValue());
    }
  }
  if (textures.isEmpty()) {
    return material;
  }
 else {
    for (    Entry<String,Texture> textureParamName : textures.entrySet()) {
      String name=textureParamName.getValue().getName();
      try {
        int type=Integer.parseInt(name);
        if (type == imageType) {
          material.clearParam(textureParamName.getKey());
        }
      }
 catch (      NumberFormatException e) {
        LOGGER.log(Level.WARNING,"The name of the texture does not contain the texture type value! {0} will not be removed!",name);
      }
    }
    Material result=material.clone();
    for (    Entry<String,Texture> textureEntry : textures.entrySet()) {
      material.setTexture(textureEntry.getKey(),textureEntry.getValue());
    }
    return result;
  }
}
