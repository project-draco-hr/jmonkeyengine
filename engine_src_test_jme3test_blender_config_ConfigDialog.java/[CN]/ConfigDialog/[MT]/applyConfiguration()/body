{
  jCheckBoxUseModelKey.setSelected(blenderKeyConfiguration.useModelKey);
  if (blenderKeyConfiguration.lastVersionUsed != null) {
    jComboBoxVersionSelection.setSelectedItem(blenderKeyConfiguration.lastVersionUsed);
  }
 else {
    jComboBoxVersionSelection.setSelectedIndex(0);
    blenderKeyConfiguration.lastVersionUsed=(String)jComboBoxVersionSelection.getSelectedItem();
  }
  JRadioButtonLevel.setSelectedLevel(blenderKeyConfiguration.logLevel);
  this.reloadFilesList();
  DefaultTableModel model=(DefaultTableModel)jTableAnimations.getModel();
  BlenderKey blenderKey=blenderKeyConfiguration.lastUsedKey.get(blenderKeyConfiguration.lastVersionUsed);
  if (blenderKey != null) {
    String blenderKeyName=blenderKey.getName();
    List<String[]> selectedAnimations=blenderKeyConfiguration.selectedAnimations.get(blenderKeyName);
    if (selectedAnimations != null) {
      for (      String[] selectedAnimation : selectedAnimations) {
        for (int i=0; i < model.getRowCount(); ++i) {
          String objectName=(String)model.getValueAt(i,1);
          String animationName=(String)model.getValueAt(i,2);
          if (selectedAnimation[0].equals(objectName) && selectedAnimation[1].equals(animationName)) {
            model.setValueAt(Boolean.TRUE,i,0);
            break;
          }
        }
      }
    }
  }
}
