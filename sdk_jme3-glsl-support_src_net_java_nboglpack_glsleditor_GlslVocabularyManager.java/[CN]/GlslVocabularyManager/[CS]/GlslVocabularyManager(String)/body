{
  if (!mimetype.equals(GlslFragmentShaderDataLoader.REQUIRED_MIME) && !mimetype.equals(GlslVertexShaderDataLoader.REQUIRED_MIME) && !mimetype.equals(GlslGeometryShaderDataLoader.REQUIRED_MIME)) {
    throw new IllegalArgumentException(mimetype + " is no GLSL mime type");
  }
  this.mimetype=mimetype;
  if (vocabulary == null)   loadVocabulary();
  if (mimetype.equals(GlslFragmentShaderDataLoader.REQUIRED_MIME)) {
    vocabularyExtention=vocabulary.fragmentShaderVocabulary;
  }
 else   if (mimetype.equals(GlslVertexShaderDataLoader.REQUIRED_MIME)) {
    vocabularyExtention=vocabulary.vertexShaderVocabulary;
  }
 else {
    vocabularyExtention=vocabulary.geometryShaderVocabulary;
  }
  keySet=new AbstractSet<String>(){
    private final Set<String> mainSet=vocabulary.mainVocabulary.keySet();
    private final Set<String> extSet=vocabularyExtention.keySet();
    public Iterator<String> iterator(){
      return new Iterator<String>(){
        Iterator<String> mainIt=mainSet.iterator();
        Iterator<String> extIt=extSet.iterator();
        public boolean hasNext(){
          return mainIt.hasNext() || extIt.hasNext();
        }
        public String next(){
          if (mainIt.hasNext())           return mainIt.next();
 else           return extIt.next();
        }
        public void remove(){
          throw new UnsupportedOperationException("Not supported yet.");
        }
      }
;
    }
    public int size(){
      return mainSet.size() + extSet.size();
    }
  }
;
}
