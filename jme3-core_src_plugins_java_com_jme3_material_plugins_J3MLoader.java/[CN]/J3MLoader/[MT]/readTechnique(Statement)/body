{
  isUseNodes=false;
  String[] split=techStat.getLine().split(whitespacePattern);
  if (split.length == 1) {
    technique=new TechniqueDef(null);
  }
 else   if (split.length == 2) {
    String techName=split[1];
    technique=new TechniqueDef(techName);
  }
 else {
    throw new IOException("Technique statement syntax incorrect");
  }
  for (  Statement statement : techStat.getContents()) {
    readTechniqueStatement(statement);
  }
  if (isUseNodes) {
    nodesLoaderDelegate.computeConditions();
    technique.setShaderFile(technique.hashCode() + "",technique.hashCode() + "","GLSL100","GLSL100");
  }
  if (shaderName.containsKey(Shader.ShaderType.Vertex) && shaderName.containsKey(Shader.ShaderType.Fragment)) {
    technique.setShaderFile(shaderName,shaderLanguage);
  }
  materialDef.addTechniqueDef(technique);
  technique=null;
  shaderLanguage.clear();
  shaderName.clear();
}
