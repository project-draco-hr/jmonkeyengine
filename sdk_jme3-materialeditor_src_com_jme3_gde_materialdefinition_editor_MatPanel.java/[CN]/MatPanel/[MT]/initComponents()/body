{
  toolBar=new javax.swing.JPanel();
  sphereButton=new javax.swing.JButton();
  boxButton=new javax.swing.JButton();
  reloadButton=new javax.swing.JButton();
  quadButton=new javax.swing.JButton();
  expandButton=new javax.swing.JButton();
  previewLabel=new javax.swing.JLabel();
  setOpaque(false);
  setLayout(null);
  toolBar.setOpaque(false);
  sphereButton.setBackground(new java.awt.Color(153,153,153));
  sphereButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/jme3/gde/materialdefinition/icons/Sphere.png")));
  sphereButton.setToolTipText("Sphere");
  sphereButton.setBorder(null);
  sphereButton.setBorderPainted(false);
  sphereButton.setContentAreaFilled(false);
  sphereButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
  sphereButton.setFocusable(false);
  sphereButton.setIconTextGap(0);
  sphereButton.setMaximumSize(new java.awt.Dimension(24,24));
  sphereButton.setMinimumSize(new java.awt.Dimension(24,24));
  sphereButton.setPreferredSize(new java.awt.Dimension(24,24));
  sphereButton.addMouseListener(new java.awt.event.MouseAdapter(){
    public void mouseEntered(    java.awt.event.MouseEvent evt){
      sphereButtonMouseEntered(evt);
    }
    public void mouseExited(    java.awt.event.MouseEvent evt){
      sphereButtonMouseExited(evt);
    }
  }
);
  sphereButton.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      sphereButtonActionPerformed(evt);
    }
  }
);
  boxButton.setBackground(new java.awt.Color(153,153,153));
  boxButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/jme3/gde/materialdefinition/icons/cube.png")));
  boxButton.setToolTipText("Cube");
  boxButton.setBorder(null);
  boxButton.setBorderPainted(false);
  boxButton.setContentAreaFilled(false);
  boxButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
  boxButton.setFocusable(false);
  boxButton.setIconTextGap(0);
  boxButton.setMaximumSize(new java.awt.Dimension(24,24));
  boxButton.setMinimumSize(new java.awt.Dimension(24,24));
  boxButton.setPreferredSize(new java.awt.Dimension(24,24));
  boxButton.addMouseListener(new java.awt.event.MouseAdapter(){
    public void mouseEntered(    java.awt.event.MouseEvent evt){
      boxButtonMouseEntered(evt);
    }
    public void mouseExited(    java.awt.event.MouseEvent evt){
      boxButtonMouseExited(evt);
    }
  }
);
  boxButton.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      boxButtonActionPerformed(evt);
    }
  }
);
  reloadButton.setBackground(new java.awt.Color(153,153,153));
  reloadButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/jme3/gde/materialdefinition/icons/reload.png")));
  reloadButton.setToolTipText("Refresh");
  reloadButton.setBorder(null);
  reloadButton.setBorderPainted(false);
  reloadButton.setContentAreaFilled(false);
  reloadButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
  reloadButton.setFocusable(false);
  reloadButton.setIconTextGap(0);
  reloadButton.setMaximumSize(new java.awt.Dimension(24,24));
  reloadButton.setMinimumSize(new java.awt.Dimension(24,24));
  reloadButton.setPreferredSize(new java.awt.Dimension(24,24));
  reloadButton.addMouseListener(new java.awt.event.MouseAdapter(){
    public void mouseEntered(    java.awt.event.MouseEvent evt){
      reloadButtonMouseEntered(evt);
    }
    public void mouseExited(    java.awt.event.MouseEvent evt){
      reloadButtonMouseExited(evt);
    }
  }
);
  reloadButton.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      reloadButtonActionPerformed(evt);
    }
  }
);
  quadButton.setBackground(new java.awt.Color(153,153,153));
  quadButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/jme3/gde/materialdefinition/icons/Quad.png")));
  quadButton.setToolTipText("Quad");
  quadButton.setBorder(null);
  quadButton.setBorderPainted(false);
  quadButton.setContentAreaFilled(false);
  quadButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
  quadButton.setFocusable(false);
  quadButton.setIconTextGap(0);
  quadButton.setMaximumSize(new java.awt.Dimension(24,24));
  quadButton.setMinimumSize(new java.awt.Dimension(24,24));
  quadButton.setPreferredSize(new java.awt.Dimension(24,24));
  quadButton.addMouseListener(new java.awt.event.MouseAdapter(){
    public void mouseEntered(    java.awt.event.MouseEvent evt){
      quadButtonMouseEntered(evt);
    }
    public void mouseExited(    java.awt.event.MouseEvent evt){
      quadButtonMouseExited(evt);
    }
  }
);
  quadButton.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      quadButtonActionPerformed(evt);
    }
  }
);
  expandButton.setBackground(new java.awt.Color(153,153,153));
  expandButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/jme3/gde/materialdefinition/icons/expend.png")));
  expandButton.setToolTipText("Expand");
  expandButton.setBorder(null);
  expandButton.setBorderPainted(false);
  expandButton.setContentAreaFilled(false);
  expandButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
  expandButton.setFocusable(false);
  expandButton.setIconTextGap(0);
  expandButton.setMaximumSize(new java.awt.Dimension(24,24));
  expandButton.setMinimumSize(new java.awt.Dimension(24,24));
  expandButton.setPreferredSize(new java.awt.Dimension(24,24));
  expandButton.addMouseListener(new java.awt.event.MouseAdapter(){
    public void mouseEntered(    java.awt.event.MouseEvent evt){
      expandButtonMouseEntered(evt);
    }
    public void mouseExited(    java.awt.event.MouseEvent evt){
      expandButtonMouseExited(evt);
    }
  }
);
  expandButton.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      expandButtonActionPerformed(evt);
    }
  }
);
  javax.swing.GroupLayout toolBarLayout=new javax.swing.GroupLayout(toolBar);
  toolBar.setLayout(toolBarLayout);
  toolBarLayout.setHorizontalGroup(toolBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(toolBarLayout.createSequentialGroup().addGroup(toolBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(sphereButton,javax.swing.GroupLayout.PREFERRED_SIZE,16,javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(boxButton,javax.swing.GroupLayout.PREFERRED_SIZE,16,javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(quadButton,javax.swing.GroupLayout.PREFERRED_SIZE,16,javax.swing.GroupLayout.PREFERRED_SIZE)).addContainerGap(104,Short.MAX_VALUE)).addGroup(toolBarLayout.createSequentialGroup().addComponent(expandButton,javax.swing.GroupLayout.PREFERRED_SIZE,16,javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,javax.swing.GroupLayout.DEFAULT_SIZE,Short.MAX_VALUE).addComponent(reloadButton,javax.swing.GroupLayout.PREFERRED_SIZE,16,javax.swing.GroupLayout.PREFERRED_SIZE)));
  toolBarLayout.setVerticalGroup(toolBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(toolBarLayout.createSequentialGroup().addGroup(toolBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(expandButton,javax.swing.GroupLayout.PREFERRED_SIZE,16,javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(reloadButton,javax.swing.GroupLayout.PREFERRED_SIZE,16,javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,39,Short.MAX_VALUE).addComponent(sphereButton,javax.swing.GroupLayout.PREFERRED_SIZE,16,javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(boxButton,javax.swing.GroupLayout.PREFERRED_SIZE,16,javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(quadButton,javax.swing.GroupLayout.PREFERRED_SIZE,16,javax.swing.GroupLayout.PREFERRED_SIZE).addGap(5,5,5)));
  add(toolBar);
  toolBar.setBounds(0,0,120,120);
  previewLabel.setBackground(new java.awt.Color(100,100,100));
  previewLabel.setForeground(new java.awt.Color(100,100,100));
  previewLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
  previewLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
  previewLabel.setIconTextGap(0);
  previewLabel.setMaximumSize(new java.awt.Dimension(100,100));
  previewLabel.setMinimumSize(new java.awt.Dimension(100,100));
  previewLabel.setOpaque(true);
  previewLabel.setPreferredSize(new java.awt.Dimension(100,100));
  add(previewLabel);
  previewLabel.setBounds(20,20,100,100);
}
