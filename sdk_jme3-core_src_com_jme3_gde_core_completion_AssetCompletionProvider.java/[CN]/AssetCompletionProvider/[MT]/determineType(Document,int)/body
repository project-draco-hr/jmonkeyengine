{
  try {
    final StyledDocument bDoc=(StyledDocument)document;
    final int lineStartOffset=getRowFirstNonWhite(bDoc,caretOffset);
    final String line=bDoc.getText(lineStartOffset,caretOffset - lineStartOffset).trim();
    if (hasLastCommand(line,".loadModel(\"")) {
      return AssetType.Model;
    }
 else     if (hasLastCommand(line,".loadMaterial(\"")) {
      return AssetType.Material;
    }
 else     if (hasLastCommand(line,".loadFilter(\"")) {
      return AssetType.Filter;
    }
 else     if (hasLastCommand(line,".loadTexture(\"")) {
      return AssetType.Texture;
    }
 else     if (hasLastCommand(line,".loadSound(\"")) {
      return AssetType.Sound;
    }
 else     if (hasLastCommand(line,".loadFont(\"")) {
      return AssetType.Font;
    }
 else     if (hasLastCommand(line,"new Material(")) {
      return AssetType.MatDef;
    }
 else     if (hasLastCommand(line,"new AudioNode(")) {
      return AssetType.Sound;
    }
 else     if (hasLastCommand(line,".addXml(\"")) {
      return AssetType.Xml;
    }
 else     if (hasLastCommand(line,".fromXml(\"")) {
      return AssetType.Xml;
    }
  }
 catch (  BadLocationException ex) {
    Exceptions.printStackTrace(ex);
  }
  return AssetType.Invalid;
}
